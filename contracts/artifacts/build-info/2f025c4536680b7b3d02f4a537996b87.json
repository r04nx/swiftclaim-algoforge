{"id":"2f025c4536680b7b3d02f4a537996b87","_format":"hh-sol-build-info-1","solcVersion":"0.8.19","solcLongVersion":"0.8.19+commit.7dd6d404","input":{"language":"Solidity","sources":{"contracts/InsuranceClaims.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract InsuranceClaims {\r\n    address public owner;\r\n    address public insurer;\r\n    uint256 public nextClaimId;\r\n    uint256 public nextRecordId;\r\n\r\n    struct PolicyTerms {\r\n        uint256 maxCoveragePerClaim;\r\n        uint256 copayPercentage;\r\n        string[] coveredTreatments;\r\n        string[] excludedTreatments;\r\n        uint256 waitingPeriod;\r\n        uint256 maxClaimsPerYear;\r\n        bool preExistingConditionsCovered;\r\n        uint256 maxHospitalizationDays;\r\n        uint256 maxRoomRent;\r\n        uint256 maxICUCharges;\r\n        uint256 maxOperationCharges;\r\n        uint256 maxMedicineCharges;\r\n        uint256 maxDiagnosticCharges;\r\n        uint256 maxAmbulanceCharges;\r\n        uint256 maxPreHospitalizationDays;\r\n        uint256 maxPostHospitalizationDays;\r\n        // Travel-specific fields\r\n        uint256 delayTimeMinutes;\r\n        bool cancellationStatus;\r\n        uint256 travelTimeHours;\r\n    }\r\n\r\n    struct Policy {\r\n        address policyholder;\r\n        uint256 coverageAmount;\r\n        uint256 startDate;\r\n        uint256 endDate;\r\n        string policyType;\r\n        bool isActive;\r\n        PolicyTerms terms;\r\n        uint256 claimsCount;\r\n    }\r\n\r\n    struct Claim {\r\n        string policyNumber;\r\n        address policyholder;\r\n        uint256 amount;\r\n        string treatmentType;\r\n        uint256 timestamp;\r\n        bool isVerified;\r\n        bool isPaid;\r\n        uint256 paidAmount;\r\n        // Health claim specific fields\r\n        string aabhaId;\r\n        uint256 patientAdmissionDate;\r\n        // Travel claim specific fields\r\n        uint256 flightId;\r\n        bool flightCancellationStatus;\r\n        uint256 flightDelayMinutes;\r\n        uint256 flightDurationMinutes;\r\n    }\r\n\r\n    mapping(string => Policy) public policies;\r\n    mapping(uint256 => Claim) public claims;\r\n    mapping(string => uint256[]) public policyClaims;\r\n    mapping(string => uint256) public claimsCountPerYear;\r\n\r\n    event PolicyCreated(string indexed policyNumber, address indexed policyholder, uint256 coverageAmount, uint256 startDate, uint256 endDate, string policyType);\r\n    event ClaimSubmitted(uint256 indexed claimId, string indexed policyNumber, address indexed claimant, uint256 amount, string treatmentType);\r\n    event ClaimVerified(uint256 indexed claimId);\r\n    event ClaimProcessed(uint256 indexed claimId, string indexed policyNumber, address indexed claimant, uint256 paidAmount);\r\n\r\n    constructor() {\r\n        owner = msg.sender;\r\n        nextClaimId = 1;\r\n        nextRecordId = 1;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Only owner can call this function\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyInsurer() {\r\n        require(msg.sender == insurer, \"Only insurer can call this function\");\r\n        _;\r\n    }\r\n\r\n    modifier policyExists(string memory _policyNumber) {\r\n        require(policies[_policyNumber].policyholder != address(0), \"Policy does not exist\");\r\n        _;\r\n    }\r\n\r\n    modifier claimExists(uint256 _claimId) {\r\n        require(claims[_claimId].timestamp != 0, \"Claim does not exist\");\r\n        _;\r\n    }\r\n\r\n    function setInsurer(address _insurer) public onlyOwner {\r\n        insurer = _insurer;\r\n    }\r\n\r\n    function createPolicy(\r\n        string memory _policyNumber,\r\n        address _policyholder,\r\n        uint256 _coverageAmount,\r\n        uint256 _startDate,\r\n        uint256 _endDate,\r\n        string memory _policyType,\r\n        uint256 _maxCoveragePerClaim,\r\n        uint256 _copayPercentage,\r\n        string[] memory _coveredTreatments,\r\n        string[] memory _excludedTreatments,\r\n        uint256 _waitingPeriod,\r\n        uint256 _maxClaimsPerYear,\r\n        bool _preExistingConditionsCovered,\r\n        uint256 _maxHospitalizationDays,\r\n        uint256 _maxRoomRent,\r\n        uint256 _maxICUCharges,\r\n        uint256 _maxOperationCharges,\r\n        uint256 _maxMedicineCharges,\r\n        uint256 _maxDiagnosticCharges,\r\n        uint256 _maxAmbulanceCharges,\r\n        uint256 _maxPreHospitalizationDays,\r\n        uint256 _maxPostHospitalizationDays,\r\n        uint256 _delayTimeMinutes,\r\n        bool _cancellationStatus,\r\n        uint256 _travelTimeHours\r\n    ) external onlyInsurer {\r\n        require(_policyholder != address(0), \"Invalid policyholder address\");\r\n        require(_coverageAmount > 0, \"Coverage amount must be greater than zero\");\r\n        require(_startDate > 0, \"Invalid start date\");\r\n        require(_endDate > _startDate, \"End date must be after start date\");\r\n        require(_maxCoveragePerClaim <= _coverageAmount, \"Max coverage per claim cannot exceed total coverage\");\r\n        require(_copayPercentage <= 100, \"Copay percentage cannot exceed 100\");\r\n        require(_waitingPeriod <= 90, \"Waiting period cannot exceed 90 days\");\r\n        require(_maxClaimsPerYear > 0 && _maxClaimsPerYear <= 10, \"Max claims per year must be between 1 and 10\");\r\n        require(_maxHospitalizationDays <= 365, \"Max hospitalization days cannot exceed 365\");\r\n        require(_maxPreHospitalizationDays <= 30, \"Max pre-hospitalization days cannot exceed 30\");\r\n        require(_maxPostHospitalizationDays <= 60, \"Max post-hospitalization days cannot exceed 60\");\r\n        require(_delayTimeMinutes <= 480, \"Delay time cannot exceed 8 hours\");\r\n        require(_travelTimeHours <= 48, \"Travel time cannot exceed 48 hours\");\r\n\r\n        // Validate policy type\r\n        require(\r\n            keccak256(bytes(_policyType)) == keccak256(bytes(\"HEALTH\")) ||\r\n            keccak256(bytes(_policyType)) == keccak256(bytes(\"TRAVEL\")),\r\n            \"Invalid policy type\"\r\n        );\r\n\r\n        Policy storage policy = policies[_policyNumber];\r\n        policy.policyholder = _policyholder;\r\n        policy.coverageAmount = _coverageAmount;\r\n        policy.startDate = _startDate;\r\n        policy.endDate = _endDate;\r\n        policy.policyType = _policyType;\r\n        policy.terms.maxCoveragePerClaim = _maxCoveragePerClaim;\r\n        policy.terms.copayPercentage = _copayPercentage;\r\n        policy.terms.coveredTreatments = _coveredTreatments;\r\n        policy.terms.excludedTreatments = _excludedTreatments;\r\n        policy.terms.waitingPeriod = _waitingPeriod;\r\n        policy.terms.maxClaimsPerYear = _maxClaimsPerYear;\r\n        policy.terms.preExistingConditionsCovered = _preExistingConditionsCovered;\r\n        policy.terms.maxHospitalizationDays = _maxHospitalizationDays;\r\n        policy.terms.maxRoomRent = _maxRoomRent;\r\n        policy.terms.maxICUCharges = _maxICUCharges;\r\n        policy.terms.maxOperationCharges = _maxOperationCharges;\r\n        policy.terms.maxMedicineCharges = _maxMedicineCharges;\r\n        policy.terms.maxDiagnosticCharges = _maxDiagnosticCharges;\r\n        policy.terms.maxAmbulanceCharges = _maxAmbulanceCharges;\r\n        policy.terms.maxPreHospitalizationDays = _maxPreHospitalizationDays;\r\n        policy.terms.maxPostHospitalizationDays = _maxPostHospitalizationDays;\r\n        policy.terms.delayTimeMinutes = _delayTimeMinutes;\r\n        policy.terms.cancellationStatus = _cancellationStatus;\r\n        policy.terms.travelTimeHours = _travelTimeHours;\r\n        policy.isActive = true;\r\n        policy.claimsCount = 0;\r\n\r\n        emit PolicyCreated(\r\n            _policyNumber,\r\n            _policyholder,\r\n            _coverageAmount,\r\n            _startDate,\r\n            _endDate,\r\n            _policyType\r\n        );\r\n    }\r\n\r\n    function submitClaim(\r\n        string memory _policyNumber,\r\n        uint256 _amount,\r\n        string memory _treatmentType,\r\n        string memory _aabhaId,\r\n        uint256 _patientAdmissionDate,\r\n        uint256 _flightId,\r\n        bool _flightCancellationStatus,\r\n        uint256 _flightDelayMinutes,\r\n        uint256 _flightDurationMinutes\r\n    ) external {\r\n        Policy storage policy = policies[_policyNumber];\r\n        require(policy.policyholder == msg.sender, \"Only policyholder can submit claims\");\r\n        require(policy.isActive, \"Policy is not active\");\r\n        require(block.timestamp >= policy.startDate + (policy.terms.waitingPeriod * 1 days), \"Waiting period not over\");\r\n        require(block.timestamp <= policy.endDate, \"Policy expired\");\r\n        require(_amount > 0, \"Claim amount must be greater than zero\");\r\n        require(_amount <= policy.terms.maxCoveragePerClaim, \"Claim amount exceeds maximum coverage per claim\");\r\n        require(policy.claimsCount < policy.terms.maxClaimsPerYear, \"Maximum claims per year reached\");\r\n\r\n        // Validate treatment type based on policy type\r\n        if (keccak256(bytes(policy.policyType)) == keccak256(bytes(\"HEALTH\"))) {\r\n            require(bytes(_aabhaId).length > 0, \"Health claim must include AABHA ID\");\r\n            require(_patientAdmissionDate > 0, \"Health claim must include admission date\");\r\n            require(_flightId == 0, \"Health claim should not include flight details\");\r\n            require(!_flightCancellationStatus, \"Health claim should not include flight cancellation\");\r\n            require(_flightDelayMinutes == 0, \"Health claim should not include flight delay\");\r\n            require(_flightDurationMinutes == 0, \"Health claim should not include flight duration\");\r\n\r\n            // First check if treatment is excluded\r\n            for (uint256 i = 0; i < policy.terms.excludedTreatments.length; i++) {\r\n                if (keccak256(bytes(policy.terms.excludedTreatments[i])) == keccak256(bytes(_treatmentType))) {\r\n                    revert(\"Treatment excluded by policy\");\r\n                }\r\n            }\r\n\r\n            // Then check if treatment is covered\r\n            bool isTreatmentCovered = false;\r\n            for (uint256 i = 0; i < policy.terms.coveredTreatments.length; i++) {\r\n                if (keccak256(bytes(policy.terms.coveredTreatments[i])) == keccak256(bytes(_treatmentType))) {\r\n                    isTreatmentCovered = true;\r\n                    break;\r\n                }\r\n            }\r\n            require(isTreatmentCovered, \"Treatment not covered by policy\");\r\n\r\n        } else if (keccak256(bytes(policy.policyType)) == keccak256(bytes(\"TRAVEL\"))) {\r\n            require(bytes(_aabhaId).length == 0, \"Travel claim should not include AABHA ID\");\r\n            require(_patientAdmissionDate == 0, \"Travel claim should not include admission date\");\r\n            require(_flightId > 0, \"Travel claim must include flight ID\");\r\n            require(_flightDelayMinutes <= policy.terms.delayTimeMinutes, \"Flight delay exceeds policy limit\");\r\n            require(_flightDurationMinutes <= (policy.terms.travelTimeHours * 60), \"Flight duration exceeds policy limit\");\r\n            require(\r\n                keccak256(bytes(_treatmentType)) == keccak256(bytes(\"DELAY\")) ||\r\n                keccak256(bytes(_treatmentType)) == keccak256(bytes(\"CANCELLATION\")),\r\n                \"Invalid travel claim type\"\r\n            );\r\n        }\r\n\r\n        uint256 claimId = nextClaimId++;\r\n        Claim storage claim = claims[claimId];\r\n        claim.policyNumber = _policyNumber;\r\n        claim.policyholder = msg.sender;\r\n        claim.amount = _amount;\r\n        claim.treatmentType = _treatmentType;\r\n        claim.aabhaId = _aabhaId;\r\n        claim.patientAdmissionDate = _patientAdmissionDate;\r\n        claim.flightId = _flightId;\r\n        claim.flightCancellationStatus = _flightCancellationStatus;\r\n        claim.flightDelayMinutes = _flightDelayMinutes;\r\n        claim.flightDurationMinutes = _flightDurationMinutes;\r\n        claim.isVerified = false;\r\n        claim.isPaid = false;\r\n        claim.paidAmount = 0;\r\n        claim.timestamp = block.timestamp;\r\n\r\n        policy.claimsCount++;\r\n\r\n        policyClaims[_policyNumber].push(claimId);\r\n        claimsCountPerYear[_policyNumber]++;\r\n        emit ClaimSubmitted(\r\n            claimId,\r\n            _policyNumber,\r\n            msg.sender,\r\n            _amount,\r\n            _treatmentType\r\n        );\r\n    }\r\n\r\n    function verifyClaim(uint256 _claimId) public claimExists(_claimId) {\r\n        Claim storage claim = claims[_claimId];\r\n        Policy storage policy = policies[claim.policyNumber];\r\n        \r\n        // Additional verification based on policy type\r\n        if (keccak256(bytes(policy.policyType)) == keccak256(bytes(\"HEALTH\"))) {\r\n            require(bytes(claim.aabhaId).length > 0, \"Missing AABHA ID\");\r\n            require(claim.patientAdmissionDate > 0, \"Missing admission date\");\r\n        } else {\r\n            require(claim.flightId > 0, \"Missing flight ID\");\r\n            require(claim.flightDelayMinutes <= policy.terms.delayTimeMinutes, \"Flight delay exceeds policy limit\");\r\n            require(claim.flightDurationMinutes <= policy.terms.travelTimeHours * 60, \"Flight duration exceeds policy limit\");\r\n            require(claim.flightCancellationStatus == policy.terms.cancellationStatus, \"Flight cancellation status mismatch\");\r\n        }\r\n\r\n        claim.isVerified = true;\r\n        emit ClaimVerified(_claimId);\r\n    }\r\n\r\n    function processClaim(uint256 _claimId) external {\r\n        Claim storage claim = claims[_claimId];\r\n        require(claim.isVerified, \"Claim not verified\");\r\n        require(!claim.isPaid, \"Claim already paid\");\r\n\r\n        Policy storage policy = policies[claim.policyNumber];\r\n\r\n        uint256 copayAmount = (claim.amount * policy.terms.copayPercentage) / 100;\r\n        uint256 payableAmount = claim.amount - copayAmount;\r\n\r\n        claim.isPaid = true;\r\n        claim.paidAmount = payableAmount;\r\n\r\n        emit ClaimProcessed(\r\n            _claimId,\r\n            claim.policyNumber,\r\n            claim.policyholder,\r\n            payableAmount\r\n        );\r\n    }\r\n\r\n    function getPolicy(string memory _policyNumber) public view returns (\r\n        address policyholder,\r\n        uint256 coverageAmount,\r\n        uint256 startDate,\r\n        uint256 endDate,\r\n        string memory policyType,\r\n        bool isActive\r\n    ) {\r\n        Policy storage policy = policies[_policyNumber];\r\n        require(policy.policyholder != address(0), \"Policy does not exist\");\r\n        return (\r\n            policy.policyholder,\r\n            policy.coverageAmount,\r\n            policy.startDate,\r\n            policy.endDate,\r\n            policy.policyType,\r\n            policy.isActive\r\n        );\r\n    }\r\n\r\n    function getClaim(uint256 _claimId) public view claimExists(_claimId) returns (\r\n        string memory policyNumber,\r\n        address policyholder,\r\n        uint256 amount,\r\n        string memory treatmentType,\r\n        uint256 timestamp,\r\n        bool isVerified,\r\n        bool isPaid,\r\n        uint256 paidAmount,\r\n        string memory aabhaId,\r\n        uint256 patientAdmissionDate,\r\n        uint256 flightId,\r\n        bool flightCancellationStatus,\r\n        uint256 flightDelayMinutes,\r\n        uint256 flightDurationMinutes\r\n    ) {\r\n        Claim storage claim = claims[_claimId];\r\n        return (\r\n            claim.policyNumber,\r\n            claim.policyholder,\r\n            claim.amount,\r\n            claim.treatmentType,\r\n            claim.timestamp,\r\n            claim.isVerified,\r\n            claim.isPaid,\r\n            claim.paidAmount,\r\n            claim.aabhaId,\r\n            claim.patientAdmissionDate,\r\n            claim.flightId,\r\n            claim.flightCancellationStatus,\r\n            claim.flightDelayMinutes,\r\n            claim.flightDurationMinutes\r\n        );\r\n    }\r\n} "}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"contracts/InsuranceClaims.sol":{"ast":{"absolutePath":"contracts/InsuranceClaims.sol","exportedSymbols":{"InsuranceClaims":[1410]},"id":1411,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"InsuranceClaims","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1410,"linearizedBaseContracts":[1410],"name":"InsuranceClaims","nameLocation":"69:15:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"8da5cb5b","id":3,"mutability":"mutable","name":"owner","nameLocation":"107:5:0","nodeType":"VariableDeclaration","scope":1410,"src":"92:20:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2,"name":"address","nodeType":"ElementaryTypeName","src":"92:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"dbc837c5","id":5,"mutability":"mutable","name":"insurer","nameLocation":"134:7:0","nodeType":"VariableDeclaration","scope":1410,"src":"119:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4,"name":"address","nodeType":"ElementaryTypeName","src":"119:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"a0021cf1","id":7,"mutability":"mutable","name":"nextClaimId","nameLocation":"163:11:0","nodeType":"VariableDeclaration","scope":1410,"src":"148:26:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6,"name":"uint256","nodeType":"ElementaryTypeName","src":"148:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"dbde207d","id":9,"mutability":"mutable","name":"nextRecordId","nameLocation":"196:12:0","nodeType":"VariableDeclaration","scope":1410,"src":"181:27:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8,"name":"uint256","nodeType":"ElementaryTypeName","src":"181:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"canonicalName":"InsuranceClaims.PolicyTerms","id":50,"members":[{"constant":false,"id":11,"mutability":"mutable","name":"maxCoveragePerClaim","nameLocation":"255:19:0","nodeType":"VariableDeclaration","scope":50,"src":"247:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10,"name":"uint256","nodeType":"ElementaryTypeName","src":"247:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13,"mutability":"mutable","name":"copayPercentage","nameLocation":"293:15:0","nodeType":"VariableDeclaration","scope":50,"src":"285:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12,"name":"uint256","nodeType":"ElementaryTypeName","src":"285:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16,"mutability":"mutable","name":"coveredTreatments","nameLocation":"328:17:0","nodeType":"VariableDeclaration","scope":50,"src":"319:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14,"name":"string","nodeType":"ElementaryTypeName","src":"319:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":15,"nodeType":"ArrayTypeName","src":"319:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":19,"mutability":"mutable","name":"excludedTreatments","nameLocation":"365:18:0","nodeType":"VariableDeclaration","scope":50,"src":"356:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":17,"name":"string","nodeType":"ElementaryTypeName","src":"356:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":18,"nodeType":"ArrayTypeName","src":"356:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":21,"mutability":"mutable","name":"waitingPeriod","nameLocation":"402:13:0","nodeType":"VariableDeclaration","scope":50,"src":"394:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20,"name":"uint256","nodeType":"ElementaryTypeName","src":"394:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":23,"mutability":"mutable","name":"maxClaimsPerYear","nameLocation":"434:16:0","nodeType":"VariableDeclaration","scope":50,"src":"426:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":22,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25,"mutability":"mutable","name":"preExistingConditionsCovered","nameLocation":"466:28:0","nodeType":"VariableDeclaration","scope":50,"src":"461:33:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":24,"name":"bool","nodeType":"ElementaryTypeName","src":"461:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":27,"mutability":"mutable","name":"maxHospitalizationDays","nameLocation":"513:22:0","nodeType":"VariableDeclaration","scope":50,"src":"505:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29,"mutability":"mutable","name":"maxRoomRent","nameLocation":"554:11:0","nodeType":"VariableDeclaration","scope":50,"src":"546:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":28,"name":"uint256","nodeType":"ElementaryTypeName","src":"546:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":31,"mutability":"mutable","name":"maxICUCharges","nameLocation":"584:13:0","nodeType":"VariableDeclaration","scope":50,"src":"576:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30,"name":"uint256","nodeType":"ElementaryTypeName","src":"576:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":33,"mutability":"mutable","name":"maxOperationCharges","nameLocation":"616:19:0","nodeType":"VariableDeclaration","scope":50,"src":"608:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32,"name":"uint256","nodeType":"ElementaryTypeName","src":"608:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":35,"mutability":"mutable","name":"maxMedicineCharges","nameLocation":"654:18:0","nodeType":"VariableDeclaration","scope":50,"src":"646:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":37,"mutability":"mutable","name":"maxDiagnosticCharges","nameLocation":"691:20:0","nodeType":"VariableDeclaration","scope":50,"src":"683:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":36,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39,"mutability":"mutable","name":"maxAmbulanceCharges","nameLocation":"730:19:0","nodeType":"VariableDeclaration","scope":50,"src":"722:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"722:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":41,"mutability":"mutable","name":"maxPreHospitalizationDays","nameLocation":"768:25:0","nodeType":"VariableDeclaration","scope":50,"src":"760:33:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40,"name":"uint256","nodeType":"ElementaryTypeName","src":"760:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":43,"mutability":"mutable","name":"maxPostHospitalizationDays","nameLocation":"812:26:0","nodeType":"VariableDeclaration","scope":50,"src":"804:34:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42,"name":"uint256","nodeType":"ElementaryTypeName","src":"804:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":45,"mutability":"mutable","name":"delayTimeMinutes","nameLocation":"892:16:0","nodeType":"VariableDeclaration","scope":50,"src":"884:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":44,"name":"uint256","nodeType":"ElementaryTypeName","src":"884:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":47,"mutability":"mutable","name":"cancellationStatus","nameLocation":"924:18:0","nodeType":"VariableDeclaration","scope":50,"src":"919:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":46,"name":"bool","nodeType":"ElementaryTypeName","src":"919:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":49,"mutability":"mutable","name":"travelTimeHours","nameLocation":"961:15:0","nodeType":"VariableDeclaration","scope":50,"src":"953:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":48,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PolicyTerms","nameLocation":"224:11:0","nodeType":"StructDefinition","scope":1410,"src":"217:767:0","visibility":"public"},{"canonicalName":"InsuranceClaims.Policy","id":68,"members":[{"constant":false,"id":52,"mutability":"mutable","name":"policyholder","nameLocation":"1025:12:0","nodeType":"VariableDeclaration","scope":68,"src":"1017:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":51,"name":"address","nodeType":"ElementaryTypeName","src":"1017:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":54,"mutability":"mutable","name":"coverageAmount","nameLocation":"1056:14:0","nodeType":"VariableDeclaration","scope":68,"src":"1048:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":53,"name":"uint256","nodeType":"ElementaryTypeName","src":"1048:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":56,"mutability":"mutable","name":"startDate","nameLocation":"1089:9:0","nodeType":"VariableDeclaration","scope":68,"src":"1081:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":55,"name":"uint256","nodeType":"ElementaryTypeName","src":"1081:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":58,"mutability":"mutable","name":"endDate","nameLocation":"1117:7:0","nodeType":"VariableDeclaration","scope":68,"src":"1109:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":57,"name":"uint256","nodeType":"ElementaryTypeName","src":"1109:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":60,"mutability":"mutable","name":"policyType","nameLocation":"1142:10:0","nodeType":"VariableDeclaration","scope":68,"src":"1135:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":59,"name":"string","nodeType":"ElementaryTypeName","src":"1135:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":62,"mutability":"mutable","name":"isActive","nameLocation":"1168:8:0","nodeType":"VariableDeclaration","scope":68,"src":"1163:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":61,"name":"bool","nodeType":"ElementaryTypeName","src":"1163:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":65,"mutability":"mutable","name":"terms","nameLocation":"1199:5:0","nodeType":"VariableDeclaration","scope":68,"src":"1187:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_PolicyTerms_$50_storage_ptr","typeString":"struct InsuranceClaims.PolicyTerms"},"typeName":{"id":64,"nodeType":"UserDefinedTypeName","pathNode":{"id":63,"name":"PolicyTerms","nameLocations":["1187:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":50,"src":"1187:11:0"},"referencedDeclaration":50,"src":"1187:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_PolicyTerms_$50_storage_ptr","typeString":"struct InsuranceClaims.PolicyTerms"}},"visibility":"internal"},{"constant":false,"id":67,"mutability":"mutable","name":"claimsCount","nameLocation":"1223:11:0","nodeType":"VariableDeclaration","scope":68,"src":"1215:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":66,"name":"uint256","nodeType":"ElementaryTypeName","src":"1215:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Policy","nameLocation":"999:6:0","nodeType":"StructDefinition","scope":1410,"src":"992:250:0","visibility":"public"},{"canonicalName":"InsuranceClaims.Claim","id":97,"members":[{"constant":false,"id":70,"mutability":"mutable","name":"policyNumber","nameLocation":"1281:12:0","nodeType":"VariableDeclaration","scope":97,"src":"1274:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":69,"name":"string","nodeType":"ElementaryTypeName","src":"1274:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":72,"mutability":"mutable","name":"policyholder","nameLocation":"1312:12:0","nodeType":"VariableDeclaration","scope":97,"src":"1304:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":71,"name":"address","nodeType":"ElementaryTypeName","src":"1304:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":74,"mutability":"mutable","name":"amount","nameLocation":"1343:6:0","nodeType":"VariableDeclaration","scope":97,"src":"1335:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":73,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":76,"mutability":"mutable","name":"treatmentType","nameLocation":"1367:13:0","nodeType":"VariableDeclaration","scope":97,"src":"1360:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":75,"name":"string","nodeType":"ElementaryTypeName","src":"1360:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":78,"mutability":"mutable","name":"timestamp","nameLocation":"1399:9:0","nodeType":"VariableDeclaration","scope":97,"src":"1391:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77,"name":"uint256","nodeType":"ElementaryTypeName","src":"1391:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":80,"mutability":"mutable","name":"isVerified","nameLocation":"1424:10:0","nodeType":"VariableDeclaration","scope":97,"src":"1419:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":79,"name":"bool","nodeType":"ElementaryTypeName","src":"1419:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":82,"mutability":"mutable","name":"isPaid","nameLocation":"1450:6:0","nodeType":"VariableDeclaration","scope":97,"src":"1445:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":81,"name":"bool","nodeType":"ElementaryTypeName","src":"1445:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":84,"mutability":"mutable","name":"paidAmount","nameLocation":"1475:10:0","nodeType":"VariableDeclaration","scope":97,"src":"1467:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":83,"name":"uint256","nodeType":"ElementaryTypeName","src":"1467:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":86,"mutability":"mutable","name":"aabhaId","nameLocation":"1544:7:0","nodeType":"VariableDeclaration","scope":97,"src":"1537:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":85,"name":"string","nodeType":"ElementaryTypeName","src":"1537:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":88,"mutability":"mutable","name":"patientAdmissionDate","nameLocation":"1570:20:0","nodeType":"VariableDeclaration","scope":97,"src":"1562:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":87,"name":"uint256","nodeType":"ElementaryTypeName","src":"1562:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":90,"mutability":"mutable","name":"flightId","nameLocation":"1650:8:0","nodeType":"VariableDeclaration","scope":97,"src":"1642:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":89,"name":"uint256","nodeType":"ElementaryTypeName","src":"1642:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":92,"mutability":"mutable","name":"flightCancellationStatus","nameLocation":"1674:24:0","nodeType":"VariableDeclaration","scope":97,"src":"1669:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":91,"name":"bool","nodeType":"ElementaryTypeName","src":"1669:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":94,"mutability":"mutable","name":"flightDelayMinutes","nameLocation":"1717:18:0","nodeType":"VariableDeclaration","scope":97,"src":"1709:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":93,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":96,"mutability":"mutable","name":"flightDurationMinutes","nameLocation":"1754:21:0","nodeType":"VariableDeclaration","scope":97,"src":"1746:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":95,"name":"uint256","nodeType":"ElementaryTypeName","src":"1746:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Claim","nameLocation":"1257:5:0","nodeType":"StructDefinition","scope":1410,"src":"1250:533:0","visibility":"public"},{"constant":false,"functionSelector":"4a7ba3e5","id":102,"mutability":"mutable","name":"policies","nameLocation":"1824:8:0","nodeType":"VariableDeclaration","scope":1410,"src":"1791:41:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Policy_$68_storage_$","typeString":"mapping(string => struct InsuranceClaims.Policy)"},"typeName":{"id":101,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":98,"name":"string","nodeType":"ElementaryTypeName","src":"1799:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"1791:25:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Policy_$68_storage_$","typeString":"mapping(string => struct InsuranceClaims.Policy)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":100,"nodeType":"UserDefinedTypeName","pathNode":{"id":99,"name":"Policy","nameLocations":["1809:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":68,"src":"1809:6:0"},"referencedDeclaration":68,"src":"1809:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy"}}},"visibility":"public"},{"constant":false,"functionSelector":"a888c2cd","id":107,"mutability":"mutable","name":"claims","nameLocation":"1872:6:0","nodeType":"VariableDeclaration","scope":1410,"src":"1839:39:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Claim_$97_storage_$","typeString":"mapping(uint256 => struct InsuranceClaims.Claim)"},"typeName":{"id":106,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":103,"name":"uint256","nodeType":"ElementaryTypeName","src":"1847:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1839:25:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Claim_$97_storage_$","typeString":"mapping(uint256 => struct InsuranceClaims.Claim)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":105,"nodeType":"UserDefinedTypeName","pathNode":{"id":104,"name":"Claim","nameLocations":["1858:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":97,"src":"1858:5:0"},"referencedDeclaration":97,"src":"1858:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim"}}},"visibility":"public"},{"constant":false,"functionSelector":"6f5d13a0","id":112,"mutability":"mutable","name":"policyClaims","nameLocation":"1921:12:0","nodeType":"VariableDeclaration","scope":1410,"src":"1885:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(string => uint256[])"},"typeName":{"id":111,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":108,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"1885:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(string => uint256[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":109,"name":"uint256","nodeType":"ElementaryTypeName","src":"1903:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":110,"nodeType":"ArrayTypeName","src":"1903:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"33e12bfb","id":116,"mutability":"mutable","name":"claimsCountPerYear","nameLocation":"1974:18:0","nodeType":"VariableDeclaration","scope":1410,"src":"1940:52:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string => uint256)"},"typeName":{"id":115,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":113,"name":"string","nodeType":"ElementaryTypeName","src":"1948:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"1940:26:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":114,"name":"uint256","nodeType":"ElementaryTypeName","src":"1958:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"d192fb9f92e59ade33907b028771f797fa186ff0d39b5c72636b25cfccc4bd80","id":130,"name":"PolicyCreated","nameLocation":"2007:13:0","nodeType":"EventDefinition","parameters":{"id":129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"indexed":true,"mutability":"mutable","name":"policyNumber","nameLocation":"2036:12:0","nodeType":"VariableDeclaration","scope":130,"src":"2021:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":117,"name":"string","nodeType":"ElementaryTypeName","src":"2021:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":120,"indexed":true,"mutability":"mutable","name":"policyholder","nameLocation":"2066:12:0","nodeType":"VariableDeclaration","scope":130,"src":"2050:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":119,"name":"address","nodeType":"ElementaryTypeName","src":"2050:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":122,"indexed":false,"mutability":"mutable","name":"coverageAmount","nameLocation":"2088:14:0","nodeType":"VariableDeclaration","scope":130,"src":"2080:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":121,"name":"uint256","nodeType":"ElementaryTypeName","src":"2080:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":124,"indexed":false,"mutability":"mutable","name":"startDate","nameLocation":"2112:9:0","nodeType":"VariableDeclaration","scope":130,"src":"2104:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":123,"name":"uint256","nodeType":"ElementaryTypeName","src":"2104:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":126,"indexed":false,"mutability":"mutable","name":"endDate","nameLocation":"2131:7:0","nodeType":"VariableDeclaration","scope":130,"src":"2123:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":125,"name":"uint256","nodeType":"ElementaryTypeName","src":"2123:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":128,"indexed":false,"mutability":"mutable","name":"policyType","nameLocation":"2147:10:0","nodeType":"VariableDeclaration","scope":130,"src":"2140:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":127,"name":"string","nodeType":"ElementaryTypeName","src":"2140:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2020:138:0"},"src":"2001:158:0"},{"anonymous":false,"eventSelector":"638b9df33b7f660e287d98ce3f73b14ea754b151e0bcd9dd181499b9fbc2d17b","id":142,"name":"ClaimSubmitted","nameLocation":"2171:14:0","nodeType":"EventDefinition","parameters":{"id":141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"indexed":true,"mutability":"mutable","name":"claimId","nameLocation":"2202:7:0","nodeType":"VariableDeclaration","scope":142,"src":"2186:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":131,"name":"uint256","nodeType":"ElementaryTypeName","src":"2186:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":134,"indexed":true,"mutability":"mutable","name":"policyNumber","nameLocation":"2226:12:0","nodeType":"VariableDeclaration","scope":142,"src":"2211:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":133,"name":"string","nodeType":"ElementaryTypeName","src":"2211:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":136,"indexed":true,"mutability":"mutable","name":"claimant","nameLocation":"2256:8:0","nodeType":"VariableDeclaration","scope":142,"src":"2240:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":135,"name":"address","nodeType":"ElementaryTypeName","src":"2240:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":138,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2274:6:0","nodeType":"VariableDeclaration","scope":142,"src":"2266:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":137,"name":"uint256","nodeType":"ElementaryTypeName","src":"2266:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":140,"indexed":false,"mutability":"mutable","name":"treatmentType","nameLocation":"2289:13:0","nodeType":"VariableDeclaration","scope":142,"src":"2282:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":139,"name":"string","nodeType":"ElementaryTypeName","src":"2282:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2185:118:0"},"src":"2165:139:0"},{"anonymous":false,"eventSelector":"393efda0b92bc01071b66a816d6bcddde867b8c91da505a0f309d9133a53650a","id":146,"name":"ClaimVerified","nameLocation":"2316:13:0","nodeType":"EventDefinition","parameters":{"id":145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":144,"indexed":true,"mutability":"mutable","name":"claimId","nameLocation":"2346:7:0","nodeType":"VariableDeclaration","scope":146,"src":"2330:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":143,"name":"uint256","nodeType":"ElementaryTypeName","src":"2330:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2329:25:0"},"src":"2310:45:0"},{"anonymous":false,"eventSelector":"6b7553a4bd186b51edcbeec8f3e76a9437a907be9ad2aba7e318eccc2816ea9a","id":156,"name":"ClaimProcessed","nameLocation":"2367:14:0","nodeType":"EventDefinition","parameters":{"id":155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":148,"indexed":true,"mutability":"mutable","name":"claimId","nameLocation":"2398:7:0","nodeType":"VariableDeclaration","scope":156,"src":"2382:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":147,"name":"uint256","nodeType":"ElementaryTypeName","src":"2382:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":150,"indexed":true,"mutability":"mutable","name":"policyNumber","nameLocation":"2422:12:0","nodeType":"VariableDeclaration","scope":156,"src":"2407:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":149,"name":"string","nodeType":"ElementaryTypeName","src":"2407:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":152,"indexed":true,"mutability":"mutable","name":"claimant","nameLocation":"2452:8:0","nodeType":"VariableDeclaration","scope":156,"src":"2436:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"2436:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":154,"indexed":false,"mutability":"mutable","name":"paidAmount","nameLocation":"2470:10:0","nodeType":"VariableDeclaration","scope":156,"src":"2462:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":153,"name":"uint256","nodeType":"ElementaryTypeName","src":"2462:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2381:100:0"},"src":"2361:121:0"},{"body":{"id":172,"nodeType":"Block","src":"2504:90:0","statements":[{"expression":{"id":162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":159,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3,"src":"2515:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":160,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2523:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2527:6:0","memberName":"sender","nodeType":"MemberAccess","src":"2523:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2515:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":163,"nodeType":"ExpressionStatement","src":"2515:18:0"},{"expression":{"id":166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":164,"name":"nextClaimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2544:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2558:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2544:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":167,"nodeType":"ExpressionStatement","src":"2544:15:0"},{"expression":{"id":170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":168,"name":"nextRecordId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"2570:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2585:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2570:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":171,"nodeType":"ExpressionStatement","src":"2570:16:0"}]},"id":173,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":157,"nodeType":"ParameterList","parameters":[],"src":"2501:2:0"},"returnParameters":{"id":158,"nodeType":"ParameterList","parameters":[],"src":"2504:0:0"},"scope":1410,"src":"2490:104:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":184,"nodeType":"Block","src":"2623:96:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":176,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2642:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2646:6:0","memberName":"sender","nodeType":"MemberAccess","src":"2642:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":178,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3,"src":"2656:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2642:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6e","id":180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2663:35:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef","typeString":"literal_string \"Only owner can call this function\""},"value":"Only owner can call this function"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef","typeString":"literal_string \"Only owner can call this function\""}],"id":175,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2634:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2634:65:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":182,"nodeType":"ExpressionStatement","src":"2634:65:0"},{"id":183,"nodeType":"PlaceholderStatement","src":"2710:1:0"}]},"id":185,"name":"onlyOwner","nameLocation":"2611:9:0","nodeType":"ModifierDefinition","parameters":{"id":174,"nodeType":"ParameterList","parameters":[],"src":"2620:2:0"},"src":"2602:117:0","virtual":false,"visibility":"internal"},{"body":{"id":196,"nodeType":"Block","src":"2750:100:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":188,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2769:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2773:6:0","memberName":"sender","nodeType":"MemberAccess","src":"2769:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":190,"name":"insurer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5,"src":"2783:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2769:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7920696e73757265722063616e2063616c6c20746869732066756e6374696f6e","id":192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2792:37:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_5dc96c0b5b97af730c46cf83a34164eedd2708fd996bf5cda5c1c1bad78e2c34","typeString":"literal_string \"Only insurer can call this function\""},"value":"Only insurer can call this function"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5dc96c0b5b97af730c46cf83a34164eedd2708fd996bf5cda5c1c1bad78e2c34","typeString":"literal_string \"Only insurer can call this function\""}],"id":187,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2761:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2761:69:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":194,"nodeType":"ExpressionStatement","src":"2761:69:0"},{"id":195,"nodeType":"PlaceholderStatement","src":"2841:1:0"}]},"id":197,"name":"onlyInsurer","nameLocation":"2736:11:0","nodeType":"ModifierDefinition","parameters":{"id":186,"nodeType":"ParameterList","parameters":[],"src":"2747:2:0"},"src":"2727:123:0","virtual":false,"visibility":"internal"},{"body":{"id":215,"nodeType":"Block","src":"2909:115:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":202,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102,"src":"2928:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Policy_$68_storage_$","typeString":"mapping(string memory => struct InsuranceClaims.Policy storage ref)"}},"id":204,"indexExpression":{"id":203,"name":"_policyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"2937:13:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2928:23:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage","typeString":"struct InsuranceClaims.Policy storage ref"}},"id":205,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2952:12:0","memberName":"policyholder","nodeType":"MemberAccess","referencedDeclaration":52,"src":"2928:36:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2976:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2968:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"2968:7:0","typeDescriptions":{}}},"id":209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2968:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2928:50:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6c69637920646f6573206e6f74206578697374","id":211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2980:23:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_aea652f5dac653440c85b7b5cb25e1f01b03401ac09a38650f9eeed5ddd5b2ce","typeString":"literal_string \"Policy does not exist\""},"value":"Policy does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_aea652f5dac653440c85b7b5cb25e1f01b03401ac09a38650f9eeed5ddd5b2ce","typeString":"literal_string \"Policy does not exist\""}],"id":201,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2920:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2920:84:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":213,"nodeType":"ExpressionStatement","src":"2920:84:0"},{"id":214,"nodeType":"PlaceholderStatement","src":"3015:1:0"}]},"id":216,"name":"policyExists","nameLocation":"2867:12:0","nodeType":"ModifierDefinition","parameters":{"id":200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":199,"mutability":"mutable","name":"_policyNumber","nameLocation":"2894:13:0","nodeType":"VariableDeclaration","scope":216,"src":"2880:27:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":198,"name":"string","nodeType":"ElementaryTypeName","src":"2880:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2879:29:0"},"src":"2858:166:0","virtual":false,"visibility":"internal"},{"body":{"id":231,"nodeType":"Block","src":"3071:95:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":221,"name":"claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":107,"src":"3090:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Claim_$97_storage_$","typeString":"mapping(uint256 => struct InsuranceClaims.Claim storage ref)"}},"id":223,"indexExpression":{"id":222,"name":"_claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"3097:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3090:16:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage","typeString":"struct InsuranceClaims.Claim storage ref"}},"id":224,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3107:9:0","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":78,"src":"3090:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3120:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3090:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436c61696d20646f6573206e6f74206578697374","id":227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3123:22:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_eabbba9ad3fe81019ddb52c0a8a4eb1a68acac3ef67773d11c167160267df9da","typeString":"literal_string \"Claim does not exist\""},"value":"Claim does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eabbba9ad3fe81019ddb52c0a8a4eb1a68acac3ef67773d11c167160267df9da","typeString":"literal_string \"Claim does not exist\""}],"id":220,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3082:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3082:64:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":229,"nodeType":"ExpressionStatement","src":"3082:64:0"},{"id":230,"nodeType":"PlaceholderStatement","src":"3157:1:0"}]},"id":232,"name":"claimExists","nameLocation":"3041:11:0","nodeType":"ModifierDefinition","parameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":218,"mutability":"mutable","name":"_claimId","nameLocation":"3061:8:0","nodeType":"VariableDeclaration","scope":232,"src":"3053:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":217,"name":"uint256","nodeType":"ElementaryTypeName","src":"3053:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3052:18:0"},"src":"3032:134:0","virtual":false,"visibility":"internal"},{"body":{"id":243,"nodeType":"Block","src":"3229:37:0","statements":[{"expression":{"id":241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":239,"name":"insurer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5,"src":"3240:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":240,"name":"_insurer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"3250:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3240:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":242,"nodeType":"ExpressionStatement","src":"3240:18:0"}]},"functionSelector":"a8e74108","id":244,"implemented":true,"kind":"function","modifiers":[{"id":237,"kind":"modifierInvocation","modifierName":{"id":236,"name":"onlyOwner","nameLocations":["3219:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":185,"src":"3219:9:0"},"nodeType":"ModifierInvocation","src":"3219:9:0"}],"name":"setInsurer","nameLocation":"3183:10:0","nodeType":"FunctionDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"_insurer","nameLocation":"3202:8:0","nodeType":"VariableDeclaration","scope":244,"src":"3194:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":233,"name":"address","nodeType":"ElementaryTypeName","src":"3194:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3193:18:0"},"returnParameters":{"id":238,"nodeType":"ParameterList","parameters":[],"src":"3229:0:0"},"scope":1410,"src":"3174:92:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":640,"nodeType":"Block","src":"4258:3176:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":302,"name":"_policyholder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"4277:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4302:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4294:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":303,"name":"address","nodeType":"ElementaryTypeName","src":"4294:7:0","typeDescriptions":{}}},"id":306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4294:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4277:27:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420706f6c696379686f6c6465722061646472657373","id":308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4306:30:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e940464e0f79f438e6c3620edddf84d47b9e28b781b7cf93e2ca00ccdbb66f9","typeString":"literal_string \"Invalid policyholder address\""},"value":"Invalid policyholder address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e940464e0f79f438e6c3620edddf84d47b9e28b781b7cf93e2ca00ccdbb66f9","typeString":"literal_string \"Invalid policyholder address\""}],"id":301,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4269:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4269:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":310,"nodeType":"ExpressionStatement","src":"4269:68:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":312,"name":"_coverageAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":250,"src":"4356:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4374:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4356:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f76657261676520616d6f756e74206d7573742062652067726561746572207468616e207a65726f","id":315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4377:43:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_b1a622ab926ca70a8f11094cf0a7915e92fc5c70aa05a20592cac2cc4676fad7","typeString":"literal_string \"Coverage amount must be greater than zero\""},"value":"Coverage amount must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b1a622ab926ca70a8f11094cf0a7915e92fc5c70aa05a20592cac2cc4676fad7","typeString":"literal_string \"Coverage amount must be greater than zero\""}],"id":311,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4348:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4348:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":317,"nodeType":"ExpressionStatement","src":"4348:73:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":319,"name":"_startDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"4440:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4453:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4440:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642073746172742064617465","id":322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4456:20:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_3068ffe05273c6f58676e61a4c5e7346b522c994e655660a7c4737f685454361","typeString":"literal_string \"Invalid start date\""},"value":"Invalid start date"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3068ffe05273c6f58676e61a4c5e7346b522c994e655660a7c4737f685454361","typeString":"literal_string \"Invalid start date\""}],"id":318,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4432:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4432:45:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":324,"nodeType":"ExpressionStatement","src":"4432:45:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":326,"name":"_endDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"4496:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":327,"name":"_startDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"4507:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4496:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"456e642064617465206d7573742062652061667465722073746172742064617465","id":329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4519:35:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_5fb2d6ca35eb226a81231493911c69e566c6f9029ad2fb86efba64bc89e020bd","typeString":"literal_string \"End date must be after start date\""},"value":"End date must be after start date"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5fb2d6ca35eb226a81231493911c69e566c6f9029ad2fb86efba64bc89e020bd","typeString":"literal_string \"End date must be after start date\""}],"id":325,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4488:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4488:67:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":331,"nodeType":"ExpressionStatement","src":"4488:67:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":333,"name":"_maxCoveragePerClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"4574:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":334,"name":"_coverageAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":250,"src":"4598:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4574:39:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d617820636f7665726167652070657220636c61696d2063616e6e6f742065786365656420746f74616c20636f766572616765","id":336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4615:53:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9454667e169671cad16e613b78456dc151c0afceb0cb4bec3e566596208271eb","typeString":"literal_string \"Max coverage per claim cannot exceed total coverage\""},"value":"Max coverage per claim cannot exceed total coverage"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9454667e169671cad16e613b78456dc151c0afceb0cb4bec3e566596208271eb","typeString":"literal_string \"Max coverage per claim cannot exceed total coverage\""}],"id":332,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4566:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4566:103:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":338,"nodeType":"ExpressionStatement","src":"4566:103:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":340,"name":"_copayPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"4688:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"313030","id":341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4708:3:0","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"4688:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f7061792070657263656e746167652063616e6e6f742065786365656420313030","id":343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4713:36:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6e8a40cff34ad1e79d321da21dbdd8f4b86a0078b1829db8fa10e669069934c","typeString":"literal_string \"Copay percentage cannot exceed 100\""},"value":"Copay percentage cannot exceed 100"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c6e8a40cff34ad1e79d321da21dbdd8f4b86a0078b1829db8fa10e669069934c","typeString":"literal_string \"Copay percentage cannot exceed 100\""}],"id":339,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4680:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4680:70:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":345,"nodeType":"ExpressionStatement","src":"4680:70:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":347,"name":"_waitingPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"4769:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3930","id":348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4787:2:0","typeDescriptions":{"typeIdentifier":"t_rational_90_by_1","typeString":"int_const 90"},"value":"90"},"src":"4769:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"57616974696e6720706572696f642063616e6e6f74206578636565642039302064617973","id":350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4791:38:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_48a019856ca60db08d56f118bd60e8014801e3bdaaecf6ebef2f6399a6fa3eb2","typeString":"literal_string \"Waiting period cannot exceed 90 days\""},"value":"Waiting period cannot exceed 90 days"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_48a019856ca60db08d56f118bd60e8014801e3bdaaecf6ebef2f6399a6fa3eb2","typeString":"literal_string \"Waiting period cannot exceed 90 days\""}],"id":346,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4761:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4761:69:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":352,"nodeType":"ExpressionStatement","src":"4761:69:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":354,"name":"_maxClaimsPerYear","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"4849:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4869:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4849:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":357,"name":"_maxClaimsPerYear","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"4874:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3130","id":358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4895:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"4874:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4849:48:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d617820636c61696d73207065722079656172206d757374206265206265747765656e203120616e64203130","id":361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4899:46:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d5e27d0a8683770a8f5abb3bc012fcf114f0cf39095e236890b292ccf40394a","typeString":"literal_string \"Max claims per year must be between 1 and 10\""},"value":"Max claims per year must be between 1 and 10"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d5e27d0a8683770a8f5abb3bc012fcf114f0cf39095e236890b292ccf40394a","typeString":"literal_string \"Max claims per year must be between 1 and 10\""}],"id":353,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4841:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4841:105:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":363,"nodeType":"ExpressionStatement","src":"4841:105:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":365,"name":"_maxHospitalizationDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"4965:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"333635","id":366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4992:3:0","typeDescriptions":{"typeIdentifier":"t_rational_365_by_1","typeString":"int_const 365"},"value":"365"},"src":"4965:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d617820686f73706974616c697a6174696f6e20646179732063616e6e6f742065786365656420333635","id":368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4997:44:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_3706dcad49f95a13388eb2a24c0e708dc8064e5ad8b73a2bcfd0eb21d7b29178","typeString":"literal_string \"Max hospitalization days cannot exceed 365\""},"value":"Max hospitalization days cannot exceed 365"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3706dcad49f95a13388eb2a24c0e708dc8064e5ad8b73a2bcfd0eb21d7b29178","typeString":"literal_string \"Max hospitalization days cannot exceed 365\""}],"id":364,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4957:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4957:85:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":370,"nodeType":"ExpressionStatement","src":"4957:85:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":372,"name":"_maxPreHospitalizationDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"5061:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3330","id":373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5091:2:0","typeDescriptions":{"typeIdentifier":"t_rational_30_by_1","typeString":"int_const 30"},"value":"30"},"src":"5061:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6178207072652d686f73706974616c697a6174696f6e20646179732063616e6e6f7420657863656564203330","id":375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5095:47:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_db265c426eb9aede30bb8962b9934c297321183263f7333e19c194dc461b1e3a","typeString":"literal_string \"Max pre-hospitalization days cannot exceed 30\""},"value":"Max pre-hospitalization days cannot exceed 30"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_db265c426eb9aede30bb8962b9934c297321183263f7333e19c194dc461b1e3a","typeString":"literal_string \"Max pre-hospitalization days cannot exceed 30\""}],"id":371,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5053:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5053:90:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":377,"nodeType":"ExpressionStatement","src":"5053:90:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":379,"name":"_maxPostHospitalizationDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"5162:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3630","id":380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5193:2:0","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"60"},"src":"5162:33:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d617820706f73742d686f73706974616c697a6174696f6e20646179732063616e6e6f7420657863656564203630","id":382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5197:48:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_4945809750dccfccfe945aec48fdfeee81a8c1eed180e50df5ad85851afb9a43","typeString":"literal_string \"Max post-hospitalization days cannot exceed 60\""},"value":"Max post-hospitalization days cannot exceed 60"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4945809750dccfccfe945aec48fdfeee81a8c1eed180e50df5ad85851afb9a43","typeString":"literal_string \"Max post-hospitalization days cannot exceed 60\""}],"id":378,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5154:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5154:92:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":384,"nodeType":"ExpressionStatement","src":"5154:92:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":386,"name":"_delayTimeMinutes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"5265:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"343830","id":387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5286:3:0","typeDescriptions":{"typeIdentifier":"t_rational_480_by_1","typeString":"int_const 480"},"value":"480"},"src":"5265:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"44656c61792074696d652063616e6e6f7420657863656564203820686f757273","id":389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5291:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b2d185b67e651bd2f7baf049f48bc5f56798ac179b67367ebc2b22ffabf1ef3","typeString":"literal_string \"Delay time cannot exceed 8 hours\""},"value":"Delay time cannot exceed 8 hours"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b2d185b67e651bd2f7baf049f48bc5f56798ac179b67367ebc2b22ffabf1ef3","typeString":"literal_string \"Delay time cannot exceed 8 hours\""}],"id":385,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5257:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5257:69:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":391,"nodeType":"ExpressionStatement","src":"5257:69:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":393,"name":"_travelTimeHours","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"5345:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3438","id":394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5365:2:0","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"5345:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54726176656c2074696d652063616e6e6f742065786365656420343820686f757273","id":396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5369:36:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_5c149a3f2218f4c10b0b37cc363fada9cc75141fc9f48e452dfa3a1808ed47de","typeString":"literal_string \"Travel time cannot exceed 48 hours\""},"value":"Travel time cannot exceed 48 hours"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5c149a3f2218f4c10b0b37cc363fada9cc75141fc9f48e452dfa3a1808ed47de","typeString":"literal_string \"Travel time cannot exceed 48 hours\""}],"id":392,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5337:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5337:69:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":398,"nodeType":"ExpressionStatement","src":"5337:69:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":403,"name":"_policyType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"5490:11:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5484:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":401,"name":"bytes","nodeType":"ElementaryTypeName","src":"5484:5:0","typeDescriptions":{}}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":400,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5474:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5474:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"hexValue":"4845414c5448","id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5523:8:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_88ad4e672f8c8ca6cce86b10b118764bf098c06bb02cd6691dfb6641799afaa0","typeString":"literal_string \"HEALTH\""},"value":"HEALTH"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_88ad4e672f8c8ca6cce86b10b118764bf098c06bb02cd6691dfb6641799afaa0","typeString":"literal_string \"HEALTH\""}],"id":408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5517:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":407,"name":"bytes","nodeType":"ElementaryTypeName","src":"5517:5:0","typeDescriptions":{}}},"id":410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":406,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5507:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5507:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5474:59:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":416,"name":"_policyType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"5566:11:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5560:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":414,"name":"bytes","nodeType":"ElementaryTypeName","src":"5560:5:0","typeDescriptions":{}}},"id":417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5560:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":413,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5550:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5550:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"hexValue":"54524156454c","id":422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5599:8:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_ec93b39f2847437875d05f2efaca82def6c25a144b72a43a099330de323d931d","typeString":"literal_string \"TRAVEL\""},"value":"TRAVEL"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_ec93b39f2847437875d05f2efaca82def6c25a144b72a43a099330de323d931d","typeString":"literal_string \"TRAVEL\""}],"id":421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5593:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":420,"name":"bytes","nodeType":"ElementaryTypeName","src":"5593:5:0","typeDescriptions":{}}},"id":423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5593:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":419,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5583:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5583:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5550:59:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5474:135:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420706f6c6963792074797065","id":427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5624:21:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_afab67dd6e9921c74d7d7343605860a5e8e00c5ec73780fbd8aaae8026354204","typeString":"literal_string \"Invalid policy type\""},"value":"Invalid policy type"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_afab67dd6e9921c74d7d7343605860a5e8e00c5ec73780fbd8aaae8026354204","typeString":"literal_string \"Invalid policy type\""}],"id":399,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5452:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5452:204:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":429,"nodeType":"ExpressionStatement","src":"5452:204:0"},{"assignments":[432],"declarations":[{"constant":false,"id":432,"mutability":"mutable","name":"policy","nameLocation":"5684:6:0","nodeType":"VariableDeclaration","scope":640,"src":"5669:21:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy"},"typeName":{"id":431,"nodeType":"UserDefinedTypeName","pathNode":{"id":430,"name":"Policy","nameLocations":["5669:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":68,"src":"5669:6:0"},"referencedDeclaration":68,"src":"5669:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy"}},"visibility":"internal"}],"id":436,"initialValue":{"baseExpression":{"id":433,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102,"src":"5693:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Policy_$68_storage_$","typeString":"mapping(string memory => struct InsuranceClaims.Policy storage ref)"}},"id":435,"indexExpression":{"id":434,"name":"_policyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"5702:13:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5693:23:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage","typeString":"struct InsuranceClaims.Policy storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5669:47:0"},{"expression":{"id":441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":437,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"5727:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":439,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5734:12:0","memberName":"policyholder","nodeType":"MemberAccess","referencedDeclaration":52,"src":"5727:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":440,"name":"_policyholder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"5749:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5727:35:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":442,"nodeType":"ExpressionStatement","src":"5727:35:0"},{"expression":{"id":447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":443,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"5773:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":445,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5780:14:0","memberName":"coverageAmount","nodeType":"MemberAccess","referencedDeclaration":54,"src":"5773:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":446,"name":"_coverageAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":250,"src":"5797:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5773:39:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":448,"nodeType":"ExpressionStatement","src":"5773:39:0"},{"expression":{"id":453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":449,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"5823:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":451,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5830:9:0","memberName":"startDate","nodeType":"MemberAccess","referencedDeclaration":56,"src":"5823:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":452,"name":"_startDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"5842:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5823:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":454,"nodeType":"ExpressionStatement","src":"5823:29:0"},{"expression":{"id":459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":455,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"5863:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":457,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5870:7:0","memberName":"endDate","nodeType":"MemberAccess","referencedDeclaration":58,"src":"5863:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":458,"name":"_endDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"5880:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5863:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":460,"nodeType":"ExpressionStatement","src":"5863:25:0"},{"expression":{"id":465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":461,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"5899:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":463,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5906:10:0","memberName":"policyType","nodeType":"MemberAccess","referencedDeclaration":60,"src":"5899:17:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":464,"name":"_policyType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"5919:11:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"5899:31:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":466,"nodeType":"ExpressionStatement","src":"5899:31:0"},{"expression":{"id":473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"id":467,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"5941:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":470,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5948:5:0","memberName":"terms","nodeType":"MemberAccess","referencedDeclaration":65,"src":"5941:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_PolicyTerms_$50_storage","typeString":"struct InsuranceClaims.PolicyTerms storage ref"}},"id":471,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5954:19:0","memberName":"maxCoveragePerClaim","nodeType":"MemberAccess","referencedDeclaration":11,"src":"5941:32:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":472,"name":"_maxCoveragePerClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"5976:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5941:55:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":474,"nodeType":"ExpressionStatement","src":"5941:55:0"},{"expression":{"id":481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"id":475,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"6007:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":478,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6014:5:0","memberName":"terms","nodeType":"MemberAccess","referencedDeclaration":65,"src":"6007:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_PolicyTerms_$50_storage","typeString":"struct InsuranceClaims.PolicyTerms storage ref"}},"id":479,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6020:15:0","memberName":"copayPercentage","nodeType":"MemberAccess","referencedDeclaration":13,"src":"6007:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":480,"name":"_copayPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"6038:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6007:47:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":482,"nodeType":"ExpressionStatement","src":"6007:47:0"},{"expression":{"id":489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"id":483,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"6065:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":486,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6072:5:0","memberName":"terms","nodeType":"MemberAccess","referencedDeclaration":65,"src":"6065:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_PolicyTerms_$50_storage","typeString":"struct InsuranceClaims.PolicyTerms storage ref"}},"id":487,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6078:17:0","memberName":"coveredTreatments","nodeType":"MemberAccess","referencedDeclaration":16,"src":"6065:30:0","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":488,"name":"_coveredTreatments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"6098:18:0","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"src":"6065:51:0","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":490,"nodeType":"ExpressionStatement","src":"6065:51:0"},{"expression":{"id":497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"id":491,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"6127:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":494,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6134:5:0","memberName":"terms","nodeType":"MemberAccess","referencedDeclaration":65,"src":"6127:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_PolicyTerms_$50_storage","typeString":"struct InsuranceClaims.PolicyTerms storage ref"}},"id":495,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6140:18:0","memberName":"excludedTreatments","nodeType":"MemberAccess","referencedDeclaration":19,"src":"6127:31:0","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":496,"name":"_excludedTreatments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"6161:19:0","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"src":"6127:53:0","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":498,"nodeType":"ExpressionStatement","src":"6127:53:0"},{"expression":{"id":505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"id":499,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"6191:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":502,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6198:5:0","memberName":"terms","nodeType":"MemberAccess","referencedDeclaration":65,"src":"6191:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_PolicyTerms_$50_storage","typeString":"struct InsuranceClaims.PolicyTerms storage ref"}},"id":503,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6204:13:0","memberName":"waitingPeriod","nodeType":"MemberAccess","referencedDeclaration":21,"src":"6191:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":504,"name":"_waitingPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"6220:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6191:43:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":506,"nodeType":"ExpressionStatement","src":"6191:43:0"},{"expression":{"id":513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"id":507,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"6245:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":510,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6252:5:0","memberName":"terms","nodeType":"MemberAccess","referencedDeclaration":65,"src":"6245:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_PolicyTerms_$50_storage","typeString":"struct InsuranceClaims.PolicyTerms storage ref"}},"id":511,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6258:16:0","memberName":"maxClaimsPerYear","nodeType":"MemberAccess","referencedDeclaration":23,"src":"6245:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":512,"name":"_maxClaimsPerYear","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"6277:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6245:49:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":514,"nodeType":"ExpressionStatement","src":"6245:49:0"},{"expression":{"id":521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"id":515,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"6305:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":518,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6312:5:0","memberName":"terms","nodeType":"MemberAccess","referencedDeclaration":65,"src":"6305:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_PolicyTerms_$50_storage","typeString":"struct InsuranceClaims.PolicyTerms storage ref"}},"id":519,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6318:28:0","memberName":"preExistingConditionsCovered","nodeType":"MemberAccess","referencedDeclaration":25,"src":"6305:41:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":520,"name":"_preExistingConditionsCovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"6349:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6305:73:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":522,"nodeType":"ExpressionStatement","src":"6305:73:0"},{"expression":{"id":529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"id":523,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"6389:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":526,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6396:5:0","memberName":"terms","nodeType":"MemberAccess","referencedDeclaration":65,"src":"6389:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_PolicyTerms_$50_storage","typeString":"struct InsuranceClaims.PolicyTerms storage ref"}},"id":527,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6402:22:0","memberName":"maxHospitalizationDays","nodeType":"MemberAccess","referencedDeclaration":27,"src":"6389:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":528,"name":"_maxHospitalizationDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"6427:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6389:61:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":530,"nodeType":"ExpressionStatement","src":"6389:61:0"},{"expression":{"id":537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"id":531,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"6461:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":534,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6468:5:0","memberName":"terms","nodeType":"MemberAccess","referencedDeclaration":65,"src":"6461:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_PolicyTerms_$50_storage","typeString":"struct InsuranceClaims.PolicyTerms storage ref"}},"id":535,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6474:11:0","memberName":"maxRoomRent","nodeType":"MemberAccess","referencedDeclaration":29,"src":"6461:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":536,"name":"_maxRoomRent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"6488:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6461:39:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":538,"nodeType":"ExpressionStatement","src":"6461:39:0"},{"expression":{"id":545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"id":539,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"6511:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":542,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6518:5:0","memberName":"terms","nodeType":"MemberAccess","referencedDeclaration":65,"src":"6511:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_PolicyTerms_$50_storage","typeString":"struct InsuranceClaims.PolicyTerms storage ref"}},"id":543,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6524:13:0","memberName":"maxICUCharges","nodeType":"MemberAccess","referencedDeclaration":31,"src":"6511:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":544,"name":"_maxICUCharges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"6540:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6511:43:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":546,"nodeType":"ExpressionStatement","src":"6511:43:0"},{"expression":{"id":553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"id":547,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"6565:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":550,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6572:5:0","memberName":"terms","nodeType":"MemberAccess","referencedDeclaration":65,"src":"6565:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_PolicyTerms_$50_storage","typeString":"struct InsuranceClaims.PolicyTerms storage ref"}},"id":551,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6578:19:0","memberName":"maxOperationCharges","nodeType":"MemberAccess","referencedDeclaration":33,"src":"6565:32:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":552,"name":"_maxOperationCharges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"6600:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6565:55:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":554,"nodeType":"ExpressionStatement","src":"6565:55:0"},{"expression":{"id":561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"id":555,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"6631:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":558,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6638:5:0","memberName":"terms","nodeType":"MemberAccess","referencedDeclaration":65,"src":"6631:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_PolicyTerms_$50_storage","typeString":"struct InsuranceClaims.PolicyTerms storage ref"}},"id":559,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6644:18:0","memberName":"maxMedicineCharges","nodeType":"MemberAccess","referencedDeclaration":35,"src":"6631:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":560,"name":"_maxMedicineCharges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"6665:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6631:53:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":562,"nodeType":"ExpressionStatement","src":"6631:53:0"},{"expression":{"id":569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"id":563,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"6695:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":566,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6702:5:0","memberName":"terms","nodeType":"MemberAccess","referencedDeclaration":65,"src":"6695:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_PolicyTerms_$50_storage","typeString":"struct InsuranceClaims.PolicyTerms storage ref"}},"id":567,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6708:20:0","memberName":"maxDiagnosticCharges","nodeType":"MemberAccess","referencedDeclaration":37,"src":"6695:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":568,"name":"_maxDiagnosticCharges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"6731:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6695:57:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":570,"nodeType":"ExpressionStatement","src":"6695:57:0"},{"expression":{"id":577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"id":571,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"6763:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":574,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6770:5:0","memberName":"terms","nodeType":"MemberAccess","referencedDeclaration":65,"src":"6763:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_PolicyTerms_$50_storage","typeString":"struct InsuranceClaims.PolicyTerms storage ref"}},"id":575,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6776:19:0","memberName":"maxAmbulanceCharges","nodeType":"MemberAccess","referencedDeclaration":39,"src":"6763:32:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":576,"name":"_maxAmbulanceCharges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"6798:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6763:55:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":578,"nodeType":"ExpressionStatement","src":"6763:55:0"},{"expression":{"id":585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"id":579,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"6829:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":582,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6836:5:0","memberName":"terms","nodeType":"MemberAccess","referencedDeclaration":65,"src":"6829:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_PolicyTerms_$50_storage","typeString":"struct InsuranceClaims.PolicyTerms storage ref"}},"id":583,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6842:25:0","memberName":"maxPreHospitalizationDays","nodeType":"MemberAccess","referencedDeclaration":41,"src":"6829:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":584,"name":"_maxPreHospitalizationDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"6870:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6829:67:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":586,"nodeType":"ExpressionStatement","src":"6829:67:0"},{"expression":{"id":593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"id":587,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"6907:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":590,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6914:5:0","memberName":"terms","nodeType":"MemberAccess","referencedDeclaration":65,"src":"6907:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_PolicyTerms_$50_storage","typeString":"struct InsuranceClaims.PolicyTerms storage ref"}},"id":591,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6920:26:0","memberName":"maxPostHospitalizationDays","nodeType":"MemberAccess","referencedDeclaration":43,"src":"6907:39:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":592,"name":"_maxPostHospitalizationDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"6949:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6907:69:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":594,"nodeType":"ExpressionStatement","src":"6907:69:0"},{"expression":{"id":601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"id":595,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"6987:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":598,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6994:5:0","memberName":"terms","nodeType":"MemberAccess","referencedDeclaration":65,"src":"6987:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_PolicyTerms_$50_storage","typeString":"struct InsuranceClaims.PolicyTerms storage ref"}},"id":599,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7000:16:0","memberName":"delayTimeMinutes","nodeType":"MemberAccess","referencedDeclaration":45,"src":"6987:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":600,"name":"_delayTimeMinutes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"7019:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6987:49:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":602,"nodeType":"ExpressionStatement","src":"6987:49:0"},{"expression":{"id":609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"id":603,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"7047:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":606,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7054:5:0","memberName":"terms","nodeType":"MemberAccess","referencedDeclaration":65,"src":"7047:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_PolicyTerms_$50_storage","typeString":"struct InsuranceClaims.PolicyTerms storage ref"}},"id":607,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7060:18:0","memberName":"cancellationStatus","nodeType":"MemberAccess","referencedDeclaration":47,"src":"7047:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":608,"name":"_cancellationStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"7081:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7047:53:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":610,"nodeType":"ExpressionStatement","src":"7047:53:0"},{"expression":{"id":617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"id":611,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"7111:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":614,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7118:5:0","memberName":"terms","nodeType":"MemberAccess","referencedDeclaration":65,"src":"7111:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_PolicyTerms_$50_storage","typeString":"struct InsuranceClaims.PolicyTerms storage ref"}},"id":615,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7124:15:0","memberName":"travelTimeHours","nodeType":"MemberAccess","referencedDeclaration":49,"src":"7111:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":616,"name":"_travelTimeHours","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"7142:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7111:47:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":618,"nodeType":"ExpressionStatement","src":"7111:47:0"},{"expression":{"id":623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":619,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"7169:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":621,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7176:8:0","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":62,"src":"7169:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7187:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7169:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":624,"nodeType":"ExpressionStatement","src":"7169:22:0"},{"expression":{"id":629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":625,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"7202:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":627,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7209:11:0","memberName":"claimsCount","nodeType":"MemberAccess","referencedDeclaration":67,"src":"7202:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7223:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7202:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":630,"nodeType":"ExpressionStatement","src":"7202:22:0"},{"eventCall":{"arguments":[{"id":632,"name":"_policyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"7270:13:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":633,"name":"_policyholder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"7298:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":634,"name":"_coverageAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":250,"src":"7326:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":635,"name":"_startDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"7356:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":636,"name":"_endDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7381:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":637,"name":"_policyType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7404:11:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":631,"name":"PolicyCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"7242:13:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,address,uint256,uint256,uint256,string memory)"}},"id":638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7242:184:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":639,"nodeType":"EmitStatement","src":"7237:189:0"}]},"functionSelector":"fb20dec8","id":641,"implemented":true,"kind":"function","modifiers":[{"id":299,"kind":"modifierInvocation","modifierName":{"id":298,"name":"onlyInsurer","nameLocations":["4246:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":197,"src":"4246:11:0"},"nodeType":"ModifierInvocation","src":"4246:11:0"}],"name":"createPolicy","nameLocation":"3283:12:0","nodeType":"FunctionDefinition","parameters":{"id":297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":246,"mutability":"mutable","name":"_policyNumber","nameLocation":"3320:13:0","nodeType":"VariableDeclaration","scope":641,"src":"3306:27:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":245,"name":"string","nodeType":"ElementaryTypeName","src":"3306:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":248,"mutability":"mutable","name":"_policyholder","nameLocation":"3352:13:0","nodeType":"VariableDeclaration","scope":641,"src":"3344:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":247,"name":"address","nodeType":"ElementaryTypeName","src":"3344:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":250,"mutability":"mutable","name":"_coverageAmount","nameLocation":"3384:15:0","nodeType":"VariableDeclaration","scope":641,"src":"3376:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":249,"name":"uint256","nodeType":"ElementaryTypeName","src":"3376:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":252,"mutability":"mutable","name":"_startDate","nameLocation":"3418:10:0","nodeType":"VariableDeclaration","scope":641,"src":"3410:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":251,"name":"uint256","nodeType":"ElementaryTypeName","src":"3410:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":254,"mutability":"mutable","name":"_endDate","nameLocation":"3447:8:0","nodeType":"VariableDeclaration","scope":641,"src":"3439:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":253,"name":"uint256","nodeType":"ElementaryTypeName","src":"3439:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":256,"mutability":"mutable","name":"_policyType","nameLocation":"3480:11:0","nodeType":"VariableDeclaration","scope":641,"src":"3466:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":255,"name":"string","nodeType":"ElementaryTypeName","src":"3466:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":258,"mutability":"mutable","name":"_maxCoveragePerClaim","nameLocation":"3510:20:0","nodeType":"VariableDeclaration","scope":641,"src":"3502:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":257,"name":"uint256","nodeType":"ElementaryTypeName","src":"3502:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":260,"mutability":"mutable","name":"_copayPercentage","nameLocation":"3549:16:0","nodeType":"VariableDeclaration","scope":641,"src":"3541:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":259,"name":"uint256","nodeType":"ElementaryTypeName","src":"3541:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":263,"mutability":"mutable","name":"_coveredTreatments","nameLocation":"3592:18:0","nodeType":"VariableDeclaration","scope":641,"src":"3576:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":261,"name":"string","nodeType":"ElementaryTypeName","src":"3576:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":262,"nodeType":"ArrayTypeName","src":"3576:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":266,"mutability":"mutable","name":"_excludedTreatments","nameLocation":"3637:19:0","nodeType":"VariableDeclaration","scope":641,"src":"3621:35:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":264,"name":"string","nodeType":"ElementaryTypeName","src":"3621:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":265,"nodeType":"ArrayTypeName","src":"3621:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":268,"mutability":"mutable","name":"_waitingPeriod","nameLocation":"3675:14:0","nodeType":"VariableDeclaration","scope":641,"src":"3667:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":267,"name":"uint256","nodeType":"ElementaryTypeName","src":"3667:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":270,"mutability":"mutable","name":"_maxClaimsPerYear","nameLocation":"3708:17:0","nodeType":"VariableDeclaration","scope":641,"src":"3700:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":269,"name":"uint256","nodeType":"ElementaryTypeName","src":"3700:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":272,"mutability":"mutable","name":"_preExistingConditionsCovered","nameLocation":"3741:29:0","nodeType":"VariableDeclaration","scope":641,"src":"3736:34:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":271,"name":"bool","nodeType":"ElementaryTypeName","src":"3736:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":274,"mutability":"mutable","name":"_maxHospitalizationDays","nameLocation":"3789:23:0","nodeType":"VariableDeclaration","scope":641,"src":"3781:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":273,"name":"uint256","nodeType":"ElementaryTypeName","src":"3781:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":276,"mutability":"mutable","name":"_maxRoomRent","nameLocation":"3831:12:0","nodeType":"VariableDeclaration","scope":641,"src":"3823:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":275,"name":"uint256","nodeType":"ElementaryTypeName","src":"3823:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":278,"mutability":"mutable","name":"_maxICUCharges","nameLocation":"3862:14:0","nodeType":"VariableDeclaration","scope":641,"src":"3854:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":277,"name":"uint256","nodeType":"ElementaryTypeName","src":"3854:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":280,"mutability":"mutable","name":"_maxOperationCharges","nameLocation":"3895:20:0","nodeType":"VariableDeclaration","scope":641,"src":"3887:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":279,"name":"uint256","nodeType":"ElementaryTypeName","src":"3887:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":282,"mutability":"mutable","name":"_maxMedicineCharges","nameLocation":"3934:19:0","nodeType":"VariableDeclaration","scope":641,"src":"3926:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":281,"name":"uint256","nodeType":"ElementaryTypeName","src":"3926:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":284,"mutability":"mutable","name":"_maxDiagnosticCharges","nameLocation":"3972:21:0","nodeType":"VariableDeclaration","scope":641,"src":"3964:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":283,"name":"uint256","nodeType":"ElementaryTypeName","src":"3964:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":286,"mutability":"mutable","name":"_maxAmbulanceCharges","nameLocation":"4012:20:0","nodeType":"VariableDeclaration","scope":641,"src":"4004:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":285,"name":"uint256","nodeType":"ElementaryTypeName","src":"4004:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":288,"mutability":"mutable","name":"_maxPreHospitalizationDays","nameLocation":"4051:26:0","nodeType":"VariableDeclaration","scope":641,"src":"4043:34:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":287,"name":"uint256","nodeType":"ElementaryTypeName","src":"4043:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":290,"mutability":"mutable","name":"_maxPostHospitalizationDays","nameLocation":"4096:27:0","nodeType":"VariableDeclaration","scope":641,"src":"4088:35:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":289,"name":"uint256","nodeType":"ElementaryTypeName","src":"4088:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":292,"mutability":"mutable","name":"_delayTimeMinutes","nameLocation":"4142:17:0","nodeType":"VariableDeclaration","scope":641,"src":"4134:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":291,"name":"uint256","nodeType":"ElementaryTypeName","src":"4134:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":294,"mutability":"mutable","name":"_cancellationStatus","nameLocation":"4175:19:0","nodeType":"VariableDeclaration","scope":641,"src":"4170:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":293,"name":"bool","nodeType":"ElementaryTypeName","src":"4170:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":296,"mutability":"mutable","name":"_travelTimeHours","nameLocation":"4213:16:0","nodeType":"VariableDeclaration","scope":641,"src":"4205:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":295,"name":"uint256","nodeType":"ElementaryTypeName","src":"4205:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3295:941:0"},"returnParameters":{"id":300,"nodeType":"ParameterList","parameters":[],"src":"4258:0:0"},"scope":1410,"src":"3274:4160:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1099,"nodeType":"Block","src":"7803:4128:0","statements":[{"assignments":[664],"declarations":[{"constant":false,"id":664,"mutability":"mutable","name":"policy","nameLocation":"7829:6:0","nodeType":"VariableDeclaration","scope":1099,"src":"7814:21:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy"},"typeName":{"id":663,"nodeType":"UserDefinedTypeName","pathNode":{"id":662,"name":"Policy","nameLocations":["7814:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":68,"src":"7814:6:0"},"referencedDeclaration":68,"src":"7814:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy"}},"visibility":"internal"}],"id":668,"initialValue":{"baseExpression":{"id":665,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102,"src":"7838:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Policy_$68_storage_$","typeString":"mapping(string memory => struct InsuranceClaims.Policy storage ref)"}},"id":667,"indexExpression":{"id":666,"name":"_policyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"7847:13:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7838:23:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage","typeString":"struct InsuranceClaims.Policy storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7814:47:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":670,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"7880:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":671,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7887:12:0","memberName":"policyholder","nodeType":"MemberAccess","referencedDeclaration":52,"src":"7880:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":672,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7903:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7907:6:0","memberName":"sender","nodeType":"MemberAccess","src":"7903:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7880:33:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7920706f6c696379686f6c6465722063616e207375626d697420636c61696d73","id":675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7915:37:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_326c3d4405004e61310992ce41f5cc969f88d39d1472aa1380a8b0084d5befd1","typeString":"literal_string \"Only policyholder can submit claims\""},"value":"Only policyholder can submit claims"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_326c3d4405004e61310992ce41f5cc969f88d39d1472aa1380a8b0084d5befd1","typeString":"literal_string \"Only policyholder can submit claims\""}],"id":669,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7872:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7872:81:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":677,"nodeType":"ExpressionStatement","src":"7872:81:0"},{"expression":{"arguments":[{"expression":{"id":679,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"7972:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":680,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7979:8:0","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":62,"src":"7972:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6c696379206973206e6f7420616374697665","id":681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7989:22:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_99080d22dc18f564531d11cbb7ad7b1f889534fb07f6e0fe0a38b3a0e018c0d9","typeString":"literal_string \"Policy is not active\""},"value":"Policy is not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_99080d22dc18f564531d11cbb7ad7b1f889534fb07f6e0fe0a38b3a0e018c0d9","typeString":"literal_string \"Policy is not active\""}],"id":678,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7964:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7964:48:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":683,"nodeType":"ExpressionStatement","src":"7964:48:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":685,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8031:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8037:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"8031:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":687,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"8050:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":688,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8057:9:0","memberName":"startDate","nodeType":"MemberAccess","referencedDeclaration":56,"src":"8050:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":689,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"8070:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":690,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8077:5:0","memberName":"terms","nodeType":"MemberAccess","referencedDeclaration":65,"src":"8070:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_PolicyTerms_$50_storage","typeString":"struct InsuranceClaims.PolicyTerms storage ref"}},"id":691,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8083:13:0","memberName":"waitingPeriod","nodeType":"MemberAccess","referencedDeclaration":21,"src":"8070:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31","id":692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8099:6:0","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"1"},"src":"8070:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":694,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8069:37:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8050:56:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8031:75:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"57616974696e6720706572696f64206e6f74206f766572","id":697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8108:25:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_deae545efd6545f1580e31fc164cf313453cfdd5ec6e82c525be08311ed90a20","typeString":"literal_string \"Waiting period not over\""},"value":"Waiting period not over"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_deae545efd6545f1580e31fc164cf313453cfdd5ec6e82c525be08311ed90a20","typeString":"literal_string \"Waiting period not over\""}],"id":684,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8023:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8023:111:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":699,"nodeType":"ExpressionStatement","src":"8023:111:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":701,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8153:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8159:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"8153:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":703,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"8172:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":704,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8179:7:0","memberName":"endDate","nodeType":"MemberAccess","referencedDeclaration":58,"src":"8172:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8153:33:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6c6963792065787069726564","id":706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8188:16:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_bbad214ed6bf41820a0e702e9e0047c532914978e9be30f76dfaa6ed49d81700","typeString":"literal_string \"Policy expired\""},"value":"Policy expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bbad214ed6bf41820a0e702e9e0047c532914978e9be30f76dfaa6ed49d81700","typeString":"literal_string \"Policy expired\""}],"id":700,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8145:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8145:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":708,"nodeType":"ExpressionStatement","src":"8145:60:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":710,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"8224:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8234:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8224:11:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436c61696d20616d6f756e74206d7573742062652067726561746572207468616e207a65726f","id":713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8237:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_8beb85dc5b1986bc23b2153f29a9770c54f9a894af717f01c2a245df409dbe7b","typeString":"literal_string \"Claim amount must be greater than zero\""},"value":"Claim amount must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8beb85dc5b1986bc23b2153f29a9770c54f9a894af717f01c2a245df409dbe7b","typeString":"literal_string \"Claim amount must be greater than zero\""}],"id":709,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8216:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8216:62:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":715,"nodeType":"ExpressionStatement","src":"8216:62:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":717,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"8297:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"expression":{"id":718,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"8308:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":719,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8315:5:0","memberName":"terms","nodeType":"MemberAccess","referencedDeclaration":65,"src":"8308:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_PolicyTerms_$50_storage","typeString":"struct InsuranceClaims.PolicyTerms storage ref"}},"id":720,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8321:19:0","memberName":"maxCoveragePerClaim","nodeType":"MemberAccess","referencedDeclaration":11,"src":"8308:32:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8297:43:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436c61696d20616d6f756e742065786365656473206d6178696d756d20636f7665726167652070657220636c61696d","id":722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8342:49:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_85ccf16278143899748ad9f06dd0f24b7689c608063a5e5ecfc144bec61f6156","typeString":"literal_string \"Claim amount exceeds maximum coverage per claim\""},"value":"Claim amount exceeds maximum coverage per claim"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_85ccf16278143899748ad9f06dd0f24b7689c608063a5e5ecfc144bec61f6156","typeString":"literal_string \"Claim amount exceeds maximum coverage per claim\""}],"id":716,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8289:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8289:103:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":724,"nodeType":"ExpressionStatement","src":"8289:103:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":726,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"8411:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":727,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8418:11:0","memberName":"claimsCount","nodeType":"MemberAccess","referencedDeclaration":67,"src":"8411:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"id":728,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"8432:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":729,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8439:5:0","memberName":"terms","nodeType":"MemberAccess","referencedDeclaration":65,"src":"8432:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_PolicyTerms_$50_storage","typeString":"struct InsuranceClaims.PolicyTerms storage ref"}},"id":730,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8445:16:0","memberName":"maxClaimsPerYear","nodeType":"MemberAccess","referencedDeclaration":23,"src":"8432:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8411:50:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6178696d756d20636c61696d732070657220796561722072656163686564","id":732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8463:33:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_d4721abbda12c44e4880aaacae8c6912f416362313966937b647db26db3d9d21","typeString":"literal_string \"Maximum claims per year reached\""},"value":"Maximum claims per year reached"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d4721abbda12c44e4880aaacae8c6912f416362313966937b647db26db3d9d21","typeString":"literal_string \"Maximum claims per year reached\""}],"id":725,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8403:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8403:94:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":734,"nodeType":"ExpressionStatement","src":"8403:94:0"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"id":738,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"8587:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":739,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8594:10:0","memberName":"policyType","nodeType":"MemberAccess","referencedDeclaration":60,"src":"8587:17:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8581:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":736,"name":"bytes","nodeType":"ElementaryTypeName","src":"8581:5:0","typeDescriptions":{}}},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8581:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":735,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8571:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8571:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"hexValue":"4845414c5448","id":745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8626:8:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_88ad4e672f8c8ca6cce86b10b118764bf098c06bb02cd6691dfb6641799afaa0","typeString":"literal_string \"HEALTH\""},"value":"HEALTH"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_88ad4e672f8c8ca6cce86b10b118764bf098c06bb02cd6691dfb6641799afaa0","typeString":"literal_string \"HEALTH\""}],"id":744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8620:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":743,"name":"bytes","nodeType":"ElementaryTypeName","src":"8620:5:0","typeDescriptions":{}}},"id":746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8620:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":742,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8610:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8610:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8571:65:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"id":884,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"10078:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":885,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10085:10:0","memberName":"policyType","nodeType":"MemberAccess","referencedDeclaration":60,"src":"10078:17:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10072:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":882,"name":"bytes","nodeType":"ElementaryTypeName","src":"10072:5:0","typeDescriptions":{}}},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10072:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":881,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10062:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10062:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"hexValue":"54524156454c","id":891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10117:8:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_ec93b39f2847437875d05f2efaca82def6c25a144b72a43a099330de323d931d","typeString":"literal_string \"TRAVEL\""},"value":"TRAVEL"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_ec93b39f2847437875d05f2efaca82def6c25a144b72a43a099330de323d931d","typeString":"literal_string \"TRAVEL\""}],"id":890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10111:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":889,"name":"bytes","nodeType":"ElementaryTypeName","src":"10111:5:0","typeDescriptions":{}}},"id":892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10111:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":888,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10101:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10101:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"10062:65:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":973,"nodeType":"IfStatement","src":"10058:844:0","trueBody":{"id":972,"nodeType":"Block","src":"10129:773:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":898,"name":"_aabhaId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"10158:8:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10152:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":896,"name":"bytes","nodeType":"ElementaryTypeName","src":"10152:5:0","typeDescriptions":{}}},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10152:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10168:6:0","memberName":"length","nodeType":"MemberAccess","src":"10152:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10178:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10152:27:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54726176656c20636c61696d2073686f756c64206e6f7420696e636c756465204141424841204944","id":903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10181:42:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_6a0dc06ea342ce3f1f77d943ed2043d2e0f7113f04983ba3c0268fad4389c196","typeString":"literal_string \"Travel claim should not include AABHA ID\""},"value":"Travel claim should not include AABHA ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6a0dc06ea342ce3f1f77d943ed2043d2e0f7113f04983ba3c0268fad4389c196","typeString":"literal_string \"Travel claim should not include AABHA ID\""}],"id":895,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10144:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10144:80:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":905,"nodeType":"ExpressionStatement","src":"10144:80:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":907,"name":"_patientAdmissionDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"10247:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10272:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10247:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54726176656c20636c61696d2073686f756c64206e6f7420696e636c7564652061646d697373696f6e2064617465","id":910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10275:48:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_2b1f3e5451c2e6453ea262b9cdd5ea1139b311db91905f24a5f3f0225d86e0fc","typeString":"literal_string \"Travel claim should not include admission date\""},"value":"Travel claim should not include admission date"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2b1f3e5451c2e6453ea262b9cdd5ea1139b311db91905f24a5f3f0225d86e0fc","typeString":"literal_string \"Travel claim should not include admission date\""}],"id":906,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10239:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10239:85:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":912,"nodeType":"ExpressionStatement","src":"10239:85:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":914,"name":"_flightId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":653,"src":"10347:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10359:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10347:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54726176656c20636c61696d206d75737420696e636c75646520666c69676874204944","id":917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10362:37:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_d34f848e143de2dbb726c594fa772b194f26fcb6d63a5b7f1ff4d97ee04c1cb9","typeString":"literal_string \"Travel claim must include flight ID\""},"value":"Travel claim must include flight ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d34f848e143de2dbb726c594fa772b194f26fcb6d63a5b7f1ff4d97ee04c1cb9","typeString":"literal_string \"Travel claim must include flight ID\""}],"id":913,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10339:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10339:61:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":919,"nodeType":"ExpressionStatement","src":"10339:61:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":921,"name":"_flightDelayMinutes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"10423:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"expression":{"id":922,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"10446:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":923,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10453:5:0","memberName":"terms","nodeType":"MemberAccess","referencedDeclaration":65,"src":"10446:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_PolicyTerms_$50_storage","typeString":"struct InsuranceClaims.PolicyTerms storage ref"}},"id":924,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10459:16:0","memberName":"delayTimeMinutes","nodeType":"MemberAccess","referencedDeclaration":45,"src":"10446:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10423:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466c696768742064656c6179206578636565647320706f6c696379206c696d6974","id":926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10477:35:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_7162ab672f9b66de6640bd8f3e7881cceaba0984096f72af05334674f6217e62","typeString":"literal_string \"Flight delay exceeds policy limit\""},"value":"Flight delay exceeds policy limit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7162ab672f9b66de6640bd8f3e7881cceaba0984096f72af05334674f6217e62","typeString":"literal_string \"Flight delay exceeds policy limit\""}],"id":920,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10415:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10415:98:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":928,"nodeType":"ExpressionStatement","src":"10415:98:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":930,"name":"_flightDurationMinutes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"10536:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":931,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"10563:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":932,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10570:5:0","memberName":"terms","nodeType":"MemberAccess","referencedDeclaration":65,"src":"10563:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_PolicyTerms_$50_storage","typeString":"struct InsuranceClaims.PolicyTerms storage ref"}},"id":933,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10576:15:0","memberName":"travelTimeHours","nodeType":"MemberAccess","referencedDeclaration":49,"src":"10563:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3630","id":934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10594:2:0","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"60"},"src":"10563:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":936,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10562:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10536:61:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466c69676874206475726174696f6e206578636565647320706f6c696379206c696d6974","id":938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10599:38:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9b12fb4be5573bed060b8e69a4684629d3d6ac9ea2afaa02a989c2db60bf5d51","typeString":"literal_string \"Flight duration exceeds policy limit\""},"value":"Flight duration exceeds policy limit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9b12fb4be5573bed060b8e69a4684629d3d6ac9ea2afaa02a989c2db60bf5d51","typeString":"literal_string \"Flight duration exceeds policy limit\""}],"id":929,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10528:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10528:110:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":940,"nodeType":"ExpressionStatement","src":"10528:110:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":945,"name":"_treatmentType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"10695:14:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10689:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":943,"name":"bytes","nodeType":"ElementaryTypeName","src":"10689:5:0","typeDescriptions":{}}},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10689:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":942,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10679:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10679:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"hexValue":"44454c4159","id":951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10731:7:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_43a6044c82f40f17c19f58406df90bff8d5298e48537704f37a8075c5f36d46f","typeString":"literal_string \"DELAY\""},"value":"DELAY"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_43a6044c82f40f17c19f58406df90bff8d5298e48537704f37a8075c5f36d46f","typeString":"literal_string \"DELAY\""}],"id":950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10725:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":949,"name":"bytes","nodeType":"ElementaryTypeName","src":"10725:5:0","typeDescriptions":{}}},"id":952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10725:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":948,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10715:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10715:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"10679:61:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":958,"name":"_treatmentType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"10777:14:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10771:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":956,"name":"bytes","nodeType":"ElementaryTypeName","src":"10771:5:0","typeDescriptions":{}}},"id":959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10771:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":955,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10761:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10761:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"hexValue":"43414e43454c4c4154494f4e","id":964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10813:14:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_0f36baceb8c936b84649ec32484e0932b39d39183361a521f946479fe7366002","typeString":"literal_string \"CANCELLATION\""},"value":"CANCELLATION"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0f36baceb8c936b84649ec32484e0932b39d39183361a521f946479fe7366002","typeString":"literal_string \"CANCELLATION\""}],"id":963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10807:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":962,"name":"bytes","nodeType":"ElementaryTypeName","src":"10807:5:0","typeDescriptions":{}}},"id":965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10807:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":961,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10797:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10797:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"10761:68:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10679:150:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642074726176656c20636c61696d2074797065","id":969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10848:27:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_39795d71e8bea01882623f62a7340d0455371f43d506722a2da770ace1179003","typeString":"literal_string \"Invalid travel claim type\""},"value":"Invalid travel claim type"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_39795d71e8bea01882623f62a7340d0455371f43d506722a2da770ace1179003","typeString":"literal_string \"Invalid travel claim type\""}],"id":941,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10653:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10653:237:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":971,"nodeType":"ExpressionStatement","src":"10653:237:0"}]}},"id":974,"nodeType":"IfStatement","src":"8567:2335:0","trueBody":{"id":880,"nodeType":"Block","src":"8638:1414:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":752,"name":"_aabhaId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"8667:8:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8661:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":750,"name":"bytes","nodeType":"ElementaryTypeName","src":"8661:5:0","typeDescriptions":{}}},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8661:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8677:6:0","memberName":"length","nodeType":"MemberAccess","src":"8661:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8686:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8661:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4865616c746820636c61696d206d75737420696e636c756465204141424841204944","id":757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8689:36:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_524b53ae920c506cdf85bef912db533f2b31bb5497846bca799d588f9ac69bc4","typeString":"literal_string \"Health claim must include AABHA ID\""},"value":"Health claim must include AABHA ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_524b53ae920c506cdf85bef912db533f2b31bb5497846bca799d588f9ac69bc4","typeString":"literal_string \"Health claim must include AABHA ID\""}],"id":749,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8653:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8653:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":759,"nodeType":"ExpressionStatement","src":"8653:73:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":761,"name":"_patientAdmissionDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"8749:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8773:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8749:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4865616c746820636c61696d206d75737420696e636c7564652061646d697373696f6e2064617465","id":764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8776:42:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_dafd9c793ac2004e311264361c6b8b6e037bb03fa138bfc8635f4af6d9d63b12","typeString":"literal_string \"Health claim must include admission date\""},"value":"Health claim must include admission date"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dafd9c793ac2004e311264361c6b8b6e037bb03fa138bfc8635f4af6d9d63b12","typeString":"literal_string \"Health claim must include admission date\""}],"id":760,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8741:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8741:78:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":766,"nodeType":"ExpressionStatement","src":"8741:78:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":768,"name":"_flightId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":653,"src":"8842:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8855:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8842:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4865616c746820636c61696d2073686f756c64206e6f7420696e636c75646520666c696768742064657461696c73","id":771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8858:48:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_30b095963fa7e05e5239a74d2a3a8657b80fb40d8404e8fc5a896b435d4a374a","typeString":"literal_string \"Health claim should not include flight details\""},"value":"Health claim should not include flight details"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_30b095963fa7e05e5239a74d2a3a8657b80fb40d8404e8fc5a896b435d4a374a","typeString":"literal_string \"Health claim should not include flight details\""}],"id":767,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8834:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8834:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":773,"nodeType":"ExpressionStatement","src":"8834:73:0"},{"expression":{"arguments":[{"id":776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8930:26:0","subExpression":{"id":775,"name":"_flightCancellationStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"8931:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4865616c746820636c61696d2073686f756c64206e6f7420696e636c75646520666c696768742063616e63656c6c6174696f6e","id":777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8958:53:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_8d4529bb9e565a8552b670629513ce9f92c535a76c57074157edaa1923cdc86a","typeString":"literal_string \"Health claim should not include flight cancellation\""},"value":"Health claim should not include flight cancellation"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8d4529bb9e565a8552b670629513ce9f92c535a76c57074157edaa1923cdc86a","typeString":"literal_string \"Health claim should not include flight cancellation\""}],"id":774,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8922:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8922:90:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":779,"nodeType":"ExpressionStatement","src":"8922:90:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":781,"name":"_flightDelayMinutes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"9035:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9058:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9035:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4865616c746820636c61696d2073686f756c64206e6f7420696e636c75646520666c696768742064656c6179","id":784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9061:46:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_e0ed379ca53abc088cb1061d4edbb0da853017c7a389929893765954dda6a5e2","typeString":"literal_string \"Health claim should not include flight delay\""},"value":"Health claim should not include flight delay"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e0ed379ca53abc088cb1061d4edbb0da853017c7a389929893765954dda6a5e2","typeString":"literal_string \"Health claim should not include flight delay\""}],"id":780,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9027:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9027:81:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":786,"nodeType":"ExpressionStatement","src":"9027:81:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":788,"name":"_flightDurationMinutes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"9131:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9157:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9131:27:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4865616c746820636c61696d2073686f756c64206e6f7420696e636c75646520666c69676874206475726174696f6e","id":791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9160:49:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_6b885c51c2bf07e4f92d256cce213b102cd345be5dae85757f93d73a7baaa8d0","typeString":"literal_string \"Health claim should not include flight duration\""},"value":"Health claim should not include flight duration"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6b885c51c2bf07e4f92d256cce213b102cd345be5dae85757f93d73a7baaa8d0","typeString":"literal_string \"Health claim should not include flight duration\""}],"id":787,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9123:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9123:87:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":793,"nodeType":"ExpressionStatement","src":"9123:87:0"},{"body":{"id":830,"nodeType":"Block","src":"9349:209:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"baseExpression":{"expression":{"expression":{"id":810,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"9388:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":811,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9395:5:0","memberName":"terms","nodeType":"MemberAccess","referencedDeclaration":65,"src":"9388:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_PolicyTerms_$50_storage","typeString":"struct InsuranceClaims.PolicyTerms storage ref"}},"id":812,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9401:18:0","memberName":"excludedTreatments","nodeType":"MemberAccess","referencedDeclaration":19,"src":"9388:31:0","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":814,"indexExpression":{"id":813,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"9420:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9388:34:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9382:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":808,"name":"bytes","nodeType":"ElementaryTypeName","src":"9382:5:0","typeDescriptions":{}}},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9382:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":807,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9372:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9372:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":820,"name":"_treatmentType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"9444:14:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9438:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":818,"name":"bytes","nodeType":"ElementaryTypeName","src":"9438:5:0","typeDescriptions":{}}},"id":821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9438:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":817,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9428:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9428:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"9372:88:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":829,"nodeType":"IfStatement","src":"9368:175:0","trueBody":{"id":828,"nodeType":"Block","src":"9462:81:0","statements":[{"expression":{"arguments":[{"hexValue":"54726561746d656e74206578636c7564656420627920706f6c696379","id":825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9492:30:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_1c61ce67e0d87039b1415e6a085713422afb3c6a78584722a92e64ef471a04c6","typeString":"literal_string \"Treatment excluded by policy\""},"value":"Treatment excluded by policy"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1c61ce67e0d87039b1415e6a085713422afb3c6a78584722a92e64ef471a04c6","typeString":"literal_string \"Treatment excluded by policy\""}],"id":824,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9485:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9485:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":827,"nodeType":"ExpressionStatement","src":"9485:38:0"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":798,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"9300:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"expression":{"id":799,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"9304:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":800,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9311:5:0","memberName":"terms","nodeType":"MemberAccess","referencedDeclaration":65,"src":"9304:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_PolicyTerms_$50_storage","typeString":"struct InsuranceClaims.PolicyTerms storage ref"}},"id":801,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9317:18:0","memberName":"excludedTreatments","nodeType":"MemberAccess","referencedDeclaration":19,"src":"9304:31:0","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9336:6:0","memberName":"length","nodeType":"MemberAccess","src":"9304:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9300:42:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":831,"initializationExpression":{"assignments":[795],"declarations":[{"constant":false,"id":795,"mutability":"mutable","name":"i","nameLocation":"9293:1:0","nodeType":"VariableDeclaration","scope":831,"src":"9285:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":794,"name":"uint256","nodeType":"ElementaryTypeName","src":"9285:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":797,"initialValue":{"hexValue":"30","id":796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9285:13:0"},"loopExpression":{"expression":{"id":805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9344:3:0","subExpression":{"id":804,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"9344:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":806,"nodeType":"ExpressionStatement","src":"9344:3:0"},"nodeType":"ForStatement","src":"9280:278:0"},{"assignments":[833],"declarations":[{"constant":false,"id":833,"mutability":"mutable","name":"isTreatmentCovered","nameLocation":"9630:18:0","nodeType":"VariableDeclaration","scope":880,"src":"9625:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":832,"name":"bool","nodeType":"ElementaryTypeName","src":"9625:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":835,"initialValue":{"hexValue":"66616c7365","id":834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9651:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"nodeType":"VariableDeclarationStatement","src":"9625:31:0"},{"body":{"id":873,"nodeType":"Block","src":"9739:223:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"baseExpression":{"expression":{"expression":{"id":852,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"9778:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":853,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9785:5:0","memberName":"terms","nodeType":"MemberAccess","referencedDeclaration":65,"src":"9778:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_PolicyTerms_$50_storage","typeString":"struct InsuranceClaims.PolicyTerms storage ref"}},"id":854,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9791:17:0","memberName":"coveredTreatments","nodeType":"MemberAccess","referencedDeclaration":16,"src":"9778:30:0","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":856,"indexExpression":{"id":855,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"9809:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9778:33:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9772:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":850,"name":"bytes","nodeType":"ElementaryTypeName","src":"9772:5:0","typeDescriptions":{}}},"id":857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9772:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":849,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9762:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9762:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":862,"name":"_treatmentType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"9833:14:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9827:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":860,"name":"bytes","nodeType":"ElementaryTypeName","src":"9827:5:0","typeDescriptions":{}}},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9827:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":859,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9817:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9817:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"9762:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":872,"nodeType":"IfStatement","src":"9758:189:0","trueBody":{"id":871,"nodeType":"Block","src":"9851:96:0","statements":[{"expression":{"id":868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":866,"name":"isTreatmentCovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"9874:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9895:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"9874:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":869,"nodeType":"ExpressionStatement","src":"9874:25:0"},{"id":870,"nodeType":"Break","src":"9922:5:0"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":840,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"9691:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"expression":{"id":841,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"9695:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":842,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9702:5:0","memberName":"terms","nodeType":"MemberAccess","referencedDeclaration":65,"src":"9695:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_PolicyTerms_$50_storage","typeString":"struct InsuranceClaims.PolicyTerms storage ref"}},"id":843,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9708:17:0","memberName":"coveredTreatments","nodeType":"MemberAccess","referencedDeclaration":16,"src":"9695:30:0","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9726:6:0","memberName":"length","nodeType":"MemberAccess","src":"9695:37:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9691:41:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":874,"initializationExpression":{"assignments":[837],"declarations":[{"constant":false,"id":837,"mutability":"mutable","name":"i","nameLocation":"9684:1:0","nodeType":"VariableDeclaration","scope":874,"src":"9676:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":836,"name":"uint256","nodeType":"ElementaryTypeName","src":"9676:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":839,"initialValue":{"hexValue":"30","id":838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9688:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9676:13:0"},"loopExpression":{"expression":{"id":847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9734:3:0","subExpression":{"id":846,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"9734:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":848,"nodeType":"ExpressionStatement","src":"9734:3:0"},"nodeType":"ForStatement","src":"9671:291:0"},{"expression":{"arguments":[{"id":876,"name":"isTreatmentCovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"9984:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54726561746d656e74206e6f7420636f766572656420627920706f6c696379","id":877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10004:33:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_49c83063720ce9fb57c0a6db18581d1190442a85ba76642d0ce4b8275fb2ce97","typeString":"literal_string \"Treatment not covered by policy\""},"value":"Treatment not covered by policy"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_49c83063720ce9fb57c0a6db18581d1190442a85ba76642d0ce4b8275fb2ce97","typeString":"literal_string \"Treatment not covered by policy\""}],"id":875,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9976:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9976:62:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":879,"nodeType":"ExpressionStatement","src":"9976:62:0"}]}},{"assignments":[976],"declarations":[{"constant":false,"id":976,"mutability":"mutable","name":"claimId","nameLocation":"10922:7:0","nodeType":"VariableDeclaration","scope":1099,"src":"10914:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":975,"name":"uint256","nodeType":"ElementaryTypeName","src":"10914:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":979,"initialValue":{"id":978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10932:13:0","subExpression":{"id":977,"name":"nextClaimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"10932:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10914:31:0"},{"assignments":[982],"declarations":[{"constant":false,"id":982,"mutability":"mutable","name":"claim","nameLocation":"10970:5:0","nodeType":"VariableDeclaration","scope":1099,"src":"10956:19:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim"},"typeName":{"id":981,"nodeType":"UserDefinedTypeName","pathNode":{"id":980,"name":"Claim","nameLocations":["10956:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":97,"src":"10956:5:0"},"referencedDeclaration":97,"src":"10956:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim"}},"visibility":"internal"}],"id":986,"initialValue":{"baseExpression":{"id":983,"name":"claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":107,"src":"10978:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Claim_$97_storage_$","typeString":"mapping(uint256 => struct InsuranceClaims.Claim storage ref)"}},"id":985,"indexExpression":{"id":984,"name":"claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"10985:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10978:15:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage","typeString":"struct InsuranceClaims.Claim storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10956:37:0"},{"expression":{"id":991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":987,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"11004:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim storage pointer"}},"id":989,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11010:12:0","memberName":"policyNumber","nodeType":"MemberAccess","referencedDeclaration":70,"src":"11004:18:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":990,"name":"_policyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"11025:13:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"11004:34:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":992,"nodeType":"ExpressionStatement","src":"11004:34:0"},{"expression":{"id":998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":993,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"11049:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim storage pointer"}},"id":995,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11055:12:0","memberName":"policyholder","nodeType":"MemberAccess","referencedDeclaration":72,"src":"11049:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":996,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11070:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11074:6:0","memberName":"sender","nodeType":"MemberAccess","src":"11070:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11049:31:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":999,"nodeType":"ExpressionStatement","src":"11049:31:0"},{"expression":{"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1000,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"11091:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim storage pointer"}},"id":1002,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11097:6:0","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":74,"src":"11091:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1003,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"11106:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11091:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1005,"nodeType":"ExpressionStatement","src":"11091:22:0"},{"expression":{"id":1010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1006,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"11124:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim storage pointer"}},"id":1008,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11130:13:0","memberName":"treatmentType","nodeType":"MemberAccess","referencedDeclaration":76,"src":"11124:19:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1009,"name":"_treatmentType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"11146:14:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"11124:36:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1011,"nodeType":"ExpressionStatement","src":"11124:36:0"},{"expression":{"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1012,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"11171:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim storage pointer"}},"id":1014,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11177:7:0","memberName":"aabhaId","nodeType":"MemberAccess","referencedDeclaration":86,"src":"11171:13:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1015,"name":"_aabhaId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"11187:8:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"11171:24:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1017,"nodeType":"ExpressionStatement","src":"11171:24:0"},{"expression":{"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1018,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"11206:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim storage pointer"}},"id":1020,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11212:20:0","memberName":"patientAdmissionDate","nodeType":"MemberAccess","referencedDeclaration":88,"src":"11206:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1021,"name":"_patientAdmissionDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"11235:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11206:50:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1023,"nodeType":"ExpressionStatement","src":"11206:50:0"},{"expression":{"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1024,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"11267:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim storage pointer"}},"id":1026,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11273:8:0","memberName":"flightId","nodeType":"MemberAccess","referencedDeclaration":90,"src":"11267:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1027,"name":"_flightId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":653,"src":"11284:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11267:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1029,"nodeType":"ExpressionStatement","src":"11267:26:0"},{"expression":{"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1030,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"11304:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim storage pointer"}},"id":1032,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11310:24:0","memberName":"flightCancellationStatus","nodeType":"MemberAccess","referencedDeclaration":92,"src":"11304:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1033,"name":"_flightCancellationStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"11337:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11304:58:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1035,"nodeType":"ExpressionStatement","src":"11304:58:0"},{"expression":{"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1036,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"11373:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim storage pointer"}},"id":1038,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11379:18:0","memberName":"flightDelayMinutes","nodeType":"MemberAccess","referencedDeclaration":94,"src":"11373:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1039,"name":"_flightDelayMinutes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"11400:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11373:46:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1041,"nodeType":"ExpressionStatement","src":"11373:46:0"},{"expression":{"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1042,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"11430:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim storage pointer"}},"id":1044,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11436:21:0","memberName":"flightDurationMinutes","nodeType":"MemberAccess","referencedDeclaration":96,"src":"11430:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1045,"name":"_flightDurationMinutes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"11460:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11430:52:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1047,"nodeType":"ExpressionStatement","src":"11430:52:0"},{"expression":{"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1048,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"11493:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim storage pointer"}},"id":1050,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11499:10:0","memberName":"isVerified","nodeType":"MemberAccess","referencedDeclaration":80,"src":"11493:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11512:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"11493:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1053,"nodeType":"ExpressionStatement","src":"11493:24:0"},{"expression":{"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1054,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"11528:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim storage pointer"}},"id":1056,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11534:6:0","memberName":"isPaid","nodeType":"MemberAccess","referencedDeclaration":82,"src":"11528:12:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11543:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"11528:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1059,"nodeType":"ExpressionStatement","src":"11528:20:0"},{"expression":{"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1060,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"11559:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim storage pointer"}},"id":1062,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11565:10:0","memberName":"paidAmount","nodeType":"MemberAccess","referencedDeclaration":84,"src":"11559:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11578:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11559:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1065,"nodeType":"ExpressionStatement","src":"11559:20:0"},{"expression":{"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1066,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"11590:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim storage pointer"}},"id":1068,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11596:9:0","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":78,"src":"11590:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1069,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"11608:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11614:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"11608:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11590:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1072,"nodeType":"ExpressionStatement","src":"11590:33:0"},{"expression":{"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11636:20:0","subExpression":{"expression":{"id":1073,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"11636:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":1075,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11643:11:0","memberName":"claimsCount","nodeType":"MemberAccess","referencedDeclaration":67,"src":"11636:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1077,"nodeType":"ExpressionStatement","src":"11636:20:0"},{"expression":{"arguments":[{"id":1082,"name":"claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"11702:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":1078,"name":"policyClaims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"11669:12:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(string memory => uint256[] storage ref)"}},"id":1080,"indexExpression":{"id":1079,"name":"_policyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"11682:13:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11669:27:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11697:4:0","memberName":"push","nodeType":"MemberAccess","src":"11669:32:0","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11669:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1084,"nodeType":"ExpressionStatement","src":"11669:41:0"},{"expression":{"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11721:35:0","subExpression":{"baseExpression":{"id":1085,"name":"claimsCountPerYear","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"11721:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":1087,"indexExpression":{"id":1086,"name":"_policyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"11740:13:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11721:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1089,"nodeType":"ExpressionStatement","src":"11721:35:0"},{"eventCall":{"arguments":[{"id":1091,"name":"claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"11801:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1092,"name":"_policyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"11823:13:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":1093,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11851:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11855:6:0","memberName":"sender","nodeType":"MemberAccess","src":"11851:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1095,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"11876:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1096,"name":"_treatmentType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"11898:14:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1090,"name":"ClaimSubmitted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"11772:14:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory,address,uint256,string memory)"}},"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11772:151:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1098,"nodeType":"EmitStatement","src":"11767:156:0"}]},"functionSelector":"c60685d9","id":1100,"implemented":true,"kind":"function","modifiers":[],"name":"submitClaim","nameLocation":"7451:11:0","nodeType":"FunctionDefinition","parameters":{"id":660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":643,"mutability":"mutable","name":"_policyNumber","nameLocation":"7487:13:0","nodeType":"VariableDeclaration","scope":1100,"src":"7473:27:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":642,"name":"string","nodeType":"ElementaryTypeName","src":"7473:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":645,"mutability":"mutable","name":"_amount","nameLocation":"7519:7:0","nodeType":"VariableDeclaration","scope":1100,"src":"7511:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":644,"name":"uint256","nodeType":"ElementaryTypeName","src":"7511:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":647,"mutability":"mutable","name":"_treatmentType","nameLocation":"7551:14:0","nodeType":"VariableDeclaration","scope":1100,"src":"7537:28:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":646,"name":"string","nodeType":"ElementaryTypeName","src":"7537:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":649,"mutability":"mutable","name":"_aabhaId","nameLocation":"7590:8:0","nodeType":"VariableDeclaration","scope":1100,"src":"7576:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":648,"name":"string","nodeType":"ElementaryTypeName","src":"7576:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":651,"mutability":"mutable","name":"_patientAdmissionDate","nameLocation":"7617:21:0","nodeType":"VariableDeclaration","scope":1100,"src":"7609:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":650,"name":"uint256","nodeType":"ElementaryTypeName","src":"7609:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":653,"mutability":"mutable","name":"_flightId","nameLocation":"7657:9:0","nodeType":"VariableDeclaration","scope":1100,"src":"7649:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":652,"name":"uint256","nodeType":"ElementaryTypeName","src":"7649:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":655,"mutability":"mutable","name":"_flightCancellationStatus","nameLocation":"7682:25:0","nodeType":"VariableDeclaration","scope":1100,"src":"7677:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":654,"name":"bool","nodeType":"ElementaryTypeName","src":"7677:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":657,"mutability":"mutable","name":"_flightDelayMinutes","nameLocation":"7726:19:0","nodeType":"VariableDeclaration","scope":1100,"src":"7718:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":656,"name":"uint256","nodeType":"ElementaryTypeName","src":"7718:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":659,"mutability":"mutable","name":"_flightDurationMinutes","nameLocation":"7764:22:0","nodeType":"VariableDeclaration","scope":1100,"src":"7756:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":658,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7462:331:0"},"returnParameters":{"id":661,"nodeType":"ParameterList","parameters":[],"src":"7803:0:0"},"scope":1410,"src":"7442:4489:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1210,"nodeType":"Block","src":"12007:965:0","statements":[{"assignments":[1110],"declarations":[{"constant":false,"id":1110,"mutability":"mutable","name":"claim","nameLocation":"12032:5:0","nodeType":"VariableDeclaration","scope":1210,"src":"12018:19:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim"},"typeName":{"id":1109,"nodeType":"UserDefinedTypeName","pathNode":{"id":1108,"name":"Claim","nameLocations":["12018:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":97,"src":"12018:5:0"},"referencedDeclaration":97,"src":"12018:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim"}},"visibility":"internal"}],"id":1114,"initialValue":{"baseExpression":{"id":1111,"name":"claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":107,"src":"12040:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Claim_$97_storage_$","typeString":"mapping(uint256 => struct InsuranceClaims.Claim storage ref)"}},"id":1113,"indexExpression":{"id":1112,"name":"_claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"12047:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12040:16:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage","typeString":"struct InsuranceClaims.Claim storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12018:38:0"},{"assignments":[1117],"declarations":[{"constant":false,"id":1117,"mutability":"mutable","name":"policy","nameLocation":"12082:6:0","nodeType":"VariableDeclaration","scope":1210,"src":"12067:21:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy"},"typeName":{"id":1116,"nodeType":"UserDefinedTypeName","pathNode":{"id":1115,"name":"Policy","nameLocations":["12067:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":68,"src":"12067:6:0"},"referencedDeclaration":68,"src":"12067:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy"}},"visibility":"internal"}],"id":1122,"initialValue":{"baseExpression":{"id":1118,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102,"src":"12091:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Policy_$68_storage_$","typeString":"mapping(string memory => struct InsuranceClaims.Policy storage ref)"}},"id":1121,"indexExpression":{"expression":{"id":1119,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"12100:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim storage pointer"}},"id":1120,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12106:12:0","memberName":"policyNumber","nodeType":"MemberAccess","referencedDeclaration":70,"src":"12100:18:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12091:28:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage","typeString":"struct InsuranceClaims.Policy storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12067:52:0"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"id":1126,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"12217:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":1127,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12224:10:0","memberName":"policyType","nodeType":"MemberAccess","referencedDeclaration":60,"src":"12217:17:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":1125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12211:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1124,"name":"bytes","nodeType":"ElementaryTypeName","src":"12211:5:0","typeDescriptions":{}}},"id":1128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12211:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":1123,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"12201:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12201:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"hexValue":"4845414c5448","id":1133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12256:8:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_88ad4e672f8c8ca6cce86b10b118764bf098c06bb02cd6691dfb6641799afaa0","typeString":"literal_string \"HEALTH\""},"value":"HEALTH"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_88ad4e672f8c8ca6cce86b10b118764bf098c06bb02cd6691dfb6641799afaa0","typeString":"literal_string \"HEALTH\""}],"id":1132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12250:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1131,"name":"bytes","nodeType":"ElementaryTypeName","src":"12250:5:0","typeDescriptions":{}}},"id":1134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12250:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1130,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"12240:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12240:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"12201:65:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1198,"nodeType":"Block","src":"12441:449:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1159,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"12464:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim storage pointer"}},"id":1160,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12470:8:0","memberName":"flightId","nodeType":"MemberAccess","referencedDeclaration":90,"src":"12464:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12481:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12464:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d697373696e6720666c69676874204944","id":1163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12484:19:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b1208a42caf623ccc5ccf235b55c2e7a61ad82afc3fba6b1da7f6427c518407","typeString":"literal_string \"Missing flight ID\""},"value":"Missing flight ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b1208a42caf623ccc5ccf235b55c2e7a61ad82afc3fba6b1da7f6427c518407","typeString":"literal_string \"Missing flight ID\""}],"id":1158,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12456:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12456:48:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1165,"nodeType":"ExpressionStatement","src":"12456:48:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1167,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"12527:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim storage pointer"}},"id":1168,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12533:18:0","memberName":"flightDelayMinutes","nodeType":"MemberAccess","referencedDeclaration":94,"src":"12527:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"expression":{"id":1169,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"12555:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":1170,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12562:5:0","memberName":"terms","nodeType":"MemberAccess","referencedDeclaration":65,"src":"12555:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_PolicyTerms_$50_storage","typeString":"struct InsuranceClaims.PolicyTerms storage ref"}},"id":1171,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12568:16:0","memberName":"delayTimeMinutes","nodeType":"MemberAccess","referencedDeclaration":45,"src":"12555:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12527:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466c696768742064656c6179206578636565647320706f6c696379206c696d6974","id":1173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12586:35:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_7162ab672f9b66de6640bd8f3e7881cceaba0984096f72af05334674f6217e62","typeString":"literal_string \"Flight delay exceeds policy limit\""},"value":"Flight delay exceeds policy limit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7162ab672f9b66de6640bd8f3e7881cceaba0984096f72af05334674f6217e62","typeString":"literal_string \"Flight delay exceeds policy limit\""}],"id":1166,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12519:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12519:103:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1175,"nodeType":"ExpressionStatement","src":"12519:103:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1177,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"12645:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim storage pointer"}},"id":1178,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12651:21:0","memberName":"flightDurationMinutes","nodeType":"MemberAccess","referencedDeclaration":96,"src":"12645:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1179,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"12676:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":1180,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12683:5:0","memberName":"terms","nodeType":"MemberAccess","referencedDeclaration":65,"src":"12676:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_PolicyTerms_$50_storage","typeString":"struct InsuranceClaims.PolicyTerms storage ref"}},"id":1181,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12689:15:0","memberName":"travelTimeHours","nodeType":"MemberAccess","referencedDeclaration":49,"src":"12676:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3630","id":1182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12707:2:0","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"60"},"src":"12676:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12645:64:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466c69676874206475726174696f6e206578636565647320706f6c696379206c696d6974","id":1185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12711:38:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9b12fb4be5573bed060b8e69a4684629d3d6ac9ea2afaa02a989c2db60bf5d51","typeString":"literal_string \"Flight duration exceeds policy limit\""},"value":"Flight duration exceeds policy limit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9b12fb4be5573bed060b8e69a4684629d3d6ac9ea2afaa02a989c2db60bf5d51","typeString":"literal_string \"Flight duration exceeds policy limit\""}],"id":1176,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12637:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12637:113:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1187,"nodeType":"ExpressionStatement","src":"12637:113:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1189,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"12773:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim storage pointer"}},"id":1190,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12779:24:0","memberName":"flightCancellationStatus","nodeType":"MemberAccess","referencedDeclaration":92,"src":"12773:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":1191,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"12807:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":1192,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12814:5:0","memberName":"terms","nodeType":"MemberAccess","referencedDeclaration":65,"src":"12807:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_PolicyTerms_$50_storage","typeString":"struct InsuranceClaims.PolicyTerms storage ref"}},"id":1193,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12820:18:0","memberName":"cancellationStatus","nodeType":"MemberAccess","referencedDeclaration":47,"src":"12807:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12773:65:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466c696768742063616e63656c6c6174696f6e20737461747573206d69736d61746368","id":1195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12840:37:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_7d04b7c4dcb754909f365bdac4a97edadacb2bf07ca142c1a1829df3ccc0cba0","typeString":"literal_string \"Flight cancellation status mismatch\""},"value":"Flight cancellation status mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7d04b7c4dcb754909f365bdac4a97edadacb2bf07ca142c1a1829df3ccc0cba0","typeString":"literal_string \"Flight cancellation status mismatch\""}],"id":1188,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12765:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12765:113:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1197,"nodeType":"ExpressionStatement","src":"12765:113:0"}]},"id":1199,"nodeType":"IfStatement","src":"12197:693:0","trueBody":{"id":1157,"nodeType":"Block","src":"12268:167:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"expression":{"id":1140,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"12297:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim storage pointer"}},"id":1141,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12303:7:0","memberName":"aabhaId","nodeType":"MemberAccess","referencedDeclaration":86,"src":"12297:13:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":1139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12291:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1138,"name":"bytes","nodeType":"ElementaryTypeName","src":"12291:5:0","typeDescriptions":{}}},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12291:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12312:6:0","memberName":"length","nodeType":"MemberAccess","src":"12291:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12321:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12291:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d697373696e67204141424841204944","id":1146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12324:18:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_90096835a1294667ae2a5a6cb4ff5b60024b19f0022e01c1e410b06defbc48b6","typeString":"literal_string \"Missing AABHA ID\""},"value":"Missing AABHA ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_90096835a1294667ae2a5a6cb4ff5b60024b19f0022e01c1e410b06defbc48b6","typeString":"literal_string \"Missing AABHA ID\""}],"id":1137,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12283:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12283:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1148,"nodeType":"ExpressionStatement","src":"12283:60:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1150,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"12366:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim storage pointer"}},"id":1151,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12372:20:0","memberName":"patientAdmissionDate","nodeType":"MemberAccess","referencedDeclaration":88,"src":"12366:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12395:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12366:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d697373696e672061646d697373696f6e2064617465","id":1154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12398:24:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_6be397c0e0fc4954f5c8a70502282658d2c197ec28d829028354419d2451bb26","typeString":"literal_string \"Missing admission date\""},"value":"Missing admission date"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6be397c0e0fc4954f5c8a70502282658d2c197ec28d829028354419d2451bb26","typeString":"literal_string \"Missing admission date\""}],"id":1149,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12358:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12358:65:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1156,"nodeType":"ExpressionStatement","src":"12358:65:0"}]}},{"expression":{"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1200,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"12902:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim storage pointer"}},"id":1202,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12908:10:0","memberName":"isVerified","nodeType":"MemberAccess","referencedDeclaration":80,"src":"12902:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12921:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"12902:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1205,"nodeType":"ExpressionStatement","src":"12902:23:0"},{"eventCall":{"arguments":[{"id":1207,"name":"_claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"12955:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1206,"name":"ClaimVerified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"12941:13:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12941:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1209,"nodeType":"EmitStatement","src":"12936:28:0"}]},"functionSelector":"c0d7e2b6","id":1211,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":1105,"name":"_claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"11997:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1106,"kind":"modifierInvocation","modifierName":{"id":1104,"name":"claimExists","nameLocations":["11985:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":232,"src":"11985:11:0"},"nodeType":"ModifierInvocation","src":"11985:21:0"}],"name":"verifyClaim","nameLocation":"11948:11:0","nodeType":"FunctionDefinition","parameters":{"id":1103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1102,"mutability":"mutable","name":"_claimId","nameLocation":"11968:8:0","nodeType":"VariableDeclaration","scope":1211,"src":"11960:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1101,"name":"uint256","nodeType":"ElementaryTypeName","src":"11960:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11959:18:0"},"returnParameters":{"id":1107,"nodeType":"ParameterList","parameters":[],"src":"12007:0:0"},"scope":1410,"src":"11939:1033:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1284,"nodeType":"Block","src":"13029:617:0","statements":[{"assignments":[1218],"declarations":[{"constant":false,"id":1218,"mutability":"mutable","name":"claim","nameLocation":"13054:5:0","nodeType":"VariableDeclaration","scope":1284,"src":"13040:19:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim"},"typeName":{"id":1217,"nodeType":"UserDefinedTypeName","pathNode":{"id":1216,"name":"Claim","nameLocations":["13040:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":97,"src":"13040:5:0"},"referencedDeclaration":97,"src":"13040:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim"}},"visibility":"internal"}],"id":1222,"initialValue":{"baseExpression":{"id":1219,"name":"claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":107,"src":"13062:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Claim_$97_storage_$","typeString":"mapping(uint256 => struct InsuranceClaims.Claim storage ref)"}},"id":1221,"indexExpression":{"id":1220,"name":"_claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"13069:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13062:16:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage","typeString":"struct InsuranceClaims.Claim storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13040:38:0"},{"expression":{"arguments":[{"expression":{"id":1224,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"13097:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim storage pointer"}},"id":1225,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13103:10:0","memberName":"isVerified","nodeType":"MemberAccess","referencedDeclaration":80,"src":"13097:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436c61696d206e6f74207665726966696564","id":1226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13115:20:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f222d26581282125ae40964399e33c43baa44ed13a7bde3a52602a4dcd2624fb","typeString":"literal_string \"Claim not verified\""},"value":"Claim not verified"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f222d26581282125ae40964399e33c43baa44ed13a7bde3a52602a4dcd2624fb","typeString":"literal_string \"Claim not verified\""}],"id":1223,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13089:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13089:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1228,"nodeType":"ExpressionStatement","src":"13089:47:0"},{"expression":{"arguments":[{"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13155:13:0","subExpression":{"expression":{"id":1230,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"13156:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim storage pointer"}},"id":1231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13162:6:0","memberName":"isPaid","nodeType":"MemberAccess","referencedDeclaration":82,"src":"13156:12:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436c61696d20616c72656164792070616964","id":1233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13170:20:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f00b54c7845babbe8f88a73867934c8d99124bf65b43aac829e39ecb9b6e5191","typeString":"literal_string \"Claim already paid\""},"value":"Claim already paid"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f00b54c7845babbe8f88a73867934c8d99124bf65b43aac829e39ecb9b6e5191","typeString":"literal_string \"Claim already paid\""}],"id":1229,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13147:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13147:44:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1235,"nodeType":"ExpressionStatement","src":"13147:44:0"},{"assignments":[1238],"declarations":[{"constant":false,"id":1238,"mutability":"mutable","name":"policy","nameLocation":"13219:6:0","nodeType":"VariableDeclaration","scope":1284,"src":"13204:21:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy"},"typeName":{"id":1237,"nodeType":"UserDefinedTypeName","pathNode":{"id":1236,"name":"Policy","nameLocations":["13204:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":68,"src":"13204:6:0"},"referencedDeclaration":68,"src":"13204:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy"}},"visibility":"internal"}],"id":1243,"initialValue":{"baseExpression":{"id":1239,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102,"src":"13228:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Policy_$68_storage_$","typeString":"mapping(string memory => struct InsuranceClaims.Policy storage ref)"}},"id":1242,"indexExpression":{"expression":{"id":1240,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"13237:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim storage pointer"}},"id":1241,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13243:12:0","memberName":"policyNumber","nodeType":"MemberAccess","referencedDeclaration":70,"src":"13237:18:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13228:28:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage","typeString":"struct InsuranceClaims.Policy storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13204:52:0"},{"assignments":[1245],"declarations":[{"constant":false,"id":1245,"mutability":"mutable","name":"copayAmount","nameLocation":"13277:11:0","nodeType":"VariableDeclaration","scope":1284,"src":"13269:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1244,"name":"uint256","nodeType":"ElementaryTypeName","src":"13269:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1255,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1246,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"13292:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim storage pointer"}},"id":1247,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13298:6:0","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":74,"src":"13292:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"expression":{"id":1248,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"13307:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":1249,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13314:5:0","memberName":"terms","nodeType":"MemberAccess","referencedDeclaration":65,"src":"13307:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_PolicyTerms_$50_storage","typeString":"struct InsuranceClaims.PolicyTerms storage ref"}},"id":1250,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13320:15:0","memberName":"copayPercentage","nodeType":"MemberAccess","referencedDeclaration":13,"src":"13307:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13292:43:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1252,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13291:45:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":1253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13339:3:0","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"13291:51:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13269:73:0"},{"assignments":[1257],"declarations":[{"constant":false,"id":1257,"mutability":"mutable","name":"payableAmount","nameLocation":"13361:13:0","nodeType":"VariableDeclaration","scope":1284,"src":"13353:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1256,"name":"uint256","nodeType":"ElementaryTypeName","src":"13353:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1262,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1258,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"13377:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim storage pointer"}},"id":1259,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13383:6:0","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":74,"src":"13377:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1260,"name":"copayAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"13392:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13377:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13353:50:0"},{"expression":{"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1263,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"13416:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim storage pointer"}},"id":1265,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13422:6:0","memberName":"isPaid","nodeType":"MemberAccess","referencedDeclaration":82,"src":"13416:12:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13431:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"13416:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1268,"nodeType":"ExpressionStatement","src":"13416:19:0"},{"expression":{"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1269,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"13446:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim storage pointer"}},"id":1271,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13452:10:0","memberName":"paidAmount","nodeType":"MemberAccess","referencedDeclaration":84,"src":"13446:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1272,"name":"payableAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"13465:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13446:32:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1274,"nodeType":"ExpressionStatement","src":"13446:32:0"},{"eventCall":{"arguments":[{"id":1276,"name":"_claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"13525:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1277,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"13548:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim storage pointer"}},"id":1278,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13554:12:0","memberName":"policyNumber","nodeType":"MemberAccess","referencedDeclaration":70,"src":"13548:18:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"expression":{"id":1279,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"13581:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim storage pointer"}},"id":1280,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13587:12:0","memberName":"policyholder","nodeType":"MemberAccess","referencedDeclaration":72,"src":"13581:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1281,"name":"payableAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"13614:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1275,"name":"ClaimProcessed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":156,"src":"13496:14:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,string memory,address,uint256)"}},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13496:142:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1283,"nodeType":"EmitStatement","src":"13491:147:0"}]},"functionSelector":"7257dfc9","id":1285,"implemented":true,"kind":"function","modifiers":[],"name":"processClaim","nameLocation":"12989:12:0","nodeType":"FunctionDefinition","parameters":{"id":1214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1213,"mutability":"mutable","name":"_claimId","nameLocation":"13010:8:0","nodeType":"VariableDeclaration","scope":1285,"src":"13002:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1212,"name":"uint256","nodeType":"ElementaryTypeName","src":"13002:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13001:18:0"},"returnParameters":{"id":1215,"nodeType":"ParameterList","parameters":[],"src":"13029:0:0"},"scope":1410,"src":"12980:666:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1334,"nodeType":"Block","src":"13907:365:0","statements":[{"assignments":[1304],"declarations":[{"constant":false,"id":1304,"mutability":"mutable","name":"policy","nameLocation":"13933:6:0","nodeType":"VariableDeclaration","scope":1334,"src":"13918:21:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy"},"typeName":{"id":1303,"nodeType":"UserDefinedTypeName","pathNode":{"id":1302,"name":"Policy","nameLocations":["13918:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":68,"src":"13918:6:0"},"referencedDeclaration":68,"src":"13918:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy"}},"visibility":"internal"}],"id":1308,"initialValue":{"baseExpression":{"id":1305,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102,"src":"13942:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Policy_$68_storage_$","typeString":"mapping(string memory => struct InsuranceClaims.Policy storage ref)"}},"id":1307,"indexExpression":{"id":1306,"name":"_policyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"13951:13:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13942:23:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage","typeString":"struct InsuranceClaims.Policy storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13918:47:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1310,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"13984:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":1311,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13991:12:0","memberName":"policyholder","nodeType":"MemberAccess","referencedDeclaration":52,"src":"13984:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14015:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14007:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1312,"name":"address","nodeType":"ElementaryTypeName","src":"14007:7:0","typeDescriptions":{}}},"id":1315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14007:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13984:33:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6c69637920646f6573206e6f74206578697374","id":1317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14019:23:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_aea652f5dac653440c85b7b5cb25e1f01b03401ac09a38650f9eeed5ddd5b2ce","typeString":"literal_string \"Policy does not exist\""},"value":"Policy does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_aea652f5dac653440c85b7b5cb25e1f01b03401ac09a38650f9eeed5ddd5b2ce","typeString":"literal_string \"Policy does not exist\""}],"id":1309,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13976:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13976:67:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1319,"nodeType":"ExpressionStatement","src":"13976:67:0"},{"expression":{"components":[{"expression":{"id":1320,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"14076:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":1321,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14083:12:0","memberName":"policyholder","nodeType":"MemberAccess","referencedDeclaration":52,"src":"14076:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1322,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"14110:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":1323,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14117:14:0","memberName":"coverageAmount","nodeType":"MemberAccess","referencedDeclaration":54,"src":"14110:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1324,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"14146:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":1325,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14153:9:0","memberName":"startDate","nodeType":"MemberAccess","referencedDeclaration":56,"src":"14146:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1326,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"14177:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":1327,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14184:7:0","memberName":"endDate","nodeType":"MemberAccess","referencedDeclaration":58,"src":"14177:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1328,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"14206:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":1329,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14213:10:0","memberName":"policyType","nodeType":"MemberAccess","referencedDeclaration":60,"src":"14206:17:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"expression":{"id":1330,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"14238:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$68_storage_ptr","typeString":"struct InsuranceClaims.Policy storage pointer"}},"id":1331,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14245:8:0","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":62,"src":"14238:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1332,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14061:203:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_storage_$_t_bool_$","typeString":"tuple(address,uint256,uint256,uint256,string storage ref,bool)"}},"functionReturnParameters":1301,"id":1333,"nodeType":"Return","src":"14054:210:0"}]},"functionSelector":"60dd5f90","id":1335,"implemented":true,"kind":"function","modifiers":[],"name":"getPolicy","nameLocation":"13663:9:0","nodeType":"FunctionDefinition","parameters":{"id":1288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1287,"mutability":"mutable","name":"_policyNumber","nameLocation":"13687:13:0","nodeType":"VariableDeclaration","scope":1335,"src":"13673:27:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1286,"name":"string","nodeType":"ElementaryTypeName","src":"13673:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13672:29:0"},"returnParameters":{"id":1301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1290,"mutability":"mutable","name":"policyholder","nameLocation":"13741:12:0","nodeType":"VariableDeclaration","scope":1335,"src":"13733:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1289,"name":"address","nodeType":"ElementaryTypeName","src":"13733:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1292,"mutability":"mutable","name":"coverageAmount","nameLocation":"13772:14:0","nodeType":"VariableDeclaration","scope":1335,"src":"13764:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1291,"name":"uint256","nodeType":"ElementaryTypeName","src":"13764:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1294,"mutability":"mutable","name":"startDate","nameLocation":"13805:9:0","nodeType":"VariableDeclaration","scope":1335,"src":"13797:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1293,"name":"uint256","nodeType":"ElementaryTypeName","src":"13797:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1296,"mutability":"mutable","name":"endDate","nameLocation":"13833:7:0","nodeType":"VariableDeclaration","scope":1335,"src":"13825:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1295,"name":"uint256","nodeType":"ElementaryTypeName","src":"13825:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1298,"mutability":"mutable","name":"policyType","nameLocation":"13865:10:0","nodeType":"VariableDeclaration","scope":1335,"src":"13851:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1297,"name":"string","nodeType":"ElementaryTypeName","src":"13851:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1300,"mutability":"mutable","name":"isActive","nameLocation":"13891:8:0","nodeType":"VariableDeclaration","scope":1335,"src":"13886:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1299,"name":"bool","nodeType":"ElementaryTypeName","src":"13886:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13722:184:0"},"scope":1410,"src":"13654:618:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1408,"nodeType":"Block","src":"14817:556:0","statements":[{"assignments":[1373],"declarations":[{"constant":false,"id":1373,"mutability":"mutable","name":"claim","nameLocation":"14842:5:0","nodeType":"VariableDeclaration","scope":1408,"src":"14828:19:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim"},"typeName":{"id":1372,"nodeType":"UserDefinedTypeName","pathNode":{"id":1371,"name":"Claim","nameLocations":["14828:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":97,"src":"14828:5:0"},"referencedDeclaration":97,"src":"14828:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim"}},"visibility":"internal"}],"id":1377,"initialValue":{"baseExpression":{"id":1374,"name":"claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":107,"src":"14850:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Claim_$97_storage_$","typeString":"mapping(uint256 => struct InsuranceClaims.Claim storage ref)"}},"id":1376,"indexExpression":{"id":1375,"name":"_claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"14857:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14850:16:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage","typeString":"struct InsuranceClaims.Claim storage ref"}},"nodeType":"VariableDeclarationStatement","src":"14828:38:0"},{"expression":{"components":[{"expression":{"id":1378,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"14899:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim storage pointer"}},"id":1379,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14905:12:0","memberName":"policyNumber","nodeType":"MemberAccess","referencedDeclaration":70,"src":"14899:18:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"expression":{"id":1380,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"14932:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim storage pointer"}},"id":1381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14938:12:0","memberName":"policyholder","nodeType":"MemberAccess","referencedDeclaration":72,"src":"14932:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1382,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"14965:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim storage pointer"}},"id":1383,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14971:6:0","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":74,"src":"14965:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1384,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"14992:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim storage pointer"}},"id":1385,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14998:13:0","memberName":"treatmentType","nodeType":"MemberAccess","referencedDeclaration":76,"src":"14992:19:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"expression":{"id":1386,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"15026:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim storage pointer"}},"id":1387,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15032:9:0","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":78,"src":"15026:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1388,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"15056:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim storage pointer"}},"id":1389,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15062:10:0","memberName":"isVerified","nodeType":"MemberAccess","referencedDeclaration":80,"src":"15056:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":1390,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"15087:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim storage pointer"}},"id":1391,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15093:6:0","memberName":"isPaid","nodeType":"MemberAccess","referencedDeclaration":82,"src":"15087:12:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":1392,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"15114:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim storage pointer"}},"id":1393,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15120:10:0","memberName":"paidAmount","nodeType":"MemberAccess","referencedDeclaration":84,"src":"15114:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1394,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"15145:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim storage pointer"}},"id":1395,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15151:7:0","memberName":"aabhaId","nodeType":"MemberAccess","referencedDeclaration":86,"src":"15145:13:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"expression":{"id":1396,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"15173:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim storage pointer"}},"id":1397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15179:20:0","memberName":"patientAdmissionDate","nodeType":"MemberAccess","referencedDeclaration":88,"src":"15173:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1398,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"15214:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim storage pointer"}},"id":1399,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15220:8:0","memberName":"flightId","nodeType":"MemberAccess","referencedDeclaration":90,"src":"15214:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1400,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"15243:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim storage pointer"}},"id":1401,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15249:24:0","memberName":"flightCancellationStatus","nodeType":"MemberAccess","referencedDeclaration":92,"src":"15243:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":1402,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"15288:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim storage pointer"}},"id":1403,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15294:18:0","memberName":"flightDelayMinutes","nodeType":"MemberAccess","referencedDeclaration":94,"src":"15288:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1404,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"15327:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$97_storage_ptr","typeString":"struct InsuranceClaims.Claim storage pointer"}},"id":1405,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15333:21:0","memberName":"flightDurationMinutes","nodeType":"MemberAccess","referencedDeclaration":96,"src":"15327:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1406,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14884:481:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_storage_$_t_address_$_t_uint256_$_t_string_storage_$_t_uint256_$_t_bool_$_t_bool_$_t_uint256_$_t_string_storage_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$_t_uint256_$","typeString":"tuple(string storage ref,address,uint256,string storage ref,uint256,bool,bool,uint256,string storage ref,uint256,uint256,bool,uint256,uint256)"}},"functionReturnParameters":1370,"id":1407,"nodeType":"Return","src":"14877:488:0"}]},"functionSelector":"5aef2447","id":1409,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":1340,"name":"_claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"14340:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1341,"kind":"modifierInvocation","modifierName":{"id":1339,"name":"claimExists","nameLocations":["14328:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":232,"src":"14328:11:0"},"nodeType":"ModifierInvocation","src":"14328:21:0"}],"name":"getClaim","nameLocation":"14289:8:0","nodeType":"FunctionDefinition","parameters":{"id":1338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1337,"mutability":"mutable","name":"_claimId","nameLocation":"14306:8:0","nodeType":"VariableDeclaration","scope":1409,"src":"14298:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1336,"name":"uint256","nodeType":"ElementaryTypeName","src":"14298:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14297:18:0"},"returnParameters":{"id":1370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1343,"mutability":"mutable","name":"policyNumber","nameLocation":"14383:12:0","nodeType":"VariableDeclaration","scope":1409,"src":"14369:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1342,"name":"string","nodeType":"ElementaryTypeName","src":"14369:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1345,"mutability":"mutable","name":"policyholder","nameLocation":"14414:12:0","nodeType":"VariableDeclaration","scope":1409,"src":"14406:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1344,"name":"address","nodeType":"ElementaryTypeName","src":"14406:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1347,"mutability":"mutable","name":"amount","nameLocation":"14445:6:0","nodeType":"VariableDeclaration","scope":1409,"src":"14437:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1346,"name":"uint256","nodeType":"ElementaryTypeName","src":"14437:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1349,"mutability":"mutable","name":"treatmentType","nameLocation":"14476:13:0","nodeType":"VariableDeclaration","scope":1409,"src":"14462:27:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1348,"name":"string","nodeType":"ElementaryTypeName","src":"14462:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1351,"mutability":"mutable","name":"timestamp","nameLocation":"14508:9:0","nodeType":"VariableDeclaration","scope":1409,"src":"14500:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1350,"name":"uint256","nodeType":"ElementaryTypeName","src":"14500:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1353,"mutability":"mutable","name":"isVerified","nameLocation":"14533:10:0","nodeType":"VariableDeclaration","scope":1409,"src":"14528:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1352,"name":"bool","nodeType":"ElementaryTypeName","src":"14528:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1355,"mutability":"mutable","name":"isPaid","nameLocation":"14559:6:0","nodeType":"VariableDeclaration","scope":1409,"src":"14554:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1354,"name":"bool","nodeType":"ElementaryTypeName","src":"14554:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1357,"mutability":"mutable","name":"paidAmount","nameLocation":"14584:10:0","nodeType":"VariableDeclaration","scope":1409,"src":"14576:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1356,"name":"uint256","nodeType":"ElementaryTypeName","src":"14576:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1359,"mutability":"mutable","name":"aabhaId","nameLocation":"14619:7:0","nodeType":"VariableDeclaration","scope":1409,"src":"14605:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1358,"name":"string","nodeType":"ElementaryTypeName","src":"14605:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1361,"mutability":"mutable","name":"patientAdmissionDate","nameLocation":"14645:20:0","nodeType":"VariableDeclaration","scope":1409,"src":"14637:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1360,"name":"uint256","nodeType":"ElementaryTypeName","src":"14637:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1363,"mutability":"mutable","name":"flightId","nameLocation":"14684:8:0","nodeType":"VariableDeclaration","scope":1409,"src":"14676:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1362,"name":"uint256","nodeType":"ElementaryTypeName","src":"14676:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1365,"mutability":"mutable","name":"flightCancellationStatus","nameLocation":"14708:24:0","nodeType":"VariableDeclaration","scope":1409,"src":"14703:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1364,"name":"bool","nodeType":"ElementaryTypeName","src":"14703:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1367,"mutability":"mutable","name":"flightDelayMinutes","nameLocation":"14751:18:0","nodeType":"VariableDeclaration","scope":1409,"src":"14743:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1366,"name":"uint256","nodeType":"ElementaryTypeName","src":"14743:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1369,"mutability":"mutable","name":"flightDurationMinutes","nameLocation":"14788:21:0","nodeType":"VariableDeclaration","scope":1409,"src":"14780:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1368,"name":"uint256","nodeType":"ElementaryTypeName","src":"14780:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14358:458:0"},"scope":1410,"src":"14280:1093:0","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":1411,"src":"60:15316:0","usedErrors":[]}],"src":"33:15344:0"},"id":0}},"contracts":{"contracts/InsuranceClaims.sol":{"InsuranceClaims":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"claimId","type":"uint256"},{"indexed":true,"internalType":"string","name":"policyNumber","type":"string"},{"indexed":true,"internalType":"address","name":"claimant","type":"address"},{"indexed":false,"internalType":"uint256","name":"paidAmount","type":"uint256"}],"name":"ClaimProcessed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"claimId","type":"uint256"},{"indexed":true,"internalType":"string","name":"policyNumber","type":"string"},{"indexed":true,"internalType":"address","name":"claimant","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"string","name":"treatmentType","type":"string"}],"name":"ClaimSubmitted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"claimId","type":"uint256"}],"name":"ClaimVerified","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"string","name":"policyNumber","type":"string"},{"indexed":true,"internalType":"address","name":"policyholder","type":"address"},{"indexed":false,"internalType":"uint256","name":"coverageAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"startDate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"endDate","type":"uint256"},{"indexed":false,"internalType":"string","name":"policyType","type":"string"}],"name":"PolicyCreated","type":"event"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"claims","outputs":[{"internalType":"string","name":"policyNumber","type":"string"},{"internalType":"address","name":"policyholder","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"string","name":"treatmentType","type":"string"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bool","name":"isVerified","type":"bool"},{"internalType":"bool","name":"isPaid","type":"bool"},{"internalType":"uint256","name":"paidAmount","type":"uint256"},{"internalType":"string","name":"aabhaId","type":"string"},{"internalType":"uint256","name":"patientAdmissionDate","type":"uint256"},{"internalType":"uint256","name":"flightId","type":"uint256"},{"internalType":"bool","name":"flightCancellationStatus","type":"bool"},{"internalType":"uint256","name":"flightDelayMinutes","type":"uint256"},{"internalType":"uint256","name":"flightDurationMinutes","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"claimsCountPerYear","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_policyNumber","type":"string"},{"internalType":"address","name":"_policyholder","type":"address"},{"internalType":"uint256","name":"_coverageAmount","type":"uint256"},{"internalType":"uint256","name":"_startDate","type":"uint256"},{"internalType":"uint256","name":"_endDate","type":"uint256"},{"internalType":"string","name":"_policyType","type":"string"},{"internalType":"uint256","name":"_maxCoveragePerClaim","type":"uint256"},{"internalType":"uint256","name":"_copayPercentage","type":"uint256"},{"internalType":"string[]","name":"_coveredTreatments","type":"string[]"},{"internalType":"string[]","name":"_excludedTreatments","type":"string[]"},{"internalType":"uint256","name":"_waitingPeriod","type":"uint256"},{"internalType":"uint256","name":"_maxClaimsPerYear","type":"uint256"},{"internalType":"bool","name":"_preExistingConditionsCovered","type":"bool"},{"internalType":"uint256","name":"_maxHospitalizationDays","type":"uint256"},{"internalType":"uint256","name":"_maxRoomRent","type":"uint256"},{"internalType":"uint256","name":"_maxICUCharges","type":"uint256"},{"internalType":"uint256","name":"_maxOperationCharges","type":"uint256"},{"internalType":"uint256","name":"_maxMedicineCharges","type":"uint256"},{"internalType":"uint256","name":"_maxDiagnosticCharges","type":"uint256"},{"internalType":"uint256","name":"_maxAmbulanceCharges","type":"uint256"},{"internalType":"uint256","name":"_maxPreHospitalizationDays","type":"uint256"},{"internalType":"uint256","name":"_maxPostHospitalizationDays","type":"uint256"},{"internalType":"uint256","name":"_delayTimeMinutes","type":"uint256"},{"internalType":"bool","name":"_cancellationStatus","type":"bool"},{"internalType":"uint256","name":"_travelTimeHours","type":"uint256"}],"name":"createPolicy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_claimId","type":"uint256"}],"name":"getClaim","outputs":[{"internalType":"string","name":"policyNumber","type":"string"},{"internalType":"address","name":"policyholder","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"string","name":"treatmentType","type":"string"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bool","name":"isVerified","type":"bool"},{"internalType":"bool","name":"isPaid","type":"bool"},{"internalType":"uint256","name":"paidAmount","type":"uint256"},{"internalType":"string","name":"aabhaId","type":"string"},{"internalType":"uint256","name":"patientAdmissionDate","type":"uint256"},{"internalType":"uint256","name":"flightId","type":"uint256"},{"internalType":"bool","name":"flightCancellationStatus","type":"bool"},{"internalType":"uint256","name":"flightDelayMinutes","type":"uint256"},{"internalType":"uint256","name":"flightDurationMinutes","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_policyNumber","type":"string"}],"name":"getPolicy","outputs":[{"internalType":"address","name":"policyholder","type":"address"},{"internalType":"uint256","name":"coverageAmount","type":"uint256"},{"internalType":"uint256","name":"startDate","type":"uint256"},{"internalType":"uint256","name":"endDate","type":"uint256"},{"internalType":"string","name":"policyType","type":"string"},{"internalType":"bool","name":"isActive","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"insurer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nextClaimId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nextRecordId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"policies","outputs":[{"internalType":"address","name":"policyholder","type":"address"},{"internalType":"uint256","name":"coverageAmount","type":"uint256"},{"internalType":"uint256","name":"startDate","type":"uint256"},{"internalType":"uint256","name":"endDate","type":"uint256"},{"internalType":"string","name":"policyType","type":"string"},{"internalType":"bool","name":"isActive","type":"bool"},{"components":[{"internalType":"uint256","name":"maxCoveragePerClaim","type":"uint256"},{"internalType":"uint256","name":"copayPercentage","type":"uint256"},{"internalType":"string[]","name":"coveredTreatments","type":"string[]"},{"internalType":"string[]","name":"excludedTreatments","type":"string[]"},{"internalType":"uint256","name":"waitingPeriod","type":"uint256"},{"internalType":"uint256","name":"maxClaimsPerYear","type":"uint256"},{"internalType":"bool","name":"preExistingConditionsCovered","type":"bool"},{"internalType":"uint256","name":"maxHospitalizationDays","type":"uint256"},{"internalType":"uint256","name":"maxRoomRent","type":"uint256"},{"internalType":"uint256","name":"maxICUCharges","type":"uint256"},{"internalType":"uint256","name":"maxOperationCharges","type":"uint256"},{"internalType":"uint256","name":"maxMedicineCharges","type":"uint256"},{"internalType":"uint256","name":"maxDiagnosticCharges","type":"uint256"},{"internalType":"uint256","name":"maxAmbulanceCharges","type":"uint256"},{"internalType":"uint256","name":"maxPreHospitalizationDays","type":"uint256"},{"internalType":"uint256","name":"maxPostHospitalizationDays","type":"uint256"},{"internalType":"uint256","name":"delayTimeMinutes","type":"uint256"},{"internalType":"bool","name":"cancellationStatus","type":"bool"},{"internalType":"uint256","name":"travelTimeHours","type":"uint256"}],"internalType":"struct InsuranceClaims.PolicyTerms","name":"terms","type":"tuple"},{"internalType":"uint256","name":"claimsCount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"policyClaims","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_claimId","type":"uint256"}],"name":"processClaim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_insurer","type":"address"}],"name":"setInsurer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_policyNumber","type":"string"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"string","name":"_treatmentType","type":"string"},{"internalType":"string","name":"_aabhaId","type":"string"},{"internalType":"uint256","name":"_patientAdmissionDate","type":"uint256"},{"internalType":"uint256","name":"_flightId","type":"uint256"},{"internalType":"bool","name":"_flightCancellationStatus","type":"bool"},{"internalType":"uint256","name":"_flightDelayMinutes","type":"uint256"},{"internalType":"uint256","name":"_flightDurationMinutes","type":"uint256"}],"name":"submitClaim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_claimId","type":"uint256"}],"name":"verifyClaim","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523461003257600080546001600160a01b0319163317905560016002819055600355612b3290816100388239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c806333e12bfb146124d25780634a7ba3e5146122305780635aef24471461217057806360dd5f90146120725780636f5d13a014611ff95780637257dfc914611eab5780638da5cb5b14611e82578063a0021cf114611e64578063a888c2cd14611dbd578063a8e7410814611d20578063c0d7e2b614611aeb578063c60685d914610dba578063dbc837c514610d91578063dbde207d14610d735763fb20dec8146100c157600080fd5b34610d6e57610320366003190112610d6e576004356001600160401b038111610d6e576100f2903690600401612557565b6024356001600160a01b038082168203610d6e5760a4356001600160401b038111610d6e57610125903690600401612557565b92610104356001600160401b038111610d6e5761014690369060040161285e565b610124356001600160401b038111610d6e5761016690369060040161285e565b6101843515156101843503610d6e576102e43515156102e43503610d6e5783600154163303610d1d5783851615610cd85760443515610c815760643515610c47576064356084351115610bf85760443560c43511610b9757606460e43511610b4757605a6101443511610af65761016435151580610ae8575b15610a8e5761016d6101a43511610a3657601e61028435116109db57603c6102a4351161097f576101e06102c4351161093b57603061030435116108eb5785516020870190812061022e6128de565b60208151910120149081156108cf575b50156108945760405160208185516102598183858a016125ad565b81016004815203019020918486166bffffffffffffffffffffffff60a01b84541617835560443560018401556064356002840155608435600384015586516001600160401b0381116105c0576102b260048501546125d0565b601f8111610854575b50806020601f82116001146107e6576000916107db575b508160011b916000199060031b1c19161760048401555b60c435600684015560e4356007840155805190600160401b82116105c0576008840154826008860155808310610763575b5060200190600884016000526020600020916000905b82821061064e5750505050805190600160401b82116105c05760098301548260098501558083106105d6575b5060200190600983016000526020600020916000905b8282106104a05788887fd192fb9f92e59ade33907b028771f797fa186ff0d39b5c72636b25cfccc4bd80896104698a600060198c61014435600a82015561016435600b8201556103d461018435600c83019060ff801983541691151516179055565b6101a435600d8201556101c435600e8201556101e435600f8201556102043560108201556102243560118201556102443560128201556102643560138201556102843560148201556102a43560158201556102c435601682015561044a6102e435601783019060ff801983541691151516179055565b61030435601882015560058101805460ff191660011790550155612939565b9261049b604051928392604435845260643560208501526084356040850152608060608501521695608083019061271c565b0390a3005b80518051906001600160401b0382116105c0576104bd86546125d0565b601f8111610583575b50602090601f8311600114610513579282600194936020938695600092610508575b5050600019600383901b1c191690841b1787555b01940191019092610372565b0151905038806104e8565b908660005260206000209160005b601f198516811061056b575083602093600196938796938794601f19811610610552575b505050811b0187556104fc565b015160001960f88460031b161c19169055388080610545565b91926020600181928685015181550194019201610521565b6105b0908760005260206000206005601f8601811c820192602087106105b6575b601f01901c0190612922565b386104c6565b91925082916105a4565b634e487b7160e01b600052604160045260246000fd5b600984016000526020600020908382015b81830181106105f757505061035c565b80610604600192546125d0565b80610611575b50016105e7565b601f811183146106275750600081555b3861060a565b600090828252610645601f60208420920160051c8201858301612922565b81835555610621565b80518051906001600160401b0382116105c05761066b86546125d0565b601f8111610731575b50602090601f83116001146106c15792826001949360209386956000926106b6575b5050600019600383901b1c191690841b1787555b01940191019092610330565b015190503880610696565b908660005260206000209160005b601f1985168110610719575083602093600196938796938794601f19811610610700575b505050811b0187556106aa565b015160001960f88460031b161c191690553880806106f3565b919260206001819286850151815501940192016106cf565b61075d908760005260206000206005601f8601811c820192602087106105b657601f01901c0190612922565b38610674565b600885016000526020600020908382015b818301811061078457505061031a565b80610791600192546125d0565b8061079e575b5001610774565b601f811183146107b45750600081555b38610797565b6000908282526107d2601f60208420920160051c8201858301612922565b818355556107ae565b9050880151386102d2565b91506004850160005260206000206000925b8a601f198416851061083d57506001935082601f19811610610824575b5050811b0160048401556102e9565b8a015160001960f88460031b161c191690553880610815565b8101518255602093840193600190920191016107f8565b61088490600486016000526020600020601f840160051c8101916020851061088a575b601f0160051c0190612922565b386102bb565b9091508190610877565b60405162461bcd60e51b8152602060048201526013602482015272496e76616c696420706f6c696379207479706560681b6044820152606490fd5b9050865190206108dd612900565b60208151910120143861023e565b60405162461bcd60e51b815260206004820152602260248201527f54726176656c2074696d652063616e6e6f742065786365656420343820686f75604482015261727360f01b6064820152608490fd5b606460405162461bcd60e51b815260206004820152602060248201527f44656c61792074696d652063616e6e6f7420657863656564203820686f7572736044820152fd5b60405162461bcd60e51b815260206004820152602e60248201527f4d617820706f73742d686f73706974616c697a6174696f6e206461797320636160448201526d06e6e6f74206578636565642036360941b6064820152608490fd5b60405162461bcd60e51b815260206004820152602d60248201527f4d6178207072652d686f73706974616c697a6174696f6e20646179732063616e60448201526c06e6f742065786365656420333609c1b6064820152608490fd5b60405162461bcd60e51b815260206004820152602a60248201527f4d617820686f73706974616c697a6174696f6e20646179732063616e6e6f74206044820152696578636565642033363560b01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602c60248201527f4d617820636c61696d73207065722079656172206d757374206265206265747760448201526b065656e203120616e642031360a41b6064820152608490fd5b50600a6101643511156101df565b60405162461bcd60e51b8152602060048201526024808201527f57616974696e6720706572696f642063616e6e6f7420657863656564203930206044820152636461797360e01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602260248201527f436f7061792070657263656e746167652063616e6e6f74206578636565642031604482015261030360f41b6064820152608490fd5b60405162461bcd60e51b815260206004820152603360248201527f4d617820636f7665726167652070657220636c61696d2063616e6e6f742065786044820152726365656420746f74616c20636f76657261676560681b6064820152608490fd5b60405162461bcd60e51b815260206004820152602160248201527f456e642064617465206d757374206265206166746572207374617274206461746044820152606560f81b6064820152608490fd5b60405162461bcd60e51b8152602060048201526012602482015271496e76616c6964207374617274206461746560701b6044820152606490fd5b60405162461bcd60e51b815260206004820152602960248201527f436f76657261676520616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b6064820152608490fd5b60405162461bcd60e51b815260206004820152601c60248201527f496e76616c696420706f6c696379686f6c6465722061646472657373000000006044820152606490fd5b60405162461bcd60e51b815260206004820152602360248201527f4f6e6c7920696e73757265722063616e2063616c6c20746869732066756e637460448201526234b7b760e91b6064820152608490fd5b600080fd5b34610d6e576000366003190112610d6e576020600354604051908152f35b34610d6e576000366003190112610d6e576001546040516001600160a01b039091168152602090f35b34610d6e57610120366003190112610d6e576004356001600160401b038111610d6e57610deb903690600401612557565b6044356001600160401b038111610d6e57610e0a903690600401612557565b9060649081356001600160401b038111610d6e57610e2c903690600401612557565b9160c435151560c43503610d6e576040516020818451610e4f81838589016125ad565b810160048152030190209060018060a01b038254163303611a9b5760ff60058301541615611a62576002820154600a83015462015180908181029181830414901517156117e65781018091116117e6574210611a2057600382015442116119ed576024351561199a5760068201546024351161193e576019820154600b83015411156118fc57610ee16004830161260a565b60208151910120610ef06128de565b6020815191012014600014611681578351156116325760848035156115df5760a4356115985760c43561154c5760e43561150757610104356114bf5750600982015460005b81811061144a5750506000806008840154905b818110611407575b5050156113c557505b60025492610f6684612a07565b60025583600052600560205260406000209083516001600160401b0381116105c057610f9283546125d0565b601f8111611393575b50806020601f821160011461132c57600091611321575b508160011b916000199060031b1c19161782555b6001820180546001600160a01b03191633179055602435600283015585516001600160401b0381116105c057610fff60038401546125d0565b601f81116112ec575b50806020601f821160011461127f57600091611274575b508160011b916000199060031b1c19161760038301555b8051906001600160401b0382116105c057819061105660078501546125d0565b601f811161123f575b50602090601f83116001146111cd576000926111c2575b50508160011b916000199060031b1c19161760078201555b608435600882015560a43560098201556110b960c435600a83019060ff801983541691151516179055565b60e435600b82015561010435600c8201556005810161ffff1981541690556000600682015560044291015560196110f281830154612a07565b910155604051602081835161110a81838588016125ad565b8101600681520301902090815491600160401b8310156105c0578261113791600161117c95018155612830565b81549060031b9085821b91600019901b1916179055604051602081835161116181838588016125ad565b810160078152030190206111758154612a07565b9055612939565b907f638b9df33b7f660e287d98ce3f73b14ea754b151e0bcd9dd181499b9fbc2d17b604051602435815260406020820152806111bd3396604083019061271c565b0390a4005b015190508780611076565b9250600784016000526020600020906000935b601f1984168510611224576001945083601f1981161061120b575b505050811b01600782015561108e565b015160001960f88460031b161c191690558780806111fb565b818101518355602094850194600190930192909101906111e0565b61126e90600786016000526020600020601f850160051c8101916020861061088a57601f0160051c0190612922565b8861105f565b90508701518861101f565b91506003840160005260206000206000925b601f19831684106112d4576001935082601f198116106112bb575b5050811b016003830155611036565b89015160001960f88460031b161c1916905588806112ac565b89810151825560209384019360019092019101611291565b61131b90600385016000526020600020601f840160051c8101916020851061088a57601f0160051c0190612922565b87611008565b905085015188610fb2565b91508360005260206000206000925b601f198316841061137b576001935082601f19811610611362575b5050811b018255610fc6565b87015160001960f88460031b161c191690558880611356565b8781015182556020938401936001909201910161133b565b6113bf90846000526020600020601f840160051c8101916020851061088a57601f0160051c0190612922565b87610f9b565b60405162461bcd60e51b815260206004820152601f60248201527f54726561746d656e74206e6f7420636f766572656420627920706f6c696379006044820152fd5b61141d6114178260088801612830565b5061260a565b60208151910120885160208a01201461143e5761143990612a07565b610f48565b50505060018680610f50565b61145a6114178260098701612830565b60208151910120875160208901201461147b5761147690612a07565b610f35565b60405162461bcd60e51b815260206004820152601c60248201527f54726561746d656e74206578636c7564656420627920706f6c6963790000000060448201528390fd5b906e333634b3b43a10323ab930ba34b7b760891b6040519162461bcd60e51b835260206004840152602f6024840152600080516020612add8339815191526044840152820152fd5b906b666c696768742064656c617960a01b6040519162461bcd60e51b835260206004840152602c6024840152600080516020612add8339815191526044840152820152fd5b9072333634b3b43a1031b0b731b2b63630ba34b7b760691b6040519162461bcd60e51b83526020600484015260336024840152600080516020612add8339815191526044840152820152fd5b906d666c696768742064657461696c7360901b6040519162461bcd60e51b835260206004840152602e6024840152600080516020612add8339815191526044840152820152fd5b9067696f6e206461746560c01b6040519162461bcd60e51b835260206004840152602860248401527f4865616c746820636c61696d206d75737420696e636c7564652061646d6973736044840152820152fd5b60849061125160f21b6040519162461bcd60e51b835260206004840152602260248401527f4865616c746820636c61696d206d75737420696e636c756465204141424841206044840152820152fd5b61168d6004830161260a565b6020815191012061169c612900565b60208151910120146116af575b50610f59565b83516118a75760843561184c5760a435156117fc576116d6601683015460e4351115612959565b6018820154603c810290808204603c14901517156117e6576116fd906101043511156129af565b84517f43a6044c82f40f17c19f58406df90bff8d5298e48537704f37a8075c5f36d46f602087019182206444454c415960d81b602060405161173e8161251b565b60058152015214908115611794575b506116a95760405162461bcd60e51b815260206004820152601960248201527f496e76616c69642074726176656c20636c61696d2074797065000000000000006044820152fd5b7f0f36baceb8c936b84649ec32484e0932b39d39183361a521f946479fe73660029150865190206b21a0a721a2a62620aa24a7a760a11b60206040516117d98161251b565b600c81520152148661174d565b634e487b7160e01b600052601160045260246000fd5b6084906208125160ea1b6040519162461bcd60e51b835260206004840152602360248401527f54726176656c20636c61696d206d75737420696e636c75646520666c696768746044840152820152fd5b6084906d61646d697373696f6e206461746560901b6040519162461bcd60e51b835260206004840152602e60248401527f54726176656c20636c61696d2073686f756c64206e6f7420696e636c756465206044840152820152fd5b60849067105050921048125160c21b6040519162461bcd60e51b835260206004840152602860248401527f54726176656c20636c61696d2073686f756c64206e6f7420696e636c756465206044840152820152fd5b60405162461bcd60e51b815260206004820152601f60248201527f4d6178696d756d20636c61696d732070657220796561722072656163686564006044820152fd5b6084906e65726167652070657220636c61696d60881b6040519162461bcd60e51b835260206004840152602f60248401527f436c61696d20616d6f756e742065786365656473206d6178696d756d20636f766044840152820152fd5b608490656e207a65726f60d01b6040519162461bcd60e51b835260206004840152602660248401527f436c61696d20616d6f756e74206d7573742062652067726561746572207468616044840152820152fd5b60405162461bcd60e51b815260206004820152600e60248201526d141bdb1a58de48195e1c1a5c995960921b6044820152fd5b60405162461bcd60e51b815260206004820152601760248201527f57616974696e6720706572696f64206e6f74206f7665720000000000000000006044820152fd5b60405162461bcd60e51b8152602060048201526014602482015273506f6c696379206973206e6f742061637469766560601b6044820152fd5b60849062696d7360e81b6040519162461bcd60e51b835260206004840152602360248401527f4f6e6c7920706f6c696379686f6c6465722063616e207375626d697420636c616044840152820152fd5b34610d6e57602080600319360112610d6e57600435908160005260058152611b1c6004604060002001541515612a16565b81600052600581526040600020906040518181611b398186612a59565b6004815203019020611b4d6004820161260a565b828151910120611b5b6128de565b80519084012003611c2f5750611b7460078301546125d0565b15611bf857600882015415611bbb57506005905b01805460ff191660011790557f393efda0b92bc01071b66a816d6bcddde867b8c91da505a0f309d9133a53650a600080a2005b6064906040519062461bcd60e51b8252600482015260166024820152754d697373696e672061646d697373696f6e206461746560501b6044820152fd5b6064906040519062461bcd60e51b82526004820152601060248201526f135a5cdcda5b99c8105050921048125160821b6044820152fd5b600983015415611ce757611c4d600b84015460168301541015612959565b600c8301546018820154603c810290808204603c14901517156117e657611c759111156129af565b60ff601781600a8601541692015416151590151503611c975750600590611b88565b6084906040519062461bcd60e51b82526004820152602360248201527f466c696768742063616e63656c6c6174696f6e20737461747573206d69736d616044820152620e8c6d60eb1b6064820152fd5b60405162461bcd60e51b8152600481018390526011602482015270135a5cdcda5b99c8199b1a59da1d081251607a1b6044820152606490fd5b34610d6e576020366003190112610d6e576004356001600160a01b0381811691829003610d6e57600054163303611d6e576bffffffffffffffffffffffff60a01b6001541617600155600080f35b60405162461bcd60e51b815260206004820152602160248201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6044820152603760f91b6064820152608490fd5b34610d6e576020366003190112610d6e5760043560005260056020526040600020611de78161260a565b611e6060018060a01b0360018401541691600284015493611e0a6003820161260a565b9160048201549060058301546006840154611e276007860161260a565b9060088601549260098701549460ff600a8901541696600c600b8a0154990154996040519d8e9d8e9460ff808860081c1697169561279d565b0390f35b34610d6e576000366003190112610d6e576020600254604051908152f35b34610d6e576000366003190112610d6e576000546040516001600160a01b039091168152602090f35b34610d6e57602080600319360112610d6e57600435908160005260058152604060002091600583019182549060ff821615611fc05760ff8260081c16611f87576040518181611efa8189612a59565b600481520301902093600760028701549501548086029086820414861517156117e6576064900485039485116117e6576101007f6b7553a4bd186b51edcbeec8f3e76a9437a907be9ad2aba7e318eccc2816ea9a9361ff001916179055836006860155611f7a60018060a01b036001870154169560405191828092612a59565b03902093604051908152a4005b6064906040519062461bcd60e51b82526004820152601260248201527110db185a5b48185b1c9958591e481c185a5960721b6044820152fd5b6064906040519062461bcd60e51b82526004820152601260248201527110db185a5b481b9bdd081d995c9a599a595960721b6044820152fd5b34610d6e576040366003190112610d6e576004356001600160401b038111610d6e57612029903690600401612557565b61204560206024359281604051938285809451938492016125ad565b810160068152030190208054821015610d6e5760209161206491612830565b90546040519160031b1c8152f35b34610d6e576020366003190112610d6e576004356001600160401b038111610d6e5760206120a76120ba923690600401612557565b81604051938285809451938492016125ad565b60049082019081520301902080546001600160a01b0316801561213357600182015491612127600282015460038301546120fe600460ff600587015416950161260a565b91604051968796875260208701526040860152606085015260c0608085015260c084019061271c565b90151560a08301520390f35b60405162461bcd60e51b8152602060048201526015602482015274141bdb1a58de48191bd95cc81b9bdd08195e1a5cdd605a1b6044820152606490fd5b34610d6e576020366003190112610d6e576004358060005260056020526121a06004604060002001541515612a16565b6000526005602052604060002060018060a01b03600182015416611e60600283015492600481015490600581015490600681015490600881015460098201549160ff600a8201541693600b82015495600c830154976121fe8461260a565b9061221760076122106003880161260a565b960161260a565b946040519d8e9d8e9460ff808860081c1697169561279d565b34610d6e576020366003190112610d6e576001600160401b03600435818111610d6e5760206120a7612266923690600401612557565b810160048152030190209060018060a01b038254169060018301549260028101549060038101549061229a6004820161260a565b60ff6005830154169260405195610260870190878210908211176105c0576123cd9360199160405260068101548852600781015460208901526122df600882016126c7565b60408901526122f0600982016126c7565b6060890152600a8101546080890152600b81015460a089015260ff600c82015416151560c0890152600d81015460e0890152600e810154610100890152600f81015461012089015260108101546101408901526011810154610160890152601281015461018089015260138101546101a089015260148101546101c089015260158101546101e0890152601681015461020089015260ff601782015416151561022089015260188101546102408901520154946040519889988952602089015260408801526060870152610100608087015261010086019061271c565b90151560a085015283810360c085015282518152602083015160208201526102408061241f61240d60408701516102606040870152610260860190612741565b60608701518582036060870152612741565b946080810151608085015260a081015160a085015260c0810151151560c085015260e081015160e08501526101008101516101008501526101208101516101208501526101408101516101408501526101608101516101608501526101808101516101808501526101a08101516101a08501526101c08101516101c08501526101e08101516101e08501526102008101516102008501526102208101511515610220850152015191015260e08301520390f35b34610d6e576020366003190112610d6e576004356001600160401b038111610d6e5761250860206120a781933690600401612557565b8101600781520301902054604051908152f35b604081019081106001600160401b038211176105c057604052565b90601f801991011681019081106001600160401b038211176105c057604052565b81601f82011215610d6e578035906001600160401b0382116105c0576040519261258b601f8401601f191660200185612536565b82845260208383010111610d6e57816000926020809301838601378301015290565b60005b8381106125c05750506000910152565b81810151838201526020016125b0565b90600182811c92168015612600575b60208310146125ea57565b634e487b7160e01b600052602260045260246000fd5b91607f16916125df565b906040519182600082549261261e846125d0565b90818452600194858116908160001461268d575060011461264a575b505061264892500383612536565b565b9093915060005260209081600020936000915b8183106126755750506126489350820101388061263a565b8554888401850152948501948794509183019161265d565b91505061264894506020925060ff191682840152151560051b820101388061263a565b6001600160401b0381116105c05760051b60200190565b9081546126d3816126b0565b926126e16040519485612536565b818452600090815260208082208186015b848410612700575050505050565b600183819261270e8561260a565b8152019201930192906126f2565b90602091612735815180928185528580860191016125ad565b601f01601f1916010190565b908082519081815260208091019281808460051b8301019501936000915b84831061276f5750505050505090565b909192939495848061278d600193601f198682030187528a5161271c565b980193019301919493929061275f565b9a979391999e9d9c996101a09c99959692612811989460408e6127cb6127ea966101c080845283019061271c565b6001600160a01b03909516602082015201528c820360608e015261271c565b9460808b0152151560a08a0152151560c089015260e088015286820361010088015261271c565b9761012085015261014084015215156101608301526101808201520152565b80548210156128485760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b9080601f83011215610d6e57813590612876826126b0565b926128846040519485612536565b828452602092838086019160051b83010192808411610d6e57848301915b8483106128b25750505050505090565b82356001600160401b038111610d6e5786916128d384848094890101612557565b8152019201916128a2565b604051906128eb8261251b565b60068252650908a8298a8960d31b6020830152565b6040519061290d8261251b565b600682526515149055915360d21b6020830152565b81811061292d575050565b60008155600101612922565b612951906020604051928284809451938492016125ad565b810103902090565b1561296057565b60405162461bcd60e51b815260206004820152602160248201527f466c696768742064656c6179206578636565647320706f6c696379206c696d696044820152601d60fa1b6064820152608490fd5b156129b657565b60405162461bcd60e51b8152602060048201526024808201527f466c69676874206475726174696f6e206578636565647320706f6c696379206c6044820152631a5b5a5d60e21b6064820152608490fd5b60001981146117e65760010190565b15612a1d57565b60405162461bcd60e51b815260206004820152601460248201527310db185a5b48191bd95cc81b9bdd08195e1a5cdd60621b6044820152606490fd5b600092918154612a68816125d0565b92600191808316908115612ac15750600114612a85575b50505050565b90919293945060005260209081600020906000915b858310612ab05750505050019038808080612a7f565b805485840152918301918101612a9a565b60ff1916845250505081151590910201915038808080612a7f56fe4865616c746820636c61696d2073686f756c64206e6f7420696e636c75646520a264697066735822122094d0a3890eba7af63f1f670fa52ba2b60b0e0a8b11fa196257036e94072c244664736f6c63430008130033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x32 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x3 SSTORE PUSH2 0x2B32 SWAP1 DUP2 PUSH2 0x38 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x33E12BFB EQ PUSH2 0x24D2 JUMPI DUP1 PUSH4 0x4A7BA3E5 EQ PUSH2 0x2230 JUMPI DUP1 PUSH4 0x5AEF2447 EQ PUSH2 0x2170 JUMPI DUP1 PUSH4 0x60DD5F90 EQ PUSH2 0x2072 JUMPI DUP1 PUSH4 0x6F5D13A0 EQ PUSH2 0x1FF9 JUMPI DUP1 PUSH4 0x7257DFC9 EQ PUSH2 0x1EAB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E82 JUMPI DUP1 PUSH4 0xA0021CF1 EQ PUSH2 0x1E64 JUMPI DUP1 PUSH4 0xA888C2CD EQ PUSH2 0x1DBD JUMPI DUP1 PUSH4 0xA8E74108 EQ PUSH2 0x1D20 JUMPI DUP1 PUSH4 0xC0D7E2B6 EQ PUSH2 0x1AEB JUMPI DUP1 PUSH4 0xC60685D9 EQ PUSH2 0xDBA JUMPI DUP1 PUSH4 0xDBC837C5 EQ PUSH2 0xD91 JUMPI DUP1 PUSH4 0xDBDE207D EQ PUSH2 0xD73 JUMPI PUSH4 0xFB20DEC8 EQ PUSH2 0xC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xD6E JUMPI PUSH2 0x320 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD6E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xD6E JUMPI PUSH2 0xF2 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2557 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND DUP3 SUB PUSH2 0xD6E JUMPI PUSH1 0xA4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xD6E JUMPI PUSH2 0x125 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2557 JUMP JUMPDEST SWAP3 PUSH2 0x104 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xD6E JUMPI PUSH2 0x146 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x285E JUMP JUMPDEST PUSH2 0x124 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xD6E JUMPI PUSH2 0x166 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x285E JUMP JUMPDEST PUSH2 0x184 CALLDATALOAD ISZERO ISZERO PUSH2 0x184 CALLDATALOAD SUB PUSH2 0xD6E JUMPI PUSH2 0x2E4 CALLDATALOAD ISZERO ISZERO PUSH2 0x2E4 CALLDATALOAD SUB PUSH2 0xD6E JUMPI DUP4 PUSH1 0x1 SLOAD AND CALLER SUB PUSH2 0xD1D JUMPI DUP4 DUP6 AND ISZERO PUSH2 0xCD8 JUMPI PUSH1 0x44 CALLDATALOAD ISZERO PUSH2 0xC81 JUMPI PUSH1 0x64 CALLDATALOAD ISZERO PUSH2 0xC47 JUMPI PUSH1 0x64 CALLDATALOAD PUSH1 0x84 CALLDATALOAD GT ISZERO PUSH2 0xBF8 JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0xC4 CALLDATALOAD GT PUSH2 0xB97 JUMPI PUSH1 0x64 PUSH1 0xE4 CALLDATALOAD GT PUSH2 0xB47 JUMPI PUSH1 0x5A PUSH2 0x144 CALLDATALOAD GT PUSH2 0xAF6 JUMPI PUSH2 0x164 CALLDATALOAD ISZERO ISZERO DUP1 PUSH2 0xAE8 JUMPI JUMPDEST ISZERO PUSH2 0xA8E JUMPI PUSH2 0x16D PUSH2 0x1A4 CALLDATALOAD GT PUSH2 0xA36 JUMPI PUSH1 0x1E PUSH2 0x284 CALLDATALOAD GT PUSH2 0x9DB JUMPI PUSH1 0x3C PUSH2 0x2A4 CALLDATALOAD GT PUSH2 0x97F JUMPI PUSH2 0x1E0 PUSH2 0x2C4 CALLDATALOAD GT PUSH2 0x93B JUMPI PUSH1 0x30 PUSH2 0x304 CALLDATALOAD GT PUSH2 0x8EB JUMPI DUP6 MLOAD PUSH1 0x20 DUP8 ADD SWAP1 DUP2 KECCAK256 PUSH2 0x22E PUSH2 0x28DE JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 EQ SWAP1 DUP2 ISZERO PUSH2 0x8CF JUMPI JUMPDEST POP ISZERO PUSH2 0x894 JUMPI PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP6 MLOAD PUSH2 0x259 DUP2 DUP4 DUP6 DUP11 ADD PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP2 DUP5 DUP7 AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP5 SLOAD AND OR DUP4 SSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x1 DUP5 ADD SSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x3 DUP5 ADD SSTORE DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x5C0 JUMPI PUSH2 0x2B2 PUSH1 0x4 DUP6 ADD SLOAD PUSH2 0x25D0 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x854 JUMPI JUMPDEST POP DUP1 PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x7E6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x7DB JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 DUP5 ADD SSTORE JUMPDEST PUSH1 0xC4 CALLDATALOAD PUSH1 0x6 DUP5 ADD SSTORE PUSH1 0xE4 CALLDATALOAD PUSH1 0x7 DUP5 ADD SSTORE DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 GT PUSH2 0x5C0 JUMPI PUSH1 0x8 DUP5 ADD SLOAD DUP3 PUSH1 0x8 DUP7 ADD SSTORE DUP1 DUP4 LT PUSH2 0x763 JUMPI JUMPDEST POP PUSH1 0x20 ADD SWAP1 PUSH1 0x8 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x64E JUMPI POP POP POP POP DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 GT PUSH2 0x5C0 JUMPI PUSH1 0x9 DUP4 ADD SLOAD DUP3 PUSH1 0x9 DUP6 ADD SSTORE DUP1 DUP4 LT PUSH2 0x5D6 JUMPI JUMPDEST POP PUSH1 0x20 ADD SWAP1 PUSH1 0x9 DUP4 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x4A0 JUMPI DUP9 DUP9 PUSH32 0xD192FB9F92E59ADE33907B028771F797FA186FF0D39B5C72636B25CFCCC4BD80 DUP10 PUSH2 0x469 DUP11 PUSH1 0x0 PUSH1 0x19 DUP13 PUSH2 0x144 CALLDATALOAD PUSH1 0xA DUP3 ADD SSTORE PUSH2 0x164 CALLDATALOAD PUSH1 0xB DUP3 ADD SSTORE PUSH2 0x3D4 PUSH2 0x184 CALLDATALOAD PUSH1 0xC DUP4 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1A4 CALLDATALOAD PUSH1 0xD DUP3 ADD SSTORE PUSH2 0x1C4 CALLDATALOAD PUSH1 0xE DUP3 ADD SSTORE PUSH2 0x1E4 CALLDATALOAD PUSH1 0xF DUP3 ADD SSTORE PUSH2 0x204 CALLDATALOAD PUSH1 0x10 DUP3 ADD SSTORE PUSH2 0x224 CALLDATALOAD PUSH1 0x11 DUP3 ADD SSTORE PUSH2 0x244 CALLDATALOAD PUSH1 0x12 DUP3 ADD SSTORE PUSH2 0x264 CALLDATALOAD PUSH1 0x13 DUP3 ADD SSTORE PUSH2 0x284 CALLDATALOAD PUSH1 0x14 DUP3 ADD SSTORE PUSH2 0x2A4 CALLDATALOAD PUSH1 0x15 DUP3 ADD SSTORE PUSH2 0x2C4 CALLDATALOAD PUSH1 0x16 DUP3 ADD SSTORE PUSH2 0x44A PUSH2 0x2E4 CALLDATALOAD PUSH1 0x17 DUP4 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x304 CALLDATALOAD PUSH1 0x18 DUP3 ADD SSTORE PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE ADD SSTORE PUSH2 0x2939 JUMP JUMPDEST SWAP3 PUSH2 0x49B PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x44 CALLDATALOAD DUP5 MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP6 ADD MSTORE AND SWAP6 PUSH1 0x80 DUP4 ADD SWAP1 PUSH2 0x271C JUMP JUMPDEST SUB SWAP1 LOG3 STOP JUMPDEST DUP1 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x5C0 JUMPI PUSH2 0x4BD DUP7 SLOAD PUSH2 0x25D0 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x583 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x513 JUMPI SWAP3 DUP3 PUSH1 0x1 SWAP5 SWAP4 PUSH1 0x20 SWAP4 DUP7 SWAP6 PUSH1 0x0 SWAP3 PUSH2 0x508 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP5 SHL OR DUP8 SSTORE JUMPDEST ADD SWAP5 ADD SWAP2 ADD SWAP1 SWAP3 PUSH2 0x372 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x4E8 JUMP JUMPDEST SWAP1 DUP7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x56B JUMPI POP DUP4 PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP7 SWAP4 DUP8 SWAP7 SWAP4 DUP8 SWAP5 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x552 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP8 SSTORE PUSH2 0x4FC JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x545 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x521 JUMP JUMPDEST PUSH2 0x5B0 SWAP1 DUP8 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x5 PUSH1 0x1F DUP7 ADD DUP2 SHR DUP3 ADD SWAP3 PUSH1 0x20 DUP8 LT PUSH2 0x5B6 JUMPI JUMPDEST PUSH1 0x1F ADD SWAP1 SHR ADD SWAP1 PUSH2 0x2922 JUMP JUMPDEST CODESIZE PUSH2 0x4C6 JUMP JUMPDEST SWAP2 SWAP3 POP DUP3 SWAP2 PUSH2 0x5A4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x9 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP4 DUP3 ADD JUMPDEST DUP2 DUP4 ADD DUP2 LT PUSH2 0x5F7 JUMPI POP POP PUSH2 0x35C JUMP JUMPDEST DUP1 PUSH2 0x604 PUSH1 0x1 SWAP3 SLOAD PUSH2 0x25D0 JUMP JUMPDEST DUP1 PUSH2 0x611 JUMPI JUMPDEST POP ADD PUSH2 0x5E7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT DUP4 EQ PUSH2 0x627 JUMPI POP PUSH1 0x0 DUP2 SSTORE JUMPDEST CODESIZE PUSH2 0x60A JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP3 DUP3 MSTORE PUSH2 0x645 PUSH1 0x1F PUSH1 0x20 DUP5 KECCAK256 SWAP3 ADD PUSH1 0x5 SHR DUP3 ADD DUP6 DUP4 ADD PUSH2 0x2922 JUMP JUMPDEST DUP2 DUP4 SSTORE SSTORE PUSH2 0x621 JUMP JUMPDEST DUP1 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x5C0 JUMPI PUSH2 0x66B DUP7 SLOAD PUSH2 0x25D0 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x731 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x6C1 JUMPI SWAP3 DUP3 PUSH1 0x1 SWAP5 SWAP4 PUSH1 0x20 SWAP4 DUP7 SWAP6 PUSH1 0x0 SWAP3 PUSH2 0x6B6 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP5 SHL OR DUP8 SSTORE JUMPDEST ADD SWAP5 ADD SWAP2 ADD SWAP1 SWAP3 PUSH2 0x330 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x696 JUMP JUMPDEST SWAP1 DUP7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x719 JUMPI POP DUP4 PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP7 SWAP4 DUP8 SWAP7 SWAP4 DUP8 SWAP5 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x700 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP8 SSTORE PUSH2 0x6AA JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x6F3 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x6CF JUMP JUMPDEST PUSH2 0x75D SWAP1 DUP8 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x5 PUSH1 0x1F DUP7 ADD DUP2 SHR DUP3 ADD SWAP3 PUSH1 0x20 DUP8 LT PUSH2 0x5B6 JUMPI PUSH1 0x1F ADD SWAP1 SHR ADD SWAP1 PUSH2 0x2922 JUMP JUMPDEST CODESIZE PUSH2 0x674 JUMP JUMPDEST PUSH1 0x8 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP4 DUP3 ADD JUMPDEST DUP2 DUP4 ADD DUP2 LT PUSH2 0x784 JUMPI POP POP PUSH2 0x31A JUMP JUMPDEST DUP1 PUSH2 0x791 PUSH1 0x1 SWAP3 SLOAD PUSH2 0x25D0 JUMP JUMPDEST DUP1 PUSH2 0x79E JUMPI JUMPDEST POP ADD PUSH2 0x774 JUMP JUMPDEST PUSH1 0x1F DUP2 GT DUP4 EQ PUSH2 0x7B4 JUMPI POP PUSH1 0x0 DUP2 SSTORE JUMPDEST CODESIZE PUSH2 0x797 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP3 DUP3 MSTORE PUSH2 0x7D2 PUSH1 0x1F PUSH1 0x20 DUP5 KECCAK256 SWAP3 ADD PUSH1 0x5 SHR DUP3 ADD DUP6 DUP4 ADD PUSH2 0x2922 JUMP JUMPDEST DUP2 DUP4 SSTORE SSTORE PUSH2 0x7AE JUMP JUMPDEST SWAP1 POP DUP9 ADD MLOAD CODESIZE PUSH2 0x2D2 JUMP JUMPDEST SWAP2 POP PUSH1 0x4 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP3 JUMPDEST DUP11 PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x83D JUMPI POP PUSH1 0x1 SWAP4 POP DUP3 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x824 JUMPI JUMPDEST POP POP DUP2 SHL ADD PUSH1 0x4 DUP5 ADD SSTORE PUSH2 0x2E9 JUMP JUMPDEST DUP11 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 PUSH2 0x815 JUMP JUMPDEST DUP2 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0x884 SWAP1 PUSH1 0x4 DUP7 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x88A JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x2922 JUMP JUMPDEST CODESIZE PUSH2 0x2BB JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x877 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E76616C696420706F6C6963792074797065 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP DUP7 MLOAD SWAP1 KECCAK256 PUSH2 0x8DD PUSH2 0x2900 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 EQ CODESIZE PUSH2 0x23E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726176656C2074696D652063616E6E6F742065786365656420343820686F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7273 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44656C61792074696D652063616E6E6F7420657863656564203820686F757273 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D617820706F73742D686F73706974616C697A6174696F6E2064617973206361 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6E6E6F742065786365656420363 PUSH1 0x94 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178207072652D686F73706974616C697A6174696F6E20646179732063616E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x6E6F742065786365656420333 PUSH1 0x9C SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D617820686F73706974616C697A6174696F6E20646179732063616E6E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x65786365656420333635 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D617820636C61696D73207065722079656172206D7573742062652062657477 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x65656E203120616E6420313 PUSH1 0xA4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH1 0xA PUSH2 0x164 CALLDATALOAD GT ISZERO PUSH2 0x1DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x57616974696E6720706572696F642063616E6E6F742065786365656420393020 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x64617973 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F7061792070657263656E746167652063616E6E6F74206578636565642031 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x303 PUSH1 0xF4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D617820636F7665726167652070657220636C61696D2063616E6E6F74206578 PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x6365656420746F74616C20636F766572616765 PUSH1 0x68 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E642064617465206D75737420626520616674657220737461727420646174 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E76616C69642073746172742064617465 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F76657261676520616D6F756E74206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7468616E207A65726F PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420706F6C696379686F6C646572206164647265737300000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920696E73757265722063616E2063616C6C20746869732066756E6374 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x34B7B7 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xD6E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD6E JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD6E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD6E JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xD6E JUMPI PUSH2 0x120 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD6E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xD6E JUMPI PUSH2 0xDEB SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2557 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xD6E JUMPI PUSH2 0xE0A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2557 JUMP JUMPDEST SWAP1 PUSH1 0x64 SWAP1 DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xD6E JUMPI PUSH2 0xE2C SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2557 JUMP JUMPDEST SWAP2 PUSH1 0xC4 CALLDATALOAD ISZERO ISZERO PUSH1 0xC4 CALLDATALOAD SUB PUSH2 0xD6E JUMPI PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP5 MLOAD PUSH2 0xE4F DUP2 DUP4 DUP6 DUP10 ADD PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND CALLER SUB PUSH2 0x1A9B JUMPI PUSH1 0xFF PUSH1 0x5 DUP4 ADD SLOAD AND ISZERO PUSH2 0x1A62 JUMPI PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0xA DUP4 ADD SLOAD PUSH3 0x15180 SWAP1 DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x17E6 JUMPI DUP2 ADD DUP1 SWAP2 GT PUSH2 0x17E6 JUMPI TIMESTAMP LT PUSH2 0x1A20 JUMPI PUSH1 0x3 DUP3 ADD SLOAD TIMESTAMP GT PUSH2 0x19ED JUMPI PUSH1 0x24 CALLDATALOAD ISZERO PUSH2 0x199A JUMPI PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0x24 CALLDATALOAD GT PUSH2 0x193E JUMPI PUSH1 0x19 DUP3 ADD SLOAD PUSH1 0xB DUP4 ADD SLOAD GT ISZERO PUSH2 0x18FC JUMPI PUSH2 0xEE1 PUSH1 0x4 DUP4 ADD PUSH2 0x260A JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH2 0xEF0 PUSH2 0x28DE JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 EQ PUSH1 0x0 EQ PUSH2 0x1681 JUMPI DUP4 MLOAD ISZERO PUSH2 0x1632 JUMPI PUSH1 0x84 DUP1 CALLDATALOAD ISZERO PUSH2 0x15DF JUMPI PUSH1 0xA4 CALLDATALOAD PUSH2 0x1598 JUMPI PUSH1 0xC4 CALLDATALOAD PUSH2 0x154C JUMPI PUSH1 0xE4 CALLDATALOAD PUSH2 0x1507 JUMPI PUSH2 0x104 CALLDATALOAD PUSH2 0x14BF JUMPI POP PUSH1 0x9 DUP3 ADD SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x144A JUMPI POP POP PUSH1 0x0 DUP1 PUSH1 0x8 DUP5 ADD SLOAD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1407 JUMPI JUMPDEST POP POP ISZERO PUSH2 0x13C5 JUMPI POP JUMPDEST PUSH1 0x2 SLOAD SWAP3 PUSH2 0xF66 DUP5 PUSH2 0x2A07 JUMP JUMPDEST PUSH1 0x2 SSTORE DUP4 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x5C0 JUMPI PUSH2 0xF92 DUP4 SLOAD PUSH2 0x25D0 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1393 JUMPI JUMPDEST POP DUP1 PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x132C JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1321 JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR DUP3 SSTORE JUMPDEST PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x2 DUP4 ADD SSTORE DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x5C0 JUMPI PUSH2 0xFFF PUSH1 0x3 DUP5 ADD SLOAD PUSH2 0x25D0 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x12EC JUMPI JUMPDEST POP DUP1 PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x127F JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1274 JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 DUP4 ADD SSTORE JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x5C0 JUMPI DUP2 SWAP1 PUSH2 0x1056 PUSH1 0x7 DUP6 ADD SLOAD PUSH2 0x25D0 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x123F JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x11CD JUMPI PUSH1 0x0 SWAP3 PUSH2 0x11C2 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x7 DUP3 ADD SSTORE JUMPDEST PUSH1 0x84 CALLDATALOAD PUSH1 0x8 DUP3 ADD SSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0x9 DUP3 ADD SSTORE PUSH2 0x10B9 PUSH1 0xC4 CALLDATALOAD PUSH1 0xA DUP4 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xE4 CALLDATALOAD PUSH1 0xB DUP3 ADD SSTORE PUSH2 0x104 CALLDATALOAD PUSH1 0xC DUP3 ADD SSTORE PUSH1 0x5 DUP2 ADD PUSH2 0xFFFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x0 PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0x4 TIMESTAMP SWAP2 ADD SSTORE PUSH1 0x19 PUSH2 0x10F2 DUP2 DUP4 ADD SLOAD PUSH2 0x2A07 JUMP JUMPDEST SWAP2 ADD SSTORE PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 MLOAD PUSH2 0x110A DUP2 DUP4 DUP6 DUP9 ADD PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x6 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL DUP4 LT ISZERO PUSH2 0x5C0 JUMPI DUP3 PUSH2 0x1137 SWAP2 PUSH1 0x1 PUSH2 0x117C SWAP6 ADD DUP2 SSTORE PUSH2 0x2830 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 DUP6 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 MLOAD PUSH2 0x1161 DUP2 DUP4 DUP6 DUP9 ADD PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x7 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH2 0x1175 DUP2 SLOAD PUSH2 0x2A07 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x2939 JUMP JUMPDEST SWAP1 PUSH32 0x638B9DF33B7F660E287D98CE3F73B14EA754B151E0BCD9DD181499B9FBC2D17B PUSH1 0x40 MLOAD PUSH1 0x24 CALLDATALOAD DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE DUP1 PUSH2 0x11BD CALLER SWAP7 PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x271C JUMP JUMPDEST SUB SWAP1 LOG4 STOP JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0x1076 JUMP JUMPDEST SWAP3 POP PUSH1 0x7 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x1224 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x120B JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x7 DUP3 ADD SSTORE PUSH2 0x108E JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0x11FB JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x11E0 JUMP JUMPDEST PUSH2 0x126E SWAP1 PUSH1 0x7 DUP7 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x88A JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x2922 JUMP JUMPDEST DUP9 PUSH2 0x105F JUMP JUMPDEST SWAP1 POP DUP8 ADD MLOAD DUP9 PUSH2 0x101F JUMP JUMPDEST SWAP2 POP PUSH1 0x3 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP3 JUMPDEST PUSH1 0x1F NOT DUP4 AND DUP5 LT PUSH2 0x12D4 JUMPI PUSH1 0x1 SWAP4 POP DUP3 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x12BB JUMPI JUMPDEST POP POP DUP2 SHL ADD PUSH1 0x3 DUP4 ADD SSTORE PUSH2 0x1036 JUMP JUMPDEST DUP10 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 PUSH2 0x12AC JUMP JUMPDEST DUP10 DUP2 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1291 JUMP JUMPDEST PUSH2 0x131B SWAP1 PUSH1 0x3 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x88A JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x2922 JUMP JUMPDEST DUP8 PUSH2 0x1008 JUMP JUMPDEST SWAP1 POP DUP6 ADD MLOAD DUP9 PUSH2 0xFB2 JUMP JUMPDEST SWAP2 POP DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP3 JUMPDEST PUSH1 0x1F NOT DUP4 AND DUP5 LT PUSH2 0x137B JUMPI PUSH1 0x1 SWAP4 POP DUP3 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1362 JUMPI JUMPDEST POP POP DUP2 SHL ADD DUP3 SSTORE PUSH2 0xFC6 JUMP JUMPDEST DUP8 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 PUSH2 0x1356 JUMP JUMPDEST DUP8 DUP2 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x133B JUMP JUMPDEST PUSH2 0x13BF SWAP1 DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x88A JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x2922 JUMP JUMPDEST DUP8 PUSH2 0xF9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726561746D656E74206E6F7420636F766572656420627920706F6C69637900 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x141D PUSH2 0x1417 DUP3 PUSH1 0x8 DUP9 ADD PUSH2 0x2830 JUMP JUMPDEST POP PUSH2 0x260A JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 DUP9 MLOAD PUSH1 0x20 DUP11 ADD KECCAK256 EQ PUSH2 0x143E JUMPI PUSH2 0x1439 SWAP1 PUSH2 0x2A07 JUMP JUMPDEST PUSH2 0xF48 JUMP JUMPDEST POP POP POP PUSH1 0x1 DUP7 DUP1 PUSH2 0xF50 JUMP JUMPDEST PUSH2 0x145A PUSH2 0x1417 DUP3 PUSH1 0x9 DUP8 ADD PUSH2 0x2830 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 DUP8 MLOAD PUSH1 0x20 DUP10 ADD KECCAK256 EQ PUSH2 0x147B JUMPI PUSH2 0x1476 SWAP1 PUSH2 0x2A07 JUMP JUMPDEST PUSH2 0xF35 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726561746D656E74206578636C7564656420627920706F6C69637900000000 PUSH1 0x44 DUP3 ADD MSTORE DUP4 SWAP1 REVERT JUMPDEST SWAP1 PUSH15 0x333634B3B43A10323AB930BA34B7B7 PUSH1 0x89 SHL PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ADD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH12 0x666C696768742064656C6179 PUSH1 0xA0 SHL PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ADD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH19 0x333634B3B43A1031B0B731B2B63630BA34B7B7 PUSH1 0x69 SHL PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ADD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH14 0x666C696768742064657461696C73 PUSH1 0x90 SHL PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ADD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH8 0x696F6E2064617465 PUSH1 0xC0 SHL PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP5 ADD MSTORE PUSH32 0x4865616C746820636C61696D206D75737420696E636C7564652061646D697373 PUSH1 0x44 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 SWAP1 PUSH2 0x1251 PUSH1 0xF2 SHL PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP5 ADD MSTORE PUSH32 0x4865616C746820636C61696D206D75737420696E636C75646520414142484120 PUSH1 0x44 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x168D PUSH1 0x4 DUP4 ADD PUSH2 0x260A JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x169C PUSH2 0x2900 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 EQ PUSH2 0x16AF JUMPI JUMPDEST POP PUSH2 0xF59 JUMP JUMPDEST DUP4 MLOAD PUSH2 0x18A7 JUMPI PUSH1 0x84 CALLDATALOAD PUSH2 0x184C JUMPI PUSH1 0xA4 CALLDATALOAD ISZERO PUSH2 0x17FC JUMPI PUSH2 0x16D6 PUSH1 0x16 DUP4 ADD SLOAD PUSH1 0xE4 CALLDATALOAD GT ISZERO PUSH2 0x2959 JUMP JUMPDEST PUSH1 0x18 DUP3 ADD SLOAD PUSH1 0x3C DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0x3C EQ SWAP1 ISZERO OR ISZERO PUSH2 0x17E6 JUMPI PUSH2 0x16FD SWAP1 PUSH2 0x104 CALLDATALOAD GT ISZERO PUSH2 0x29AF JUMP JUMPDEST DUP5 MLOAD PUSH32 0x43A6044C82F40F17C19F58406DF90BFF8D5298E48537704F37A8075C5F36D46F PUSH1 0x20 DUP8 ADD SWAP2 DUP3 KECCAK256 PUSH5 0x44454C4159 PUSH1 0xD8 SHL PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x173E DUP2 PUSH2 0x251B JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE ADD MSTORE EQ SWAP1 DUP2 ISZERO PUSH2 0x1794 JUMPI JUMPDEST POP PUSH2 0x16A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642074726176656C20636C61696D207479706500000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH32 0xF36BACEB8C936B84649EC32484E0932B39D39183361A521F946479FE7366002 SWAP2 POP DUP7 MLOAD SWAP1 KECCAK256 PUSH12 0x21A0A721A2A62620AA24A7A7 PUSH1 0xA1 SHL PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x17D9 DUP2 PUSH2 0x251B JUMP JUMPDEST PUSH1 0xC DUP2 MSTORE ADD MSTORE EQ DUP7 PUSH2 0x174D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x84 SWAP1 PUSH3 0x81251 PUSH1 0xEA SHL PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP5 ADD MSTORE PUSH32 0x54726176656C20636C61696D206D75737420696E636C75646520666C69676874 PUSH1 0x44 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 SWAP1 PUSH14 0x61646D697373696F6E2064617465 PUSH1 0x90 SHL PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP5 ADD MSTORE PUSH32 0x54726176656C20636C61696D2073686F756C64206E6F7420696E636C75646520 PUSH1 0x44 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 SWAP1 PUSH8 0x1050509210481251 PUSH1 0xC2 SHL PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP5 ADD MSTORE PUSH32 0x54726176656C20636C61696D2073686F756C64206E6F7420696E636C75646520 PUSH1 0x44 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178696D756D20636C61696D73207065722079656172207265616368656400 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 SWAP1 PUSH15 0x65726167652070657220636C61696D PUSH1 0x88 SHL PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP5 ADD MSTORE PUSH32 0x436C61696D20616D6F756E742065786365656473206D6178696D756D20636F76 PUSH1 0x44 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 SWAP1 PUSH6 0x6E207A65726F PUSH1 0xD0 SHL PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP5 ADD MSTORE PUSH32 0x436C61696D20616D6F756E74206D757374206265206772656174657220746861 PUSH1 0x44 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x141BDB1A58DE48195E1C1A5C9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57616974696E6720706572696F64206E6F74206F766572000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x506F6C696379206973206E6F7420616374697665 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 SWAP1 PUSH3 0x696D73 PUSH1 0xE8 SHL PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP5 ADD MSTORE PUSH32 0x4F6E6C7920706F6C696379686F6C6465722063616E207375626D697420636C61 PUSH1 0x44 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0xD6E JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xD6E JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH2 0x1B1C PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD ISZERO ISZERO PUSH2 0x2A16 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD DUP2 DUP2 PUSH2 0x1B39 DUP2 DUP7 PUSH2 0x2A59 JUMP JUMPDEST PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH2 0x1B4D PUSH1 0x4 DUP3 ADD PUSH2 0x260A JUMP JUMPDEST DUP3 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x1B5B PUSH2 0x28DE JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP5 ADD KECCAK256 SUB PUSH2 0x1C2F JUMPI POP PUSH2 0x1B74 PUSH1 0x7 DUP4 ADD SLOAD PUSH2 0x25D0 JUMP JUMPDEST ISZERO PUSH2 0x1BF8 JUMPI PUSH1 0x8 DUP3 ADD SLOAD ISZERO PUSH2 0x1BBB JUMPI POP PUSH1 0x5 SWAP1 JUMPDEST ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x393EFDA0B92BC01071B66A816D6BCDDDE867B8C91DA505A0F309D9133A53650A PUSH1 0x0 DUP1 LOG2 STOP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x4D697373696E672061646D697373696F6E2064617465 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x135A5CDCDA5B99C81050509210481251 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x9 DUP4 ADD SLOAD ISZERO PUSH2 0x1CE7 JUMPI PUSH2 0x1C4D PUSH1 0xB DUP5 ADD SLOAD PUSH1 0x16 DUP4 ADD SLOAD LT ISZERO PUSH2 0x2959 JUMP JUMPDEST PUSH1 0xC DUP4 ADD SLOAD PUSH1 0x18 DUP3 ADD SLOAD PUSH1 0x3C DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0x3C EQ SWAP1 ISZERO OR ISZERO PUSH2 0x17E6 JUMPI PUSH2 0x1C75 SWAP2 GT ISZERO PUSH2 0x29AF JUMP JUMPDEST PUSH1 0xFF PUSH1 0x17 DUP2 PUSH1 0xA DUP7 ADD SLOAD AND SWAP3 ADD SLOAD AND ISZERO ISZERO SWAP1 ISZERO ISZERO SUB PUSH2 0x1C97 JUMPI POP PUSH1 0x5 SWAP1 PUSH2 0x1B88 JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C696768742063616E63656C6C6174696F6E20737461747573206D69736D61 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0xE8C6D PUSH1 0xEB SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x135A5CDCDA5B99C8199B1A59DA1D081251 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xD6E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD6E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP2 DUP3 SWAP1 SUB PUSH2 0xD6E JUMPI PUSH1 0x0 SLOAD AND CALLER SUB PUSH2 0x1D6E JUMPI PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206F776E65722063616E2063616C6C20746869732066756E6374696F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xD6E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD6E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1DE7 DUP2 PUSH2 0x260A JUMP JUMPDEST PUSH2 0x1E60 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP5 ADD SLOAD AND SWAP2 PUSH1 0x2 DUP5 ADD SLOAD SWAP4 PUSH2 0x1E0A PUSH1 0x3 DUP3 ADD PUSH2 0x260A JUMP JUMPDEST SWAP2 PUSH1 0x4 DUP3 ADD SLOAD SWAP1 PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0x6 DUP5 ADD SLOAD PUSH2 0x1E27 PUSH1 0x7 DUP7 ADD PUSH2 0x260A JUMP JUMPDEST SWAP1 PUSH1 0x8 DUP7 ADD SLOAD SWAP3 PUSH1 0x9 DUP8 ADD SLOAD SWAP5 PUSH1 0xFF PUSH1 0xA DUP10 ADD SLOAD AND SWAP7 PUSH1 0xC PUSH1 0xB DUP11 ADD SLOAD SWAP10 ADD SLOAD SWAP10 PUSH1 0x40 MLOAD SWAP14 DUP15 SWAP14 DUP15 SWAP5 PUSH1 0xFF DUP1 DUP9 PUSH1 0x8 SHR AND SWAP8 AND SWAP6 PUSH2 0x279D JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xD6E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD6E JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD6E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD6E JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xD6E JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xD6E JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x5 DUP4 ADD SWAP2 DUP3 SLOAD SWAP1 PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x1FC0 JUMPI PUSH1 0xFF DUP3 PUSH1 0x8 SHR AND PUSH2 0x1F87 JUMPI PUSH1 0x40 MLOAD DUP2 DUP2 PUSH2 0x1EFA DUP2 DUP10 PUSH2 0x2A59 JUMP JUMPDEST PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP4 PUSH1 0x7 PUSH1 0x2 DUP8 ADD SLOAD SWAP6 ADD SLOAD DUP1 DUP7 MUL SWAP1 DUP7 DUP3 DIV EQ DUP7 ISZERO OR ISZERO PUSH2 0x17E6 JUMPI PUSH1 0x64 SWAP1 DIV DUP6 SUB SWAP5 DUP6 GT PUSH2 0x17E6 JUMPI PUSH2 0x100 PUSH32 0x6B7553A4BD186B51EDCBEEC8F3E76A9437A907BE9AD2ABA7E318ECCC2816EA9A SWAP4 PUSH2 0xFF00 NOT AND OR SWAP1 SSTORE DUP4 PUSH1 0x6 DUP7 ADD SSTORE PUSH2 0x1F7A PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP8 ADD SLOAD AND SWAP6 PUSH1 0x40 MLOAD SWAP2 DUP3 DUP1 SWAP3 PUSH2 0x2A59 JUMP JUMPDEST SUB SWAP1 KECCAK256 SWAP4 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG4 STOP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x10DB185A5B48185B1C9958591E481C185A59 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x10DB185A5B481B9BDD081D995C9A599A5959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0xD6E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD6E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xD6E JUMPI PUSH2 0x2029 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2557 JUMP JUMPDEST PUSH2 0x2045 PUSH1 0x20 PUSH1 0x24 CALLDATALOAD SWAP3 DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x6 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xD6E JUMPI PUSH1 0x20 SWAP2 PUSH2 0x2064 SWAP2 PUSH2 0x2830 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD6E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD6E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xD6E JUMPI PUSH1 0x20 PUSH2 0x20A7 PUSH2 0x20BA SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2557 JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x25AD JUMP JUMPDEST PUSH1 0x4 SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x2133 JUMPI PUSH1 0x1 DUP3 ADD SLOAD SWAP2 PUSH2 0x2127 PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH2 0x20FE PUSH1 0x4 PUSH1 0xFF PUSH1 0x5 DUP8 ADD SLOAD AND SWAP6 ADD PUSH2 0x260A JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0xC0 PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD SWAP1 PUSH2 0x271C JUMP JUMPDEST SWAP1 ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x141BDB1A58DE48191BD95CC81B9BDD08195E1A5CDD PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xD6E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD6E JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x21A0 PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD ISZERO ISZERO PUSH2 0x2A16 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP3 ADD SLOAD AND PUSH2 0x1E60 PUSH1 0x2 DUP4 ADD SLOAD SWAP3 PUSH1 0x4 DUP2 ADD SLOAD SWAP1 PUSH1 0x5 DUP2 ADD SLOAD SWAP1 PUSH1 0x6 DUP2 ADD SLOAD SWAP1 PUSH1 0x8 DUP2 ADD SLOAD PUSH1 0x9 DUP3 ADD SLOAD SWAP2 PUSH1 0xFF PUSH1 0xA DUP3 ADD SLOAD AND SWAP4 PUSH1 0xB DUP3 ADD SLOAD SWAP6 PUSH1 0xC DUP4 ADD SLOAD SWAP8 PUSH2 0x21FE DUP5 PUSH2 0x260A JUMP JUMPDEST SWAP1 PUSH2 0x2217 PUSH1 0x7 PUSH2 0x2210 PUSH1 0x3 DUP9 ADD PUSH2 0x260A JUMP JUMPDEST SWAP7 ADD PUSH2 0x260A JUMP JUMPDEST SWAP5 PUSH1 0x40 MLOAD SWAP14 DUP15 SWAP14 DUP15 SWAP5 PUSH1 0xFF DUP1 DUP9 PUSH1 0x8 SHR AND SWAP8 AND SWAP6 PUSH2 0x279D JUMP JUMPDEST CALLVALUE PUSH2 0xD6E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD6E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0xD6E JUMPI PUSH1 0x20 PUSH2 0x20A7 PUSH2 0x2266 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2557 JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND SWAP1 PUSH1 0x1 DUP4 ADD SLOAD SWAP3 PUSH1 0x2 DUP2 ADD SLOAD SWAP1 PUSH1 0x3 DUP2 ADD SLOAD SWAP1 PUSH2 0x229A PUSH1 0x4 DUP3 ADD PUSH2 0x260A JUMP JUMPDEST PUSH1 0xFF PUSH1 0x5 DUP4 ADD SLOAD AND SWAP3 PUSH1 0x40 MLOAD SWAP6 PUSH2 0x260 DUP8 ADD SWAP1 DUP8 DUP3 LT SWAP1 DUP3 GT OR PUSH2 0x5C0 JUMPI PUSH2 0x23CD SWAP4 PUSH1 0x19 SWAP2 PUSH1 0x40 MSTORE PUSH1 0x6 DUP2 ADD SLOAD DUP9 MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0x20 DUP10 ADD MSTORE PUSH2 0x22DF PUSH1 0x8 DUP3 ADD PUSH2 0x26C7 JUMP JUMPDEST PUSH1 0x40 DUP10 ADD MSTORE PUSH2 0x22F0 PUSH1 0x9 DUP3 ADD PUSH2 0x26C7 JUMP JUMPDEST PUSH1 0x60 DUP10 ADD MSTORE PUSH1 0xA DUP2 ADD SLOAD PUSH1 0x80 DUP10 ADD MSTORE PUSH1 0xB DUP2 ADD SLOAD PUSH1 0xA0 DUP10 ADD MSTORE PUSH1 0xFF PUSH1 0xC DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0xC0 DUP10 ADD MSTORE PUSH1 0xD DUP2 ADD SLOAD PUSH1 0xE0 DUP10 ADD MSTORE PUSH1 0xE DUP2 ADD SLOAD PUSH2 0x100 DUP10 ADD MSTORE PUSH1 0xF DUP2 ADD SLOAD PUSH2 0x120 DUP10 ADD MSTORE PUSH1 0x10 DUP2 ADD SLOAD PUSH2 0x140 DUP10 ADD MSTORE PUSH1 0x11 DUP2 ADD SLOAD PUSH2 0x160 DUP10 ADD MSTORE PUSH1 0x12 DUP2 ADD SLOAD PUSH2 0x180 DUP10 ADD MSTORE PUSH1 0x13 DUP2 ADD SLOAD PUSH2 0x1A0 DUP10 ADD MSTORE PUSH1 0x14 DUP2 ADD SLOAD PUSH2 0x1C0 DUP10 ADD MSTORE PUSH1 0x15 DUP2 ADD SLOAD PUSH2 0x1E0 DUP10 ADD MSTORE PUSH1 0x16 DUP2 ADD SLOAD PUSH2 0x200 DUP10 ADD MSTORE PUSH1 0xFF PUSH1 0x17 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH2 0x220 DUP10 ADD MSTORE PUSH1 0x18 DUP2 ADD SLOAD PUSH2 0x240 DUP10 ADD MSTORE ADD SLOAD SWAP5 PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP9 DUP10 MSTORE PUSH1 0x20 DUP10 ADD MSTORE PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x100 PUSH1 0x80 DUP8 ADD MSTORE PUSH2 0x100 DUP7 ADD SWAP1 PUSH2 0x271C JUMP JUMPDEST SWAP1 ISZERO ISZERO PUSH1 0xA0 DUP6 ADD MSTORE DUP4 DUP2 SUB PUSH1 0xC0 DUP6 ADD MSTORE DUP3 MLOAD DUP2 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x240 DUP1 PUSH2 0x241F PUSH2 0x240D PUSH1 0x40 DUP8 ADD MLOAD PUSH2 0x260 PUSH1 0x40 DUP8 ADD MSTORE PUSH2 0x260 DUP7 ADD SWAP1 PUSH2 0x2741 JUMP JUMPDEST PUSH1 0x60 DUP8 ADD MLOAD DUP6 DUP3 SUB PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x2741 JUMP JUMPDEST SWAP5 PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH2 0x120 DUP6 ADD MSTORE PUSH2 0x140 DUP2 ADD MLOAD PUSH2 0x140 DUP6 ADD MSTORE PUSH2 0x160 DUP2 ADD MLOAD PUSH2 0x160 DUP6 ADD MSTORE PUSH2 0x180 DUP2 ADD MLOAD PUSH2 0x180 DUP6 ADD MSTORE PUSH2 0x1A0 DUP2 ADD MLOAD PUSH2 0x1A0 DUP6 ADD MSTORE PUSH2 0x1C0 DUP2 ADD MLOAD PUSH2 0x1C0 DUP6 ADD MSTORE PUSH2 0x1E0 DUP2 ADD MLOAD PUSH2 0x1E0 DUP6 ADD MSTORE PUSH2 0x200 DUP2 ADD MLOAD PUSH2 0x200 DUP6 ADD MSTORE PUSH2 0x220 DUP2 ADD MLOAD ISZERO ISZERO PUSH2 0x220 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE PUSH1 0xE0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xD6E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD6E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xD6E JUMPI PUSH2 0x2508 PUSH1 0x20 PUSH2 0x20A7 DUP2 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2557 JUMP JUMPDEST DUP2 ADD PUSH1 0x7 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x5C0 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x5C0 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0xD6E JUMPI DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x5C0 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x258B PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x2536 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0xD6E JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x25C0 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x25B0 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x2600 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x25EA JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x25DF JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x261E DUP5 PUSH2 0x25D0 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x268D JUMPI POP PUSH1 0x1 EQ PUSH2 0x264A JUMPI JUMPDEST POP POP PUSH2 0x2648 SWAP3 POP SUB DUP4 PUSH2 0x2536 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x2675 JUMPI POP POP PUSH2 0x2648 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x263A JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x265D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2648 SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x263A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x5C0 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 SLOAD PUSH2 0x26D3 DUP2 PUSH2 0x26B0 JUMP JUMPDEST SWAP3 PUSH2 0x26E1 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2536 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 DUP2 DUP7 ADD JUMPDEST DUP5 DUP5 LT PUSH2 0x2700 JUMPI POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP4 DUP2 SWAP3 PUSH2 0x270E DUP6 PUSH2 0x260A JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP4 ADD SWAP3 SWAP1 PUSH2 0x26F2 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x2735 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x25AD JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 DUP1 DUP3 MLOAD SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 DUP1 SWAP2 ADD SWAP3 DUP2 DUP1 DUP5 PUSH1 0x5 SHL DUP4 ADD ADD SWAP6 ADD SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x276F JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 DUP5 DUP1 PUSH2 0x278D PUSH1 0x1 SWAP4 PUSH1 0x1F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP11 MLOAD PUSH2 0x271C JUMP JUMPDEST SWAP9 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP5 SWAP4 SWAP3 SWAP1 PUSH2 0x275F JUMP JUMPDEST SWAP11 SWAP8 SWAP4 SWAP2 SWAP10 SWAP15 SWAP14 SWAP13 SWAP10 PUSH2 0x1A0 SWAP13 SWAP10 SWAP6 SWAP7 SWAP3 PUSH2 0x2811 SWAP9 SWAP5 PUSH1 0x40 DUP15 PUSH2 0x27CB PUSH2 0x27EA SWAP7 PUSH2 0x1C0 DUP1 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x271C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE DUP13 DUP3 SUB PUSH1 0x60 DUP15 ADD MSTORE PUSH2 0x271C JUMP JUMPDEST SWAP5 PUSH1 0x80 DUP12 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP11 ADD MSTORE ISZERO ISZERO PUSH1 0xC0 DUP10 ADD MSTORE PUSH1 0xE0 DUP9 ADD MSTORE DUP7 DUP3 SUB PUSH2 0x100 DUP9 ADD MSTORE PUSH2 0x271C JUMP JUMPDEST SWAP8 PUSH2 0x120 DUP6 ADD MSTORE PUSH2 0x140 DUP5 ADD MSTORE ISZERO ISZERO PUSH2 0x160 DUP4 ADD MSTORE PUSH2 0x180 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x2848 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0xD6E JUMPI DUP2 CALLDATALOAD SWAP1 PUSH2 0x2876 DUP3 PUSH2 0x26B0 JUMP JUMPDEST SWAP3 PUSH2 0x2884 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2536 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP1 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 DUP1 DUP5 GT PUSH2 0xD6E JUMPI DUP5 DUP4 ADD SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x28B2 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xD6E JUMPI DUP7 SWAP2 PUSH2 0x28D3 DUP5 DUP5 DUP1 SWAP5 DUP10 ADD ADD PUSH2 0x2557 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x28A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x28EB DUP3 PUSH2 0x251B JUMP JUMPDEST PUSH1 0x6 DUP3 MSTORE PUSH6 0x908A8298A89 PUSH1 0xD3 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x290D DUP3 PUSH2 0x251B JUMP JUMPDEST PUSH1 0x6 DUP3 MSTORE PUSH6 0x151490559153 PUSH1 0xD2 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x292D JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2922 JUMP JUMPDEST PUSH2 0x2951 SWAP1 PUSH1 0x20 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD SUB SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2960 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C696768742064656C6179206578636565647320706F6C696379206C696D69 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x29B6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x466C69676874206475726174696F6E206578636565647320706F6C696379206C PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x1A5B5A5D PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x17E6 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2A1D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x10DB185A5B48191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 SWAP2 DUP2 SLOAD PUSH2 0x2A68 DUP2 PUSH2 0x25D0 JUMP JUMPDEST SWAP3 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x2AC1 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2A85 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP6 DUP4 LT PUSH2 0x2AB0 JUMPI POP POP POP POP ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x2A7F JUMP JUMPDEST DUP1 SLOAD DUP6 DUP5 ADD MSTORE SWAP2 DUP4 ADD SWAP2 DUP2 ADD PUSH2 0x2A9A JUMP JUMPDEST PUSH1 0xFF NOT AND DUP5 MSTORE POP POP POP DUP2 ISZERO ISZERO SWAP1 SWAP2 MUL ADD SWAP2 POP CODESIZE DUP1 DUP1 DUP1 PUSH2 0x2A7F JUMP INVALID BASEFEE PUSH6 0x616C74682063 PUSH13 0x61696D2073686F756C64206E6F PUSH21 0x20696E636C75646520A264697066735822122094D0 LOG3 DUP10 0xE 0xBA PUSH27 0xF63F1F670FA52BA2B60B0E0A8B11FA196257036E94072C24466473 PUSH16 0x6C634300081300330000000000000000 ","sourceMap":"60:15316:0:-:0;;;;;;;2515:18;60:15316;;-1:-1:-1;;;;;;60:15316:0;2523:10;60:15316;;;;2544:15;60:15316;;;2570:16;60:15316;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_array_string_dyn":{"entryPoint":10334,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string":{"entryPoint":9559,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_string_dyn":{"entryPoint":10049,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":10012,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_address_uint256_string_uint256_bool_bool_uint256_string_uint256_uint256_bool_uint256_uint256":{"entryPoint":10141,"id":null,"parameterSlots":15,"returnSlots":1},"abi_encode_string_storage":{"entryPoint":10841,"id":null,"parameterSlots":2,"returnSlots":1},"array_allocation_size_array_string_dyn":{"entryPoint":9904,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_bytes1":{"entryPoint":10530,"id":null,"parameterSlots":2,"returnSlots":0},"copy_array_from_storage_to_memory_array_string_dyn":{"entryPoint":9927,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":9738,"id":null,"parameterSlots":1,"returnSlots":1},"copy_literal_to_memory_88ad4e672f8c8ca6cce86b10b118764bf098c06bb02cd6691dfb6641799afaa0":{"entryPoint":10462,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_ec93b39f2847437875d05f2efaca82def6c25a144b72a43a099330de323d931d":{"entryPoint":10496,"id":null,"parameterSlots":0,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":9645,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":9680,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":9526,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_46036":{"entryPoint":9499,"id":null,"parameterSlots":1,"returnSlots":0},"increment_uint256":{"entryPoint":10759,"id":null,"parameterSlots":1,"returnSlots":1},"packed_hashed_string_to_string":{"entryPoint":10553,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":10585,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_9b12":{"entryPoint":10671,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_eabb":{"entryPoint":10774,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_uint256_dyn":{"entryPoint":10288,"id":null,"parameterSlots":2,"returnSlots":2},"update_storage_value_offsett_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x33E12BFB EQ PUSH2 0x24D2 JUMPI DUP1 PUSH4 0x4A7BA3E5 EQ PUSH2 0x2230 JUMPI DUP1 PUSH4 0x5AEF2447 EQ PUSH2 0x2170 JUMPI DUP1 PUSH4 0x60DD5F90 EQ PUSH2 0x2072 JUMPI DUP1 PUSH4 0x6F5D13A0 EQ PUSH2 0x1FF9 JUMPI DUP1 PUSH4 0x7257DFC9 EQ PUSH2 0x1EAB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E82 JUMPI DUP1 PUSH4 0xA0021CF1 EQ PUSH2 0x1E64 JUMPI DUP1 PUSH4 0xA888C2CD EQ PUSH2 0x1DBD JUMPI DUP1 PUSH4 0xA8E74108 EQ PUSH2 0x1D20 JUMPI DUP1 PUSH4 0xC0D7E2B6 EQ PUSH2 0x1AEB JUMPI DUP1 PUSH4 0xC60685D9 EQ PUSH2 0xDBA JUMPI DUP1 PUSH4 0xDBC837C5 EQ PUSH2 0xD91 JUMPI DUP1 PUSH4 0xDBDE207D EQ PUSH2 0xD73 JUMPI PUSH4 0xFB20DEC8 EQ PUSH2 0xC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xD6E JUMPI PUSH2 0x320 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD6E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xD6E JUMPI PUSH2 0xF2 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2557 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND DUP3 SUB PUSH2 0xD6E JUMPI PUSH1 0xA4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xD6E JUMPI PUSH2 0x125 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2557 JUMP JUMPDEST SWAP3 PUSH2 0x104 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xD6E JUMPI PUSH2 0x146 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x285E JUMP JUMPDEST PUSH2 0x124 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xD6E JUMPI PUSH2 0x166 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x285E JUMP JUMPDEST PUSH2 0x184 CALLDATALOAD ISZERO ISZERO PUSH2 0x184 CALLDATALOAD SUB PUSH2 0xD6E JUMPI PUSH2 0x2E4 CALLDATALOAD ISZERO ISZERO PUSH2 0x2E4 CALLDATALOAD SUB PUSH2 0xD6E JUMPI DUP4 PUSH1 0x1 SLOAD AND CALLER SUB PUSH2 0xD1D JUMPI DUP4 DUP6 AND ISZERO PUSH2 0xCD8 JUMPI PUSH1 0x44 CALLDATALOAD ISZERO PUSH2 0xC81 JUMPI PUSH1 0x64 CALLDATALOAD ISZERO PUSH2 0xC47 JUMPI PUSH1 0x64 CALLDATALOAD PUSH1 0x84 CALLDATALOAD GT ISZERO PUSH2 0xBF8 JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0xC4 CALLDATALOAD GT PUSH2 0xB97 JUMPI PUSH1 0x64 PUSH1 0xE4 CALLDATALOAD GT PUSH2 0xB47 JUMPI PUSH1 0x5A PUSH2 0x144 CALLDATALOAD GT PUSH2 0xAF6 JUMPI PUSH2 0x164 CALLDATALOAD ISZERO ISZERO DUP1 PUSH2 0xAE8 JUMPI JUMPDEST ISZERO PUSH2 0xA8E JUMPI PUSH2 0x16D PUSH2 0x1A4 CALLDATALOAD GT PUSH2 0xA36 JUMPI PUSH1 0x1E PUSH2 0x284 CALLDATALOAD GT PUSH2 0x9DB JUMPI PUSH1 0x3C PUSH2 0x2A4 CALLDATALOAD GT PUSH2 0x97F JUMPI PUSH2 0x1E0 PUSH2 0x2C4 CALLDATALOAD GT PUSH2 0x93B JUMPI PUSH1 0x30 PUSH2 0x304 CALLDATALOAD GT PUSH2 0x8EB JUMPI DUP6 MLOAD PUSH1 0x20 DUP8 ADD SWAP1 DUP2 KECCAK256 PUSH2 0x22E PUSH2 0x28DE JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 EQ SWAP1 DUP2 ISZERO PUSH2 0x8CF JUMPI JUMPDEST POP ISZERO PUSH2 0x894 JUMPI PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP6 MLOAD PUSH2 0x259 DUP2 DUP4 DUP6 DUP11 ADD PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP2 DUP5 DUP7 AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP5 SLOAD AND OR DUP4 SSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x1 DUP5 ADD SSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x3 DUP5 ADD SSTORE DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x5C0 JUMPI PUSH2 0x2B2 PUSH1 0x4 DUP6 ADD SLOAD PUSH2 0x25D0 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x854 JUMPI JUMPDEST POP DUP1 PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x7E6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x7DB JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 DUP5 ADD SSTORE JUMPDEST PUSH1 0xC4 CALLDATALOAD PUSH1 0x6 DUP5 ADD SSTORE PUSH1 0xE4 CALLDATALOAD PUSH1 0x7 DUP5 ADD SSTORE DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 GT PUSH2 0x5C0 JUMPI PUSH1 0x8 DUP5 ADD SLOAD DUP3 PUSH1 0x8 DUP7 ADD SSTORE DUP1 DUP4 LT PUSH2 0x763 JUMPI JUMPDEST POP PUSH1 0x20 ADD SWAP1 PUSH1 0x8 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x64E JUMPI POP POP POP POP DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 GT PUSH2 0x5C0 JUMPI PUSH1 0x9 DUP4 ADD SLOAD DUP3 PUSH1 0x9 DUP6 ADD SSTORE DUP1 DUP4 LT PUSH2 0x5D6 JUMPI JUMPDEST POP PUSH1 0x20 ADD SWAP1 PUSH1 0x9 DUP4 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x4A0 JUMPI DUP9 DUP9 PUSH32 0xD192FB9F92E59ADE33907B028771F797FA186FF0D39B5C72636B25CFCCC4BD80 DUP10 PUSH2 0x469 DUP11 PUSH1 0x0 PUSH1 0x19 DUP13 PUSH2 0x144 CALLDATALOAD PUSH1 0xA DUP3 ADD SSTORE PUSH2 0x164 CALLDATALOAD PUSH1 0xB DUP3 ADD SSTORE PUSH2 0x3D4 PUSH2 0x184 CALLDATALOAD PUSH1 0xC DUP4 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1A4 CALLDATALOAD PUSH1 0xD DUP3 ADD SSTORE PUSH2 0x1C4 CALLDATALOAD PUSH1 0xE DUP3 ADD SSTORE PUSH2 0x1E4 CALLDATALOAD PUSH1 0xF DUP3 ADD SSTORE PUSH2 0x204 CALLDATALOAD PUSH1 0x10 DUP3 ADD SSTORE PUSH2 0x224 CALLDATALOAD PUSH1 0x11 DUP3 ADD SSTORE PUSH2 0x244 CALLDATALOAD PUSH1 0x12 DUP3 ADD SSTORE PUSH2 0x264 CALLDATALOAD PUSH1 0x13 DUP3 ADD SSTORE PUSH2 0x284 CALLDATALOAD PUSH1 0x14 DUP3 ADD SSTORE PUSH2 0x2A4 CALLDATALOAD PUSH1 0x15 DUP3 ADD SSTORE PUSH2 0x2C4 CALLDATALOAD PUSH1 0x16 DUP3 ADD SSTORE PUSH2 0x44A PUSH2 0x2E4 CALLDATALOAD PUSH1 0x17 DUP4 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x304 CALLDATALOAD PUSH1 0x18 DUP3 ADD SSTORE PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE ADD SSTORE PUSH2 0x2939 JUMP JUMPDEST SWAP3 PUSH2 0x49B PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x44 CALLDATALOAD DUP5 MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP6 ADD MSTORE AND SWAP6 PUSH1 0x80 DUP4 ADD SWAP1 PUSH2 0x271C JUMP JUMPDEST SUB SWAP1 LOG3 STOP JUMPDEST DUP1 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x5C0 JUMPI PUSH2 0x4BD DUP7 SLOAD PUSH2 0x25D0 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x583 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x513 JUMPI SWAP3 DUP3 PUSH1 0x1 SWAP5 SWAP4 PUSH1 0x20 SWAP4 DUP7 SWAP6 PUSH1 0x0 SWAP3 PUSH2 0x508 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP5 SHL OR DUP8 SSTORE JUMPDEST ADD SWAP5 ADD SWAP2 ADD SWAP1 SWAP3 PUSH2 0x372 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x4E8 JUMP JUMPDEST SWAP1 DUP7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x56B JUMPI POP DUP4 PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP7 SWAP4 DUP8 SWAP7 SWAP4 DUP8 SWAP5 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x552 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP8 SSTORE PUSH2 0x4FC JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x545 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x521 JUMP JUMPDEST PUSH2 0x5B0 SWAP1 DUP8 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x5 PUSH1 0x1F DUP7 ADD DUP2 SHR DUP3 ADD SWAP3 PUSH1 0x20 DUP8 LT PUSH2 0x5B6 JUMPI JUMPDEST PUSH1 0x1F ADD SWAP1 SHR ADD SWAP1 PUSH2 0x2922 JUMP JUMPDEST CODESIZE PUSH2 0x4C6 JUMP JUMPDEST SWAP2 SWAP3 POP DUP3 SWAP2 PUSH2 0x5A4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x9 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP4 DUP3 ADD JUMPDEST DUP2 DUP4 ADD DUP2 LT PUSH2 0x5F7 JUMPI POP POP PUSH2 0x35C JUMP JUMPDEST DUP1 PUSH2 0x604 PUSH1 0x1 SWAP3 SLOAD PUSH2 0x25D0 JUMP JUMPDEST DUP1 PUSH2 0x611 JUMPI JUMPDEST POP ADD PUSH2 0x5E7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT DUP4 EQ PUSH2 0x627 JUMPI POP PUSH1 0x0 DUP2 SSTORE JUMPDEST CODESIZE PUSH2 0x60A JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP3 DUP3 MSTORE PUSH2 0x645 PUSH1 0x1F PUSH1 0x20 DUP5 KECCAK256 SWAP3 ADD PUSH1 0x5 SHR DUP3 ADD DUP6 DUP4 ADD PUSH2 0x2922 JUMP JUMPDEST DUP2 DUP4 SSTORE SSTORE PUSH2 0x621 JUMP JUMPDEST DUP1 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x5C0 JUMPI PUSH2 0x66B DUP7 SLOAD PUSH2 0x25D0 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x731 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x6C1 JUMPI SWAP3 DUP3 PUSH1 0x1 SWAP5 SWAP4 PUSH1 0x20 SWAP4 DUP7 SWAP6 PUSH1 0x0 SWAP3 PUSH2 0x6B6 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP5 SHL OR DUP8 SSTORE JUMPDEST ADD SWAP5 ADD SWAP2 ADD SWAP1 SWAP3 PUSH2 0x330 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x696 JUMP JUMPDEST SWAP1 DUP7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x719 JUMPI POP DUP4 PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP7 SWAP4 DUP8 SWAP7 SWAP4 DUP8 SWAP5 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x700 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP8 SSTORE PUSH2 0x6AA JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x6F3 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x6CF JUMP JUMPDEST PUSH2 0x75D SWAP1 DUP8 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x5 PUSH1 0x1F DUP7 ADD DUP2 SHR DUP3 ADD SWAP3 PUSH1 0x20 DUP8 LT PUSH2 0x5B6 JUMPI PUSH1 0x1F ADD SWAP1 SHR ADD SWAP1 PUSH2 0x2922 JUMP JUMPDEST CODESIZE PUSH2 0x674 JUMP JUMPDEST PUSH1 0x8 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP4 DUP3 ADD JUMPDEST DUP2 DUP4 ADD DUP2 LT PUSH2 0x784 JUMPI POP POP PUSH2 0x31A JUMP JUMPDEST DUP1 PUSH2 0x791 PUSH1 0x1 SWAP3 SLOAD PUSH2 0x25D0 JUMP JUMPDEST DUP1 PUSH2 0x79E JUMPI JUMPDEST POP ADD PUSH2 0x774 JUMP JUMPDEST PUSH1 0x1F DUP2 GT DUP4 EQ PUSH2 0x7B4 JUMPI POP PUSH1 0x0 DUP2 SSTORE JUMPDEST CODESIZE PUSH2 0x797 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP3 DUP3 MSTORE PUSH2 0x7D2 PUSH1 0x1F PUSH1 0x20 DUP5 KECCAK256 SWAP3 ADD PUSH1 0x5 SHR DUP3 ADD DUP6 DUP4 ADD PUSH2 0x2922 JUMP JUMPDEST DUP2 DUP4 SSTORE SSTORE PUSH2 0x7AE JUMP JUMPDEST SWAP1 POP DUP9 ADD MLOAD CODESIZE PUSH2 0x2D2 JUMP JUMPDEST SWAP2 POP PUSH1 0x4 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP3 JUMPDEST DUP11 PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x83D JUMPI POP PUSH1 0x1 SWAP4 POP DUP3 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x824 JUMPI JUMPDEST POP POP DUP2 SHL ADD PUSH1 0x4 DUP5 ADD SSTORE PUSH2 0x2E9 JUMP JUMPDEST DUP11 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 PUSH2 0x815 JUMP JUMPDEST DUP2 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0x884 SWAP1 PUSH1 0x4 DUP7 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x88A JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x2922 JUMP JUMPDEST CODESIZE PUSH2 0x2BB JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x877 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E76616C696420706F6C6963792074797065 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP DUP7 MLOAD SWAP1 KECCAK256 PUSH2 0x8DD PUSH2 0x2900 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 EQ CODESIZE PUSH2 0x23E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726176656C2074696D652063616E6E6F742065786365656420343820686F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7273 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44656C61792074696D652063616E6E6F7420657863656564203820686F757273 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D617820706F73742D686F73706974616C697A6174696F6E2064617973206361 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6E6E6F742065786365656420363 PUSH1 0x94 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178207072652D686F73706974616C697A6174696F6E20646179732063616E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x6E6F742065786365656420333 PUSH1 0x9C SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D617820686F73706974616C697A6174696F6E20646179732063616E6E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x65786365656420333635 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D617820636C61696D73207065722079656172206D7573742062652062657477 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x65656E203120616E6420313 PUSH1 0xA4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH1 0xA PUSH2 0x164 CALLDATALOAD GT ISZERO PUSH2 0x1DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x57616974696E6720706572696F642063616E6E6F742065786365656420393020 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x64617973 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F7061792070657263656E746167652063616E6E6F74206578636565642031 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x303 PUSH1 0xF4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D617820636F7665726167652070657220636C61696D2063616E6E6F74206578 PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x6365656420746F74616C20636F766572616765 PUSH1 0x68 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E642064617465206D75737420626520616674657220737461727420646174 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E76616C69642073746172742064617465 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F76657261676520616D6F756E74206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7468616E207A65726F PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420706F6C696379686F6C646572206164647265737300000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920696E73757265722063616E2063616C6C20746869732066756E6374 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x34B7B7 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xD6E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD6E JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD6E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD6E JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xD6E JUMPI PUSH2 0x120 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD6E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xD6E JUMPI PUSH2 0xDEB SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2557 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xD6E JUMPI PUSH2 0xE0A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2557 JUMP JUMPDEST SWAP1 PUSH1 0x64 SWAP1 DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xD6E JUMPI PUSH2 0xE2C SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2557 JUMP JUMPDEST SWAP2 PUSH1 0xC4 CALLDATALOAD ISZERO ISZERO PUSH1 0xC4 CALLDATALOAD SUB PUSH2 0xD6E JUMPI PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP5 MLOAD PUSH2 0xE4F DUP2 DUP4 DUP6 DUP10 ADD PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND CALLER SUB PUSH2 0x1A9B JUMPI PUSH1 0xFF PUSH1 0x5 DUP4 ADD SLOAD AND ISZERO PUSH2 0x1A62 JUMPI PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0xA DUP4 ADD SLOAD PUSH3 0x15180 SWAP1 DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x17E6 JUMPI DUP2 ADD DUP1 SWAP2 GT PUSH2 0x17E6 JUMPI TIMESTAMP LT PUSH2 0x1A20 JUMPI PUSH1 0x3 DUP3 ADD SLOAD TIMESTAMP GT PUSH2 0x19ED JUMPI PUSH1 0x24 CALLDATALOAD ISZERO PUSH2 0x199A JUMPI PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0x24 CALLDATALOAD GT PUSH2 0x193E JUMPI PUSH1 0x19 DUP3 ADD SLOAD PUSH1 0xB DUP4 ADD SLOAD GT ISZERO PUSH2 0x18FC JUMPI PUSH2 0xEE1 PUSH1 0x4 DUP4 ADD PUSH2 0x260A JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH2 0xEF0 PUSH2 0x28DE JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 EQ PUSH1 0x0 EQ PUSH2 0x1681 JUMPI DUP4 MLOAD ISZERO PUSH2 0x1632 JUMPI PUSH1 0x84 DUP1 CALLDATALOAD ISZERO PUSH2 0x15DF JUMPI PUSH1 0xA4 CALLDATALOAD PUSH2 0x1598 JUMPI PUSH1 0xC4 CALLDATALOAD PUSH2 0x154C JUMPI PUSH1 0xE4 CALLDATALOAD PUSH2 0x1507 JUMPI PUSH2 0x104 CALLDATALOAD PUSH2 0x14BF JUMPI POP PUSH1 0x9 DUP3 ADD SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x144A JUMPI POP POP PUSH1 0x0 DUP1 PUSH1 0x8 DUP5 ADD SLOAD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1407 JUMPI JUMPDEST POP POP ISZERO PUSH2 0x13C5 JUMPI POP JUMPDEST PUSH1 0x2 SLOAD SWAP3 PUSH2 0xF66 DUP5 PUSH2 0x2A07 JUMP JUMPDEST PUSH1 0x2 SSTORE DUP4 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x5C0 JUMPI PUSH2 0xF92 DUP4 SLOAD PUSH2 0x25D0 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1393 JUMPI JUMPDEST POP DUP1 PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x132C JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1321 JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR DUP3 SSTORE JUMPDEST PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x2 DUP4 ADD SSTORE DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x5C0 JUMPI PUSH2 0xFFF PUSH1 0x3 DUP5 ADD SLOAD PUSH2 0x25D0 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x12EC JUMPI JUMPDEST POP DUP1 PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x127F JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1274 JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 DUP4 ADD SSTORE JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x5C0 JUMPI DUP2 SWAP1 PUSH2 0x1056 PUSH1 0x7 DUP6 ADD SLOAD PUSH2 0x25D0 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x123F JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x11CD JUMPI PUSH1 0x0 SWAP3 PUSH2 0x11C2 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x7 DUP3 ADD SSTORE JUMPDEST PUSH1 0x84 CALLDATALOAD PUSH1 0x8 DUP3 ADD SSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0x9 DUP3 ADD SSTORE PUSH2 0x10B9 PUSH1 0xC4 CALLDATALOAD PUSH1 0xA DUP4 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xE4 CALLDATALOAD PUSH1 0xB DUP3 ADD SSTORE PUSH2 0x104 CALLDATALOAD PUSH1 0xC DUP3 ADD SSTORE PUSH1 0x5 DUP2 ADD PUSH2 0xFFFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x0 PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0x4 TIMESTAMP SWAP2 ADD SSTORE PUSH1 0x19 PUSH2 0x10F2 DUP2 DUP4 ADD SLOAD PUSH2 0x2A07 JUMP JUMPDEST SWAP2 ADD SSTORE PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 MLOAD PUSH2 0x110A DUP2 DUP4 DUP6 DUP9 ADD PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x6 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL DUP4 LT ISZERO PUSH2 0x5C0 JUMPI DUP3 PUSH2 0x1137 SWAP2 PUSH1 0x1 PUSH2 0x117C SWAP6 ADD DUP2 SSTORE PUSH2 0x2830 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 DUP6 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 MLOAD PUSH2 0x1161 DUP2 DUP4 DUP6 DUP9 ADD PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x7 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH2 0x1175 DUP2 SLOAD PUSH2 0x2A07 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x2939 JUMP JUMPDEST SWAP1 PUSH32 0x638B9DF33B7F660E287D98CE3F73B14EA754B151E0BCD9DD181499B9FBC2D17B PUSH1 0x40 MLOAD PUSH1 0x24 CALLDATALOAD DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE DUP1 PUSH2 0x11BD CALLER SWAP7 PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x271C JUMP JUMPDEST SUB SWAP1 LOG4 STOP JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0x1076 JUMP JUMPDEST SWAP3 POP PUSH1 0x7 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x1224 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x120B JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x7 DUP3 ADD SSTORE PUSH2 0x108E JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0x11FB JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x11E0 JUMP JUMPDEST PUSH2 0x126E SWAP1 PUSH1 0x7 DUP7 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x88A JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x2922 JUMP JUMPDEST DUP9 PUSH2 0x105F JUMP JUMPDEST SWAP1 POP DUP8 ADD MLOAD DUP9 PUSH2 0x101F JUMP JUMPDEST SWAP2 POP PUSH1 0x3 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP3 JUMPDEST PUSH1 0x1F NOT DUP4 AND DUP5 LT PUSH2 0x12D4 JUMPI PUSH1 0x1 SWAP4 POP DUP3 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x12BB JUMPI JUMPDEST POP POP DUP2 SHL ADD PUSH1 0x3 DUP4 ADD SSTORE PUSH2 0x1036 JUMP JUMPDEST DUP10 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 PUSH2 0x12AC JUMP JUMPDEST DUP10 DUP2 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1291 JUMP JUMPDEST PUSH2 0x131B SWAP1 PUSH1 0x3 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x88A JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x2922 JUMP JUMPDEST DUP8 PUSH2 0x1008 JUMP JUMPDEST SWAP1 POP DUP6 ADD MLOAD DUP9 PUSH2 0xFB2 JUMP JUMPDEST SWAP2 POP DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP3 JUMPDEST PUSH1 0x1F NOT DUP4 AND DUP5 LT PUSH2 0x137B JUMPI PUSH1 0x1 SWAP4 POP DUP3 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1362 JUMPI JUMPDEST POP POP DUP2 SHL ADD DUP3 SSTORE PUSH2 0xFC6 JUMP JUMPDEST DUP8 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 PUSH2 0x1356 JUMP JUMPDEST DUP8 DUP2 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x133B JUMP JUMPDEST PUSH2 0x13BF SWAP1 DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x88A JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x2922 JUMP JUMPDEST DUP8 PUSH2 0xF9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726561746D656E74206E6F7420636F766572656420627920706F6C69637900 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x141D PUSH2 0x1417 DUP3 PUSH1 0x8 DUP9 ADD PUSH2 0x2830 JUMP JUMPDEST POP PUSH2 0x260A JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 DUP9 MLOAD PUSH1 0x20 DUP11 ADD KECCAK256 EQ PUSH2 0x143E JUMPI PUSH2 0x1439 SWAP1 PUSH2 0x2A07 JUMP JUMPDEST PUSH2 0xF48 JUMP JUMPDEST POP POP POP PUSH1 0x1 DUP7 DUP1 PUSH2 0xF50 JUMP JUMPDEST PUSH2 0x145A PUSH2 0x1417 DUP3 PUSH1 0x9 DUP8 ADD PUSH2 0x2830 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 DUP8 MLOAD PUSH1 0x20 DUP10 ADD KECCAK256 EQ PUSH2 0x147B JUMPI PUSH2 0x1476 SWAP1 PUSH2 0x2A07 JUMP JUMPDEST PUSH2 0xF35 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726561746D656E74206578636C7564656420627920706F6C69637900000000 PUSH1 0x44 DUP3 ADD MSTORE DUP4 SWAP1 REVERT JUMPDEST SWAP1 PUSH15 0x333634B3B43A10323AB930BA34B7B7 PUSH1 0x89 SHL PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ADD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH12 0x666C696768742064656C6179 PUSH1 0xA0 SHL PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ADD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH19 0x333634B3B43A1031B0B731B2B63630BA34B7B7 PUSH1 0x69 SHL PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ADD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH14 0x666C696768742064657461696C73 PUSH1 0x90 SHL PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ADD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH8 0x696F6E2064617465 PUSH1 0xC0 SHL PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP5 ADD MSTORE PUSH32 0x4865616C746820636C61696D206D75737420696E636C7564652061646D697373 PUSH1 0x44 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 SWAP1 PUSH2 0x1251 PUSH1 0xF2 SHL PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP5 ADD MSTORE PUSH32 0x4865616C746820636C61696D206D75737420696E636C75646520414142484120 PUSH1 0x44 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x168D PUSH1 0x4 DUP4 ADD PUSH2 0x260A JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x169C PUSH2 0x2900 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 EQ PUSH2 0x16AF JUMPI JUMPDEST POP PUSH2 0xF59 JUMP JUMPDEST DUP4 MLOAD PUSH2 0x18A7 JUMPI PUSH1 0x84 CALLDATALOAD PUSH2 0x184C JUMPI PUSH1 0xA4 CALLDATALOAD ISZERO PUSH2 0x17FC JUMPI PUSH2 0x16D6 PUSH1 0x16 DUP4 ADD SLOAD PUSH1 0xE4 CALLDATALOAD GT ISZERO PUSH2 0x2959 JUMP JUMPDEST PUSH1 0x18 DUP3 ADD SLOAD PUSH1 0x3C DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0x3C EQ SWAP1 ISZERO OR ISZERO PUSH2 0x17E6 JUMPI PUSH2 0x16FD SWAP1 PUSH2 0x104 CALLDATALOAD GT ISZERO PUSH2 0x29AF JUMP JUMPDEST DUP5 MLOAD PUSH32 0x43A6044C82F40F17C19F58406DF90BFF8D5298E48537704F37A8075C5F36D46F PUSH1 0x20 DUP8 ADD SWAP2 DUP3 KECCAK256 PUSH5 0x44454C4159 PUSH1 0xD8 SHL PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x173E DUP2 PUSH2 0x251B JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE ADD MSTORE EQ SWAP1 DUP2 ISZERO PUSH2 0x1794 JUMPI JUMPDEST POP PUSH2 0x16A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642074726176656C20636C61696D207479706500000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH32 0xF36BACEB8C936B84649EC32484E0932B39D39183361A521F946479FE7366002 SWAP2 POP DUP7 MLOAD SWAP1 KECCAK256 PUSH12 0x21A0A721A2A62620AA24A7A7 PUSH1 0xA1 SHL PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x17D9 DUP2 PUSH2 0x251B JUMP JUMPDEST PUSH1 0xC DUP2 MSTORE ADD MSTORE EQ DUP7 PUSH2 0x174D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x84 SWAP1 PUSH3 0x81251 PUSH1 0xEA SHL PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP5 ADD MSTORE PUSH32 0x54726176656C20636C61696D206D75737420696E636C75646520666C69676874 PUSH1 0x44 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 SWAP1 PUSH14 0x61646D697373696F6E2064617465 PUSH1 0x90 SHL PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP5 ADD MSTORE PUSH32 0x54726176656C20636C61696D2073686F756C64206E6F7420696E636C75646520 PUSH1 0x44 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 SWAP1 PUSH8 0x1050509210481251 PUSH1 0xC2 SHL PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP5 ADD MSTORE PUSH32 0x54726176656C20636C61696D2073686F756C64206E6F7420696E636C75646520 PUSH1 0x44 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178696D756D20636C61696D73207065722079656172207265616368656400 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 SWAP1 PUSH15 0x65726167652070657220636C61696D PUSH1 0x88 SHL PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP5 ADD MSTORE PUSH32 0x436C61696D20616D6F756E742065786365656473206D6178696D756D20636F76 PUSH1 0x44 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 SWAP1 PUSH6 0x6E207A65726F PUSH1 0xD0 SHL PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP5 ADD MSTORE PUSH32 0x436C61696D20616D6F756E74206D757374206265206772656174657220746861 PUSH1 0x44 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x141BDB1A58DE48195E1C1A5C9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57616974696E6720706572696F64206E6F74206F766572000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x506F6C696379206973206E6F7420616374697665 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 SWAP1 PUSH3 0x696D73 PUSH1 0xE8 SHL PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP5 ADD MSTORE PUSH32 0x4F6E6C7920706F6C696379686F6C6465722063616E207375626D697420636C61 PUSH1 0x44 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0xD6E JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xD6E JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH2 0x1B1C PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD ISZERO ISZERO PUSH2 0x2A16 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD DUP2 DUP2 PUSH2 0x1B39 DUP2 DUP7 PUSH2 0x2A59 JUMP JUMPDEST PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH2 0x1B4D PUSH1 0x4 DUP3 ADD PUSH2 0x260A JUMP JUMPDEST DUP3 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x1B5B PUSH2 0x28DE JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP5 ADD KECCAK256 SUB PUSH2 0x1C2F JUMPI POP PUSH2 0x1B74 PUSH1 0x7 DUP4 ADD SLOAD PUSH2 0x25D0 JUMP JUMPDEST ISZERO PUSH2 0x1BF8 JUMPI PUSH1 0x8 DUP3 ADD SLOAD ISZERO PUSH2 0x1BBB JUMPI POP PUSH1 0x5 SWAP1 JUMPDEST ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x393EFDA0B92BC01071B66A816D6BCDDDE867B8C91DA505A0F309D9133A53650A PUSH1 0x0 DUP1 LOG2 STOP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x4D697373696E672061646D697373696F6E2064617465 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x135A5CDCDA5B99C81050509210481251 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x9 DUP4 ADD SLOAD ISZERO PUSH2 0x1CE7 JUMPI PUSH2 0x1C4D PUSH1 0xB DUP5 ADD SLOAD PUSH1 0x16 DUP4 ADD SLOAD LT ISZERO PUSH2 0x2959 JUMP JUMPDEST PUSH1 0xC DUP4 ADD SLOAD PUSH1 0x18 DUP3 ADD SLOAD PUSH1 0x3C DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0x3C EQ SWAP1 ISZERO OR ISZERO PUSH2 0x17E6 JUMPI PUSH2 0x1C75 SWAP2 GT ISZERO PUSH2 0x29AF JUMP JUMPDEST PUSH1 0xFF PUSH1 0x17 DUP2 PUSH1 0xA DUP7 ADD SLOAD AND SWAP3 ADD SLOAD AND ISZERO ISZERO SWAP1 ISZERO ISZERO SUB PUSH2 0x1C97 JUMPI POP PUSH1 0x5 SWAP1 PUSH2 0x1B88 JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C696768742063616E63656C6C6174696F6E20737461747573206D69736D61 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0xE8C6D PUSH1 0xEB SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x135A5CDCDA5B99C8199B1A59DA1D081251 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xD6E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD6E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP2 DUP3 SWAP1 SUB PUSH2 0xD6E JUMPI PUSH1 0x0 SLOAD AND CALLER SUB PUSH2 0x1D6E JUMPI PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206F776E65722063616E2063616C6C20746869732066756E6374696F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xD6E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD6E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1DE7 DUP2 PUSH2 0x260A JUMP JUMPDEST PUSH2 0x1E60 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP5 ADD SLOAD AND SWAP2 PUSH1 0x2 DUP5 ADD SLOAD SWAP4 PUSH2 0x1E0A PUSH1 0x3 DUP3 ADD PUSH2 0x260A JUMP JUMPDEST SWAP2 PUSH1 0x4 DUP3 ADD SLOAD SWAP1 PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0x6 DUP5 ADD SLOAD PUSH2 0x1E27 PUSH1 0x7 DUP7 ADD PUSH2 0x260A JUMP JUMPDEST SWAP1 PUSH1 0x8 DUP7 ADD SLOAD SWAP3 PUSH1 0x9 DUP8 ADD SLOAD SWAP5 PUSH1 0xFF PUSH1 0xA DUP10 ADD SLOAD AND SWAP7 PUSH1 0xC PUSH1 0xB DUP11 ADD SLOAD SWAP10 ADD SLOAD SWAP10 PUSH1 0x40 MLOAD SWAP14 DUP15 SWAP14 DUP15 SWAP5 PUSH1 0xFF DUP1 DUP9 PUSH1 0x8 SHR AND SWAP8 AND SWAP6 PUSH2 0x279D JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xD6E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD6E JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD6E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD6E JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xD6E JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xD6E JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x5 DUP4 ADD SWAP2 DUP3 SLOAD SWAP1 PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x1FC0 JUMPI PUSH1 0xFF DUP3 PUSH1 0x8 SHR AND PUSH2 0x1F87 JUMPI PUSH1 0x40 MLOAD DUP2 DUP2 PUSH2 0x1EFA DUP2 DUP10 PUSH2 0x2A59 JUMP JUMPDEST PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP4 PUSH1 0x7 PUSH1 0x2 DUP8 ADD SLOAD SWAP6 ADD SLOAD DUP1 DUP7 MUL SWAP1 DUP7 DUP3 DIV EQ DUP7 ISZERO OR ISZERO PUSH2 0x17E6 JUMPI PUSH1 0x64 SWAP1 DIV DUP6 SUB SWAP5 DUP6 GT PUSH2 0x17E6 JUMPI PUSH2 0x100 PUSH32 0x6B7553A4BD186B51EDCBEEC8F3E76A9437A907BE9AD2ABA7E318ECCC2816EA9A SWAP4 PUSH2 0xFF00 NOT AND OR SWAP1 SSTORE DUP4 PUSH1 0x6 DUP7 ADD SSTORE PUSH2 0x1F7A PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP8 ADD SLOAD AND SWAP6 PUSH1 0x40 MLOAD SWAP2 DUP3 DUP1 SWAP3 PUSH2 0x2A59 JUMP JUMPDEST SUB SWAP1 KECCAK256 SWAP4 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG4 STOP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x10DB185A5B48185B1C9958591E481C185A59 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x10DB185A5B481B9BDD081D995C9A599A5959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0xD6E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD6E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xD6E JUMPI PUSH2 0x2029 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2557 JUMP JUMPDEST PUSH2 0x2045 PUSH1 0x20 PUSH1 0x24 CALLDATALOAD SWAP3 DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD PUSH1 0x6 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xD6E JUMPI PUSH1 0x20 SWAP2 PUSH2 0x2064 SWAP2 PUSH2 0x2830 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD6E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD6E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xD6E JUMPI PUSH1 0x20 PUSH2 0x20A7 PUSH2 0x20BA SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2557 JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x25AD JUMP JUMPDEST PUSH1 0x4 SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x2133 JUMPI PUSH1 0x1 DUP3 ADD SLOAD SWAP2 PUSH2 0x2127 PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH2 0x20FE PUSH1 0x4 PUSH1 0xFF PUSH1 0x5 DUP8 ADD SLOAD AND SWAP6 ADD PUSH2 0x260A JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0xC0 PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD SWAP1 PUSH2 0x271C JUMP JUMPDEST SWAP1 ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x141BDB1A58DE48191BD95CC81B9BDD08195E1A5CDD PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xD6E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD6E JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x21A0 PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD ISZERO ISZERO PUSH2 0x2A16 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP3 ADD SLOAD AND PUSH2 0x1E60 PUSH1 0x2 DUP4 ADD SLOAD SWAP3 PUSH1 0x4 DUP2 ADD SLOAD SWAP1 PUSH1 0x5 DUP2 ADD SLOAD SWAP1 PUSH1 0x6 DUP2 ADD SLOAD SWAP1 PUSH1 0x8 DUP2 ADD SLOAD PUSH1 0x9 DUP3 ADD SLOAD SWAP2 PUSH1 0xFF PUSH1 0xA DUP3 ADD SLOAD AND SWAP4 PUSH1 0xB DUP3 ADD SLOAD SWAP6 PUSH1 0xC DUP4 ADD SLOAD SWAP8 PUSH2 0x21FE DUP5 PUSH2 0x260A JUMP JUMPDEST SWAP1 PUSH2 0x2217 PUSH1 0x7 PUSH2 0x2210 PUSH1 0x3 DUP9 ADD PUSH2 0x260A JUMP JUMPDEST SWAP7 ADD PUSH2 0x260A JUMP JUMPDEST SWAP5 PUSH1 0x40 MLOAD SWAP14 DUP15 SWAP14 DUP15 SWAP5 PUSH1 0xFF DUP1 DUP9 PUSH1 0x8 SHR AND SWAP8 AND SWAP6 PUSH2 0x279D JUMP JUMPDEST CALLVALUE PUSH2 0xD6E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD6E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0xD6E JUMPI PUSH1 0x20 PUSH2 0x20A7 PUSH2 0x2266 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2557 JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND SWAP1 PUSH1 0x1 DUP4 ADD SLOAD SWAP3 PUSH1 0x2 DUP2 ADD SLOAD SWAP1 PUSH1 0x3 DUP2 ADD SLOAD SWAP1 PUSH2 0x229A PUSH1 0x4 DUP3 ADD PUSH2 0x260A JUMP JUMPDEST PUSH1 0xFF PUSH1 0x5 DUP4 ADD SLOAD AND SWAP3 PUSH1 0x40 MLOAD SWAP6 PUSH2 0x260 DUP8 ADD SWAP1 DUP8 DUP3 LT SWAP1 DUP3 GT OR PUSH2 0x5C0 JUMPI PUSH2 0x23CD SWAP4 PUSH1 0x19 SWAP2 PUSH1 0x40 MSTORE PUSH1 0x6 DUP2 ADD SLOAD DUP9 MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0x20 DUP10 ADD MSTORE PUSH2 0x22DF PUSH1 0x8 DUP3 ADD PUSH2 0x26C7 JUMP JUMPDEST PUSH1 0x40 DUP10 ADD MSTORE PUSH2 0x22F0 PUSH1 0x9 DUP3 ADD PUSH2 0x26C7 JUMP JUMPDEST PUSH1 0x60 DUP10 ADD MSTORE PUSH1 0xA DUP2 ADD SLOAD PUSH1 0x80 DUP10 ADD MSTORE PUSH1 0xB DUP2 ADD SLOAD PUSH1 0xA0 DUP10 ADD MSTORE PUSH1 0xFF PUSH1 0xC DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0xC0 DUP10 ADD MSTORE PUSH1 0xD DUP2 ADD SLOAD PUSH1 0xE0 DUP10 ADD MSTORE PUSH1 0xE DUP2 ADD SLOAD PUSH2 0x100 DUP10 ADD MSTORE PUSH1 0xF DUP2 ADD SLOAD PUSH2 0x120 DUP10 ADD MSTORE PUSH1 0x10 DUP2 ADD SLOAD PUSH2 0x140 DUP10 ADD MSTORE PUSH1 0x11 DUP2 ADD SLOAD PUSH2 0x160 DUP10 ADD MSTORE PUSH1 0x12 DUP2 ADD SLOAD PUSH2 0x180 DUP10 ADD MSTORE PUSH1 0x13 DUP2 ADD SLOAD PUSH2 0x1A0 DUP10 ADD MSTORE PUSH1 0x14 DUP2 ADD SLOAD PUSH2 0x1C0 DUP10 ADD MSTORE PUSH1 0x15 DUP2 ADD SLOAD PUSH2 0x1E0 DUP10 ADD MSTORE PUSH1 0x16 DUP2 ADD SLOAD PUSH2 0x200 DUP10 ADD MSTORE PUSH1 0xFF PUSH1 0x17 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH2 0x220 DUP10 ADD MSTORE PUSH1 0x18 DUP2 ADD SLOAD PUSH2 0x240 DUP10 ADD MSTORE ADD SLOAD SWAP5 PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP9 DUP10 MSTORE PUSH1 0x20 DUP10 ADD MSTORE PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x100 PUSH1 0x80 DUP8 ADD MSTORE PUSH2 0x100 DUP7 ADD SWAP1 PUSH2 0x271C JUMP JUMPDEST SWAP1 ISZERO ISZERO PUSH1 0xA0 DUP6 ADD MSTORE DUP4 DUP2 SUB PUSH1 0xC0 DUP6 ADD MSTORE DUP3 MLOAD DUP2 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x240 DUP1 PUSH2 0x241F PUSH2 0x240D PUSH1 0x40 DUP8 ADD MLOAD PUSH2 0x260 PUSH1 0x40 DUP8 ADD MSTORE PUSH2 0x260 DUP7 ADD SWAP1 PUSH2 0x2741 JUMP JUMPDEST PUSH1 0x60 DUP8 ADD MLOAD DUP6 DUP3 SUB PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x2741 JUMP JUMPDEST SWAP5 PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH2 0x120 DUP6 ADD MSTORE PUSH2 0x140 DUP2 ADD MLOAD PUSH2 0x140 DUP6 ADD MSTORE PUSH2 0x160 DUP2 ADD MLOAD PUSH2 0x160 DUP6 ADD MSTORE PUSH2 0x180 DUP2 ADD MLOAD PUSH2 0x180 DUP6 ADD MSTORE PUSH2 0x1A0 DUP2 ADD MLOAD PUSH2 0x1A0 DUP6 ADD MSTORE PUSH2 0x1C0 DUP2 ADD MLOAD PUSH2 0x1C0 DUP6 ADD MSTORE PUSH2 0x1E0 DUP2 ADD MLOAD PUSH2 0x1E0 DUP6 ADD MSTORE PUSH2 0x200 DUP2 ADD MLOAD PUSH2 0x200 DUP6 ADD MSTORE PUSH2 0x220 DUP2 ADD MLOAD ISZERO ISZERO PUSH2 0x220 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE PUSH1 0xE0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xD6E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD6E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xD6E JUMPI PUSH2 0x2508 PUSH1 0x20 PUSH2 0x20A7 DUP2 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2557 JUMP JUMPDEST DUP2 ADD PUSH1 0x7 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x5C0 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x5C0 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0xD6E JUMPI DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x5C0 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x258B PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x2536 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0xD6E JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x25C0 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x25B0 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x2600 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x25EA JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x25DF JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x261E DUP5 PUSH2 0x25D0 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x268D JUMPI POP PUSH1 0x1 EQ PUSH2 0x264A JUMPI JUMPDEST POP POP PUSH2 0x2648 SWAP3 POP SUB DUP4 PUSH2 0x2536 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x2675 JUMPI POP POP PUSH2 0x2648 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x263A JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x265D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2648 SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x263A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x5C0 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 SLOAD PUSH2 0x26D3 DUP2 PUSH2 0x26B0 JUMP JUMPDEST SWAP3 PUSH2 0x26E1 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2536 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 DUP2 DUP7 ADD JUMPDEST DUP5 DUP5 LT PUSH2 0x2700 JUMPI POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP4 DUP2 SWAP3 PUSH2 0x270E DUP6 PUSH2 0x260A JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP4 ADD SWAP3 SWAP1 PUSH2 0x26F2 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x2735 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x25AD JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 DUP1 DUP3 MLOAD SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 DUP1 SWAP2 ADD SWAP3 DUP2 DUP1 DUP5 PUSH1 0x5 SHL DUP4 ADD ADD SWAP6 ADD SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x276F JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 DUP5 DUP1 PUSH2 0x278D PUSH1 0x1 SWAP4 PUSH1 0x1F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP11 MLOAD PUSH2 0x271C JUMP JUMPDEST SWAP9 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP5 SWAP4 SWAP3 SWAP1 PUSH2 0x275F JUMP JUMPDEST SWAP11 SWAP8 SWAP4 SWAP2 SWAP10 SWAP15 SWAP14 SWAP13 SWAP10 PUSH2 0x1A0 SWAP13 SWAP10 SWAP6 SWAP7 SWAP3 PUSH2 0x2811 SWAP9 SWAP5 PUSH1 0x40 DUP15 PUSH2 0x27CB PUSH2 0x27EA SWAP7 PUSH2 0x1C0 DUP1 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x271C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE DUP13 DUP3 SUB PUSH1 0x60 DUP15 ADD MSTORE PUSH2 0x271C JUMP JUMPDEST SWAP5 PUSH1 0x80 DUP12 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP11 ADD MSTORE ISZERO ISZERO PUSH1 0xC0 DUP10 ADD MSTORE PUSH1 0xE0 DUP9 ADD MSTORE DUP7 DUP3 SUB PUSH2 0x100 DUP9 ADD MSTORE PUSH2 0x271C JUMP JUMPDEST SWAP8 PUSH2 0x120 DUP6 ADD MSTORE PUSH2 0x140 DUP5 ADD MSTORE ISZERO ISZERO PUSH2 0x160 DUP4 ADD MSTORE PUSH2 0x180 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x2848 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0xD6E JUMPI DUP2 CALLDATALOAD SWAP1 PUSH2 0x2876 DUP3 PUSH2 0x26B0 JUMP JUMPDEST SWAP3 PUSH2 0x2884 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2536 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP1 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 DUP1 DUP5 GT PUSH2 0xD6E JUMPI DUP5 DUP4 ADD SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x28B2 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xD6E JUMPI DUP7 SWAP2 PUSH2 0x28D3 DUP5 DUP5 DUP1 SWAP5 DUP10 ADD ADD PUSH2 0x2557 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x28A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x28EB DUP3 PUSH2 0x251B JUMP JUMPDEST PUSH1 0x6 DUP3 MSTORE PUSH6 0x908A8298A89 PUSH1 0xD3 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x290D DUP3 PUSH2 0x251B JUMP JUMPDEST PUSH1 0x6 DUP3 MSTORE PUSH6 0x151490559153 PUSH1 0xD2 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x292D JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2922 JUMP JUMPDEST PUSH2 0x2951 SWAP1 PUSH1 0x20 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x25AD JUMP JUMPDEST DUP2 ADD SUB SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2960 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C696768742064656C6179206578636565647320706F6C696379206C696D69 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x29B6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x466C69676874206475726174696F6E206578636565647320706F6C696379206C PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x1A5B5A5D PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x17E6 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2A1D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x10DB185A5B48191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 SWAP2 DUP2 SLOAD PUSH2 0x2A68 DUP2 PUSH2 0x25D0 JUMP JUMPDEST SWAP3 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x2AC1 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2A85 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP6 DUP4 LT PUSH2 0x2AB0 JUMPI POP POP POP POP ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x2A7F JUMP JUMPDEST DUP1 SLOAD DUP6 DUP5 ADD MSTORE SWAP2 DUP4 ADD SWAP2 DUP2 ADD PUSH2 0x2A9A JUMP JUMPDEST PUSH1 0xFF NOT AND DUP5 MSTORE POP POP POP DUP2 ISZERO ISZERO SWAP1 SWAP2 MUL ADD SWAP2 POP CODESIZE DUP1 DUP1 DUP1 PUSH2 0x2A7F JUMP INVALID BASEFEE PUSH6 0x616C74682063 PUSH13 0x61696D2073686F756C64206E6F PUSH21 0x20696E636C75646520A264697066735822122094D0 LOG3 DUP10 0xE 0xBA PUSH27 0xF63F1F670FA52BA2B60B0E0A8B11FA196257036E94072C24466473 PUSH16 0x6C634300081300330000000000000000 ","sourceMap":"60:15316:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;60:15316:0;;;;;;-1:-1:-1;;;;;60:15316:0;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;60:15316:0;;;;;;;;;-1:-1:-1;;;;;60:15316:0;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;60:15316:0;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;60:15316:0;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2769:10;:21;60:15316;;;;;4277:27;60:15316;;;;4356:19;60:15316;;;;4440:14;60:15316;;;;;;4496:21;60:15316;;;;;;;4574:39;60:15316;;;;;4688:23;60:15316;;4787:2;60:15316;;4769:20;60:15316;;;;4849:21;;:48;;;60:15316;;;;4992:3;60:15316;;4965:30;60:15316;;5091:2;60:15316;;5061:32;60:15316;;5193:2;60:15316;;5162:33;60:15316;;;;;5265:24;60:15316;;5365:2;60:15316;;5345:22;60:15316;;;;;;;5474:29;;;60:15316;;:::i;:::-;;;;;;5507:26;5474:59;:135;;;;;60:15316;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;5773:21;;60:15316;;;5823:16;;;60:15316;;;;5863:14;;60:15316;;;-1:-1:-1;;;;;60:15316:0;;;;;;5899:17;;60:15316;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5899:17;;60:15316;;;;5941:12;;;60:15316;;;6007:28;;;60:15316;;;;-1:-1:-1;;;60:15316:0;;;;6065:30;;;60:15316;6065:30;;;;60:15316;;;;;;;;;;6065:30;;;;60:15316;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;6127:31;;;60:15316;6127:31;;;;60:15316;;;;;;;;;;6127:31;;;;60:15316;;;;;;;;;;;;;;;;7242:184;60:15316;7242:184;60:15316;;7202:18;60:15316;;;6191:26;;;60:15316;;;6245:29;;;60:15316;6305:73;60:15316;;6305:41;;;60:15316;;;;;;;;;;;;;;;6305:73;60:15316;;6389:35;;;60:15316;;;6461:24;;;60:15316;;;6511:26;;;60:15316;;;6565:32;;;60:15316;;;6631:31;;;60:15316;;;6695:33;;;60:15316;;;6763:32;;;60:15316;;;6829:38;;;60:15316;;;6907:39;;;60:15316;;;6987:29;;;60:15316;7047:53;60:15316;;7047:31;;;60:15316;;;;;;;;;;;;;;;7047:53;60:15316;;7111:28;;;60:15316;6245:29;7169:15;;60:15316;;-1:-1:-1;;60:15316:0;;;;;7202:18;60:15316;7242:184;:::i;:::-;60:15316;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7242:184;;;60:15316;;;;;;;-1:-1:-1;;;;;60:15316:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;60:15316:0;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;60:15316:0;;;;;;;;;;;;;;;-1:-1:-1;;60:15316:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;60:15316:0;;;;;;;;;;;;;;;;;6127:31;;;60:15316;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;60:15316:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;60:15316:0;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;60:15316:0;;;;;;;;;;;;;;;-1:-1:-1;;60:15316:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;6065:30;;;60:15316;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;5899:17;;60:15316;5899:17;;60:15316;;;;;;;;;-1:-1:-1;;60:15316:0;;;;;;;;;;;;;;;;;;;;;;;;;5899:17;;60:15316;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5899:17;60:15316;5899:17;;60:15316;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;60:15316:0;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;5474:135;60:15316;;;;5550:29;;60:15316;;:::i;:::-;;;;;;5583:26;5550:59;5474:135;;;60:15316;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;4849:48;60:15316;4895:2;60:15316;;4874:23;;4849:48;;60:15316;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;;;;;;;;-1:-1:-1;;60:15316:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;60:15316:0;;;;;;;;-1:-1:-1;;;;;60:15316:0;;;;;;;;;;;;;;-1:-1:-1;;60:15316:0;;;;;;-1:-1:-1;;;;;60:15316:0;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;60:15316:0;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;60:15316:0;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7903:10;7880:33;60:15316;;;7972:15;;;60:15316;;;;;8050:16;;;60:15316;8070:26;;;60:15316;8099:6;60:15316;;;;;;;;;;;;;;;;;;;;;;8031:15;:75;60:15316;;;8172:14;;60:15316;8031:15;8153:33;60:15316;;;;8224:11;60:15316;;8070:12;;;60:15316;;;8297:43;60:15316;;8411:18;;;60:15316;8432:29;;;60:15316;-1:-1:-1;60:15316:0;;;;;8587:17;;60:15316;:::i;:::-;;;;;;8571:35;60:15316;;:::i;:::-;;;;;;8610:26;8571:65;8567:2335;8610:26;;;60:15316;;8661:26;60:15316;;;;;8749:25;60:15316;;;;;;;;;;;;;;;;;;-1:-1:-1;9304:31:0;;;60:15316;;9300:42;;;;;;9625:31;;60:15316;;9695:30;;;60:15316;9671:291;9691:41;;;;;;9671:291;60:15316;;;;;8567:2335;;8050:16;60:15316;10932:13;;;;:::i;:::-;8050:16;60:15316;;;;7972:15;60:15316;;;;;;;;-1:-1:-1;;;;;60:15316:0;;;;;;;;:::i;:::-;;;;;;8567:2335;60:15316;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11049:18;;60:15316;;-1:-1:-1;;;;;;60:15316:0;7903:10;60:15316;;;;;8050:16;11091:12;;60:15316;;;-1:-1:-1;;;;;60:15316:0;;;;;;11124:19;;60:15316;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11124:19;;60:15316;;;;;-1:-1:-1;;;;;60:15316:0;;;;11171:13;;60:15316;11171:13;;;60:15316;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11171:13;;;60:15316;;;;11206:26;;;60:15316;;;11267:14;;;60:15316;11304:58;60:15316;;8070:26;11304:30;;60:15316;;;;;;;;;;;;;;;11304:58;60:15316;;8432:29;11373:24;;60:15316;;;11430:27;;;60:15316;7972:15;11493:16;;60:15316;;;;;;;;8070:12;11559:16;;60:15316;;8031:15;11590;;60:15316;8411:18;11636:20;8411:18;;;60:15316;11636:20;:::i;:::-;8411:18;;60:15316;;;;;;;;;;;;;;:::i;:::-;;;8070:12;60:15316;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;11772:151;60:15316;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;11171:13;60:15316;;;;;;11721:35;60:15316;;11721:35;:::i;:::-;60:15316;;11772:151;:::i;:::-;60:15316;11772:151;60:15316;;;;;;;;;;;7903:10;60:15316;7903:10;60:15316;;;;;;:::i;:::-;11772:151;;;60:15316;;;;;-1:-1:-1;60:15316:0;;;;;11171:13;;;;;60:15316;;;;;;;;;-1:-1:-1;;60:15316:0;;;;;;;;;;;;;;;;;;;;;;;;11171:13;;;60:15316;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11171:13;;;;60:15316;;;;;;;;7972:15;60:15316;;;;;;;;;;;7972:15;60:15316;;;;:::i;:::-;;;;;;;;;;;;;;11124:19;;60:15316;11124:19;;60:15316;;;;;;;;-1:-1:-1;;60:15316:0;;;;;;;;;;;;;;;;;;;;;;;;11124:19;;60:15316;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11124:19;60:15316;11124:19;;60:15316;;;;;;;;7972:15;60:15316;;;;;;;;;;;7972:15;60:15316;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;60:15316:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7972:15;60:15316;;;;;;;;;;;7972:15;60:15316;;;;:::i;:::-;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;;;;;;;;;9734:3;60:15316;9778:33;9695:30;;;;9778:33;:::i;:::-;60:15316;;:::i;:::-;;;;;;9762:51;60:15316;;;;;9817:32;9762:87;9758:189;;9734:3;;;:::i;:::-;9676:13;;9758:189;9874:25;;;60:15316;9922:5;;;;9344:3;60:15316;9388:34;9304:31;;;;9388:34;:::i;60:15316::-;;;;;;9372:52;60:15316;;;;;9428:32;9372:88;9368:175;;9344:3;;;:::i;:::-;9285:13;;9368:175;60:15316;;-1:-1:-1;;;9485:38:0;;60:15316;;9485:38;;60:15316;;;;;;;;;;;;;9485:38;60:15316;;-1:-1:-1;;;60:15316:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;60:15316:0;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;60:15316:0;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;60:15316:0;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;60:15316:0;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;;;;;;;;;;;;;;;;;;8567:2335;60:15316;;8587:17;;60:15316;:::i;:::-;;;;;;10062:35;60:15316;;:::i;:::-;;;;;;10101:26;10062:65;10058:844;;8567:2335;;;;10058:844;60:15316;;;;;;;;;;10347:13;60:15316;;10415:98;10446:29;;;60:15316;;;10423:52;;10415:98;:::i;:::-;10563:28;;;60:15316;10594:2;60:15316;;;;;;10594:2;60:15316;;;;;;;10528:110;60:15316;;;10536:61;;10528:110;:::i;:::-;60:15316;;10715:25;60:15316;;;10679:32;;;-1:-1:-1;;;60:15316:0;;;;;;:::i;:::-;7972:15;60:15316;;;;10679:61;:150;;;;;10058:844;60:15316;10058:844;60:15316;;;-1:-1:-1;;;60:15316:0;;;;;;;8411:18;60:15316;;;;;;;;;;10679:150;10797:32;60:15316;;;;10761:32;;-1:-1:-1;;;60:15316:0;;;;;;:::i;:::-;;;;;;10761:68;10679:150;;;60:15316;;;;;;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3090:6;60:15316;;3082:64;60:15316;;;;3090:26;60:15316;3090:31;;3082:64;:::i;:::-;60:15316;;;3090:6;60:15316;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;12217:17;;60:15316;:::i;:::-;;;;;;12201:35;60:15316;;:::i;:::-;;;;;;12240:26;12201:65;12240:26;;12297:13;60:15316;12297:13;;;60:15316;;:::i;:::-;12291:31;60:15316;;12366:26;;;60:15316;12366:30;60:15316;;12197:693;3090:6;12197:693;;12902:16;60:15316;;-1:-1:-1;;60:15316:0;;;;;12941:23;-1:-1:-1;;12941:23:0;60:15316;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;12197:693;12464:14;;;60:15316;12464:18;60:15316;;12519:103;12527:24;;;60:15316;12555:29;;;60:15316;-1:-1:-1;12527:57:0;12519:103;:::i;:::-;12645:27;;;60:15316;12676:28;;;60:15316;12707:2;60:15316;;;;;;12707:2;60:15316;;;;;;;12637:113;12645:64;;;12637:113;:::i;:::-;60:15316;12807:31;12773:30;;;;60:15316;;12807:31;;60:15316;;;;;;;12773:65;60:15316;;12197:693;3090:6;12197:693;;;60:15316;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;;;;-1:-1:-1;;60:15316:0;;;;;;-1:-1:-1;;;;;60:15316:0;;;;;;;;;;;;2642:10;:19;60:15316;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;;;;-1:-1:-1;;60:15316:0;;;;;;;;1839:39;60:15316;;;;;1839:39;;;:::i;:::-;60:15316;;;;;;;1839:39;;60:15316;;1839:39;;;;60:15316;1839:39;;60:15316;1839:39;;;:::i;:::-;;60:15316;1839:39;;60:15316;1839:39;;;;60:15316;1839:39;;;60:15316;1839:39;;;;;:::i;:::-;;60:15316;1839:39;;60:15316;1839:39;;;;60:15316;1839:39;60:15316;1839:39;;;60:15316;;1839:39;;;;;60:15316;1839:39;;60:15316;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;60:15316:0;;;;;148:26;60:15316;;;;;;;;;;;;;-1:-1:-1;;60:15316:0;;;;;;;;-1:-1:-1;;;;;60:15316:0;;;;;;;;;;;;;;;;;;;;;;;;;;;13062:6;60:15316;;;;;13097:16;13062:6;13097:16;;60:15316;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;13292:12;13307:28;13292:12;;;60:15316;13307:28;;60:15316;;;;;;;;;;;;;;;13339:3;60:15316;;;;;;;;;;13496:142;60:15316;;;;;;;13446:16;13307:12;13446:16;;60:15316;;;;;;;;13581:18;;60:15316;;;;;;;;;;:::i;:::-;;;;;;;;;;13496:142;60:15316;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;;-1:-1:-1;;60:15316:0;;;;;;-1:-1:-1;;;;;60:15316:0;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1885:48;60:15316;;;;;;;;1885:48;;;;;60:15316;1885:48;;;;:::i;:::-;60:15316;;;;;;;;;;;;;;;;;-1:-1:-1;;60:15316:0;;;;;;-1:-1:-1;;;;;60:15316:0;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;60:15316:0;13984:33;;60:15316;;;14110:21;;60:15316;14146:16;60:15316;14146:16;;;60:15316;;14177:14;;60:15316;;;;14238:15;;;60:15316;;14206:17;;60:15316;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;;;;-1:-1:-1;;60:15316:0;;;;;;;;;3090:6;60:15316;;3082:64;60:15316;;;;3090:26;60:15316;3090:31;;3082:64;:::i;:::-;60:15316;;3090:6;60:15316;;;;;;;;;;;14932:18;;60:15316;;;14965:12;;;60:15316;15026:15;60:15316;15026:15;;60:15316;15056:16;3090:6;15056:16;;60:15316;15114:16;;;;60:15316;15173:26;60:15316;15173:26;;60:15316;15214:14;;;60:15316;15243:30;60:15316;15243:30;;;60:15316;;15288:24;;;;60:15316;15327:27;;;;60:15316;;;;;:::i;:::-;14992:19;60:15316;15145:13;60:15316;;14992:19;;60:15316;:::i;:::-;15145:13;;60:15316;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;60:15316:0;;;;-1:-1:-1;;;;;60:15316:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1791:41;60:15316;1791:41;;60:15316;1791:41;;;;60:15316;1791:41;60:15316;1791:41;;60:15316;1791:41;;60:15316;1791:41;;;:::i;:::-;60:15316;1791:41;;;60:15316;;;;;;;;;;;;;;;;;;;;;1791:41;60:15316;;;1791:41;;;60:15316;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1791:41;60:15316;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;60:15316:0;;;;;;-1:-1:-1;;;;;60:15316:0;;;;;;;;;;;;;;:::i;:::-;;;1940:52;60:15316;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;60:15316:0;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;60:15316:0;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;60:15316:0;;;;;;;;;;;-1:-1:-1;;60:15316:0;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;60:15316:0;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;60:15316:0;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;60:15316:0;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;-1:-1:-1;60:15316:0;;;;-1:-1:-1;60:15316:0;;-1:-1:-1;60:15316:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;60:15316:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;60:15316:0;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;60:15316:0;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;60:15316:0;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;60:15316:0;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;60:15316:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;60:15316:0;;-1:-1:-1;60:15316:0;;;-1:-1:-1;60:15316:0;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;60:15316:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;60:15316:0;;;;:::o;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;;60:15316:0;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;-1:-1:-1;;60:15316:0;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;;;-1:-1:-1;;;60:15316:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;60:15316:0;;;;-1:-1:-1;60:15316:0;;-1:-1:-1;60:15316:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;60:15316:0;;;-1:-1:-1;;;60:15316:0;;;;;;;;-1:-1:-1;60:15316:0;;;;;"},"methodIdentifiers":{"claims(uint256)":"a888c2cd","claimsCountPerYear(string)":"33e12bfb","createPolicy(string,address,uint256,uint256,uint256,string,uint256,uint256,string[],string[],uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool,uint256)":"fb20dec8","getClaim(uint256)":"5aef2447","getPolicy(string)":"60dd5f90","insurer()":"dbc837c5","nextClaimId()":"a0021cf1","nextRecordId()":"dbde207d","owner()":"8da5cb5b","policies(string)":"4a7ba3e5","policyClaims(string,uint256)":"6f5d13a0","processClaim(uint256)":"7257dfc9","setInsurer(address)":"a8e74108","submitClaim(string,uint256,string,string,uint256,uint256,bool,uint256,uint256)":"c60685d9","verifyClaim(uint256)":"c0d7e2b6"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"policyNumber\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paidAmount\",\"type\":\"uint256\"}],\"name\":\"ClaimProcessed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"policyNumber\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"treatmentType\",\"type\":\"string\"}],\"name\":\"ClaimSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimId\",\"type\":\"uint256\"}],\"name\":\"ClaimVerified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"policyNumber\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"policyholder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"coverageAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"policyType\",\"type\":\"string\"}],\"name\":\"PolicyCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"claims\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"policyNumber\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"policyholder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"treatmentType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isVerified\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isPaid\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"paidAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"aabhaId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"patientAdmissionDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flightId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"flightCancellationStatus\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"flightDelayMinutes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flightDurationMinutes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"claimsCountPerYear\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_policyNumber\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_policyholder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_coverageAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endDate\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_policyType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_maxCoveragePerClaim\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_copayPercentage\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"_coveredTreatments\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"_excludedTreatments\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"_waitingPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxClaimsPerYear\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_preExistingConditionsCovered\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_maxHospitalizationDays\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxRoomRent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxICUCharges\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxOperationCharges\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxMedicineCharges\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxDiagnosticCharges\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxAmbulanceCharges\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxPreHospitalizationDays\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxPostHospitalizationDays\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_delayTimeMinutes\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_cancellationStatus\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_travelTimeHours\",\"type\":\"uint256\"}],\"name\":\"createPolicy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimId\",\"type\":\"uint256\"}],\"name\":\"getClaim\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"policyNumber\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"policyholder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"treatmentType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isVerified\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isPaid\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"paidAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"aabhaId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"patientAdmissionDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flightId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"flightCancellationStatus\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"flightDelayMinutes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flightDurationMinutes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_policyNumber\",\"type\":\"string\"}],\"name\":\"getPolicy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"policyholder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"coverageAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"policyType\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"insurer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextClaimId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextRecordId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"policies\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"policyholder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"coverageAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"policyType\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxCoveragePerClaim\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"copayPercentage\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"coveredTreatments\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"excludedTreatments\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"waitingPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimsPerYear\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"preExistingConditionsCovered\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"maxHospitalizationDays\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxRoomRent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxICUCharges\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxOperationCharges\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxMedicineCharges\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDiagnosticCharges\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmbulanceCharges\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPreHospitalizationDays\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPostHospitalizationDays\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"delayTimeMinutes\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"cancellationStatus\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"travelTimeHours\",\"type\":\"uint256\"}],\"internalType\":\"struct InsuranceClaims.PolicyTerms\",\"name\":\"terms\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"claimsCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"policyClaims\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimId\",\"type\":\"uint256\"}],\"name\":\"processClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_insurer\",\"type\":\"address\"}],\"name\":\"setInsurer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_policyNumber\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_treatmentType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_aabhaId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_patientAdmissionDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_flightId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_flightCancellationStatus\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_flightDelayMinutes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_flightDurationMinutes\",\"type\":\"uint256\"}],\"name\":\"submitClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimId\",\"type\":\"uint256\"}],\"name\":\"verifyClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/InsuranceClaims.sol\":\"InsuranceClaims\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/InsuranceClaims.sol\":{\"keccak256\":\"0x8f8ac94e02e6227892abec19886f6824715b5e393e99ef0a2a3683600c0ebb32\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ff38245a15e344d6658f0a6b83f33abb6f90673db7ff802a53856a5f51f491c\",\"dweb:/ipfs/Qmbs6fsfXEA1YRMdTt5LeRJLgv7LMZqEUzbf1FG7EC3NGT\"]}},\"version\":1}"}}}}}